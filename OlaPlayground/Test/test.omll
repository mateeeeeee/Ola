external Assert

external AssertMsg

internal data storage global_a

internal data storage global_b

internal data storage global_c

internal data storage global_d

internal data storage global_composite_and_a

internal data storage global_composite_and_b

internal data storage global_composite_and_c

internal data storage global_composite_or_a

internal data storage global_composite_or_b

internal data storage global_composite_or_c

internal data storage global_composite_xor_a

internal data storage global_composite_xor_b

internal data storage global_composite_xor_c

internal TestBitAnd: 
label0: 
InstPush - i64 reg 2
InstMove - i64 reg 2, i64 reg 1
InstSub - i64 reg 1, i64 imm 152
InstStore - i64 stack -8, i64 reg 14
InstStore - i64 stack -16, i64 reg 13
InstStore - i64 stack -24, i64 reg 12
InstMove - i64 reg 14, i64 imm 5
InstAnd - i64 reg 14, i64 imm 3
InstStore - i64 stack -32, i64 reg 14
InstLoad - i64 reg 14, i64 stack -32
InstICmp - i64 reg 14, i64 imm 1
x64::SetE - i8 reg 14
InstAnd - i8 reg 14, i8 imm 1
InstMove - i8 reg 3, i8 reg 14
InstCall - 
InstStore - i64 stack -40, i64 imm 5
InstStore - i64 stack -48, i64 imm 3
InstLoad - i64 reg 14, i64 stack -40
InstLoad - i64 reg 13, i64 stack -48
InstMove - i64 reg 12, i64 reg 14
InstAnd - i64 reg 12, i64 reg 13
InstStore - i64 stack -56, i64 reg 12
InstLoad - i64 reg 12, i64 stack -56
InstICmp - i64 reg 12, i64 imm 1
x64::SetE - i8 reg 12
InstAnd - i8 reg 12, i8 imm 1
InstMove - i8 reg 3, i8 reg 12
InstCall - 
InstLoad - i64 reg 12, i64 global_a
InstLoad - i64 reg 13, i64 global_b
InstMove - i64 reg 14, i64 reg 12
InstAnd - i64 reg 14, i64 reg 13
InstStore - i64 stack -64, i64 reg 14
InstLoad - i64 reg 14, i64 stack -64
InstICmp - i64 reg 14, i64 imm 1
x64::SetE - i8 reg 14
InstAnd - i8 reg 14, i8 imm 1
InstMove - i8 reg 3, i8 reg 14
InstCall - 
InstLoad - i64 reg 14, i64 stack -40
InstLoad - i64 reg 13, i64 global_b
InstMove - i64 reg 12, i64 reg 14
InstAnd - i64 reg 12, i64 reg 13
InstStore - i64 stack -72, i64 reg 12
InstLoad - i64 reg 12, i64 stack -72
InstICmp - i64 reg 12, i64 imm 1
x64::SetE - i8 reg 12
InstAnd - i8 reg 12, i8 imm 1
InstMove - i8 reg 3, i8 reg 12
InstCall - 
InstLoad - i64 reg 12, i64 stack -48
InstMove - i64 reg 13, i64 imm 5
InstAnd - i64 reg 13, i64 reg 12
InstStore - i64 stack -80, i64 reg 13
InstLoad - i64 reg 13, i64 stack -80
InstICmp - i64 reg 13, i64 imm 1
x64::SetE - i8 reg 13
InstAnd - i8 reg 13, i8 imm 1
InstMove - i8 reg 3, i8 reg 13
InstCall - 
InstLoad - i64 reg 13, i64 global_a
InstMove - i64 reg 12, i64 reg 13
InstAnd - i64 reg 12, i64 imm 3
InstStore - i64 stack -88, i64 reg 12
InstLoad - i64 reg 12, i64 stack -88
InstICmp - i64 reg 12, i64 imm 1
x64::SetE - i8 reg 12
InstAnd - i8 reg 12, i8 imm 1
InstMove - i8 reg 3, i8 reg 12
InstCall - 
InstStore - i64 stack -96, i64 imm 5
InstLoad - i64 reg 12, i64 stack -96
InstMove - i64 reg 13, i64 reg 12
InstAnd - i64 reg 13, i64 imm 3
InstStore - i64 stack -96, i64 reg 13
InstLoad - i64 reg 13, i64 stack -96
InstICmp - i64 reg 13, i64 imm 1
x64::SetE - i8 reg 13
InstAnd - i8 reg 13, i8 imm 1
InstMove - i8 reg 3, i8 reg 13
InstCall - 
InstStore - i64 stack -104, i64 imm 5
InstStore - i64 stack -112, i64 imm 3
InstLoad - i64 reg 13, i64 stack -104
InstLoad - i64 reg 12, i64 stack -112
InstMove - i64 reg 14, i64 reg 13
InstAnd - i64 reg 14, i64 reg 12
InstStore - i64 stack -104, i64 reg 14
InstLoad - i64 reg 14, i64 stack -104
InstICmp - i64 reg 14, i64 imm 1
x64::SetE - i8 reg 14
InstAnd - i8 reg 14, i8 imm 1
InstMove - i8 reg 3, i8 reg 14
InstCall - 
InstLoad - i64 reg 14, i64 global_composite_and_a
InstLoad - i64 reg 12, i64 global_composite_and_b
InstMove - i64 reg 13, i64 reg 14
InstAnd - i64 reg 13, i64 reg 12
InstStore - global_composite_and_a, i64 reg 13
InstLoad - i64 reg 13, i64 global_composite_and_a
InstICmp - i64 reg 13, i64 imm 1
x64::SetE - i8 reg 13
InstAnd - i8 reg 13, i8 imm 1
InstMove - i8 reg 3, i8 reg 13
InstCall - 
InstLoad - i64 reg 13, i64 global_composite_and_b
InstMove - i64 reg 12, i64 reg 13
InstAnd - i64 reg 12, i64 imm 5
InstStore - global_composite_and_b, i64 reg 12
InstLoad - i64 reg 12, i64 global_composite_and_b
InstICmp - i64 reg 12, i64 imm 1
x64::SetE - i8 reg 12
InstAnd - i8 reg 12, i8 imm 1
InstMove - i8 reg 3, i8 reg 12
InstCall - 
InstStore - i64 stack -120, i64 imm 2
InstLoad - i64 reg 12, i64 global_composite_and_c
InstLoad - i64 reg 13, i64 stack -120
InstMove - i64 reg 14, i64 reg 12
InstAnd - i64 reg 14, i64 reg 13
InstStore - global_composite_and_c, i64 reg 14
InstLoad - i64 reg 14, i64 global_composite_and_c
InstICmp - i64 reg 14, i64 imm 2
x64::SetE - i8 reg 14
InstAnd - i8 reg 14, i8 imm 1
InstMove - i8 reg 3, i8 reg 14
InstCall - 
InstJump - label1

label1: 
InstLoad - i64 reg 14, i64 stack -8
InstLoad - i64 reg 13, i64 stack -16
InstLoad - i64 reg 12, i64 stack -24
InstMove - i64 reg 1, i64 reg 2
InstPop - i64 reg 2
InstRet - 

internal TestBitOr: 
label2: 
InstPush - i64 reg 2
InstMove - i64 reg 2, i64 reg 1
InstSub - i64 reg 1, i64 imm 152
InstStore - i64 stack -8, i64 reg 14
InstStore - i64 stack -16, i64 reg 13
InstStore - i64 stack -24, i64 reg 12
InstMove - i64 reg 14, i64 imm 5
InstOr - i64 reg 14, i64 imm 3
InstStore - i64 stack -32, i64 reg 14
InstLoad - i64 reg 14, i64 stack -32
InstICmp - i64 reg 14, i64 imm 7
x64::SetE - i8 reg 14
InstAnd - i8 reg 14, i8 imm 1
InstMove - i8 reg 3, i8 reg 14
InstCall - 
InstStore - i64 stack -40, i64 imm 5
InstStore - i64 stack -48, i64 imm 3
InstLoad - i64 reg 14, i64 stack -40
InstLoad - i64 reg 13, i64 stack -48
InstMove - i64 reg 12, i64 reg 14
InstOr - i64 reg 12, i64 reg 13
InstStore - i64 stack -56, i64 reg 12
InstLoad - i64 reg 12, i64 stack -56
InstICmp - i64 reg 12, i64 imm 7
x64::SetE - i8 reg 12
InstAnd - i8 reg 12, i8 imm 1
InstMove - i8 reg 3, i8 reg 12
InstCall - 
InstLoad - i64 reg 12, i64 global_a
InstLoad - i64 reg 13, i64 global_b
InstMove - i64 reg 14, i64 reg 12
InstOr - i64 reg 14, i64 reg 13
InstStore - i64 stack -64, i64 reg 14
InstLoad - i64 reg 14, i64 stack -64
InstICmp - i64 reg 14, i64 imm 7
x64::SetE - i8 reg 14
InstAnd - i8 reg 14, i8 imm 1
InstMove - i8 reg 3, i8 reg 14
InstCall - 
InstLoad - i64 reg 14, i64 stack -40
InstLoad - i64 reg 13, i64 global_b
InstMove - i64 reg 12, i64 reg 14
InstOr - i64 reg 12, i64 reg 13
InstStore - i64 stack -72, i64 reg 12
InstLoad - i64 reg 12, i64 stack -72
InstICmp - i64 reg 12, i64 imm 7
x64::SetE - i8 reg 12
InstAnd - i8 reg 12, i8 imm 1
InstMove - i8 reg 3, i8 reg 12
InstCall - 
InstLoad - i64 reg 12, i64 stack -48
InstMove - i64 reg 13, i64 imm 5
InstOr - i64 reg 13, i64 reg 12
InstStore - i64 stack -80, i64 reg 13
InstLoad - i64 reg 13, i64 stack -80
InstICmp - i64 reg 13, i64 imm 7
x64::SetE - i8 reg 13
InstAnd - i8 reg 13, i8 imm 1
InstMove - i8 reg 3, i8 reg 13
InstCall - 
InstLoad - i64 reg 13, i64 global_a
InstMove - i64 reg 12, i64 reg 13
InstOr - i64 reg 12, i64 imm 3
InstStore - i64 stack -88, i64 reg 12
InstLoad - i64 reg 12, i64 stack -88
InstICmp - i64 reg 12, i64 imm 7
x64::SetE - i8 reg 12
InstAnd - i8 reg 12, i8 imm 1
InstMove - i8 reg 3, i8 reg 12
InstCall - 
InstStore - i64 stack -96, i64 imm 5
InstLoad - i64 reg 12, i64 stack -96
InstMove - i64 reg 13, i64 reg 12
InstOr - i64 reg 13, i64 imm 3
InstStore - i64 stack -96, i64 reg 13
InstLoad - i64 reg 13, i64 stack -96
InstICmp - i64 reg 13, i64 imm 7
x64::SetE - i8 reg 13
InstAnd - i8 reg 13, i8 imm 1
InstMove - i8 reg 3, i8 reg 13
InstCall - 
InstStore - i64 stack -104, i64 imm 5
InstStore - i64 stack -112, i64 imm 3
InstLoad - i64 reg 13, i64 stack -104
InstLoad - i64 reg 12, i64 stack -112
InstMove - i64 reg 14, i64 reg 13
InstOr - i64 reg 14, i64 reg 12
InstStore - i64 stack -104, i64 reg 14
InstLoad - i64 reg 14, i64 stack -104
InstICmp - i64 reg 14, i64 imm 7
x64::SetE - i8 reg 14
InstAnd - i8 reg 14, i8 imm 1
InstMove - i8 reg 3, i8 reg 14
InstCall - 
InstLoad - i64 reg 14, i64 global_composite_or_a
InstLoad - i64 reg 12, i64 global_composite_or_b
InstMove - i64 reg 13, i64 reg 14
InstOr - i64 reg 13, i64 reg 12
InstStore - global_composite_or_a, i64 reg 13
InstLoad - i64 reg 13, i64 global_composite_or_a
InstICmp - i64 reg 13, i64 imm 7
x64::SetE - i8 reg 13
InstAnd - i8 reg 13, i8 imm 1
InstMove - i8 reg 3, i8 reg 13
InstCall - 
InstLoad - i64 reg 13, i64 global_composite_or_b
InstMove - i64 reg 12, i64 reg 13
InstOr - i64 reg 12, i64 imm 5
InstStore - global_composite_or_b, i64 reg 12
InstLoad - i64 reg 12, i64 global_composite_or_b
InstICmp - i64 reg 12, i64 imm 7
x64::SetE - i8 reg 12
InstAnd - i8 reg 12, i8 imm 1
InstMove - i8 reg 3, i8 reg 12
InstCall - 
InstStore - i64 stack -120, i64 imm 2
InstLoad - i64 reg 12, i64 global_composite_or_c
InstLoad - i64 reg 13, i64 stack -120
InstMove - i64 reg 14, i64 reg 12
InstOr - i64 reg 14, i64 reg 13
InstStore - global_composite_or_c, i64 reg 14
InstLoad - i64 reg 14, i64 global_composite_or_c
InstICmp - i64 reg 14, i64 imm 7
x64::SetE - i8 reg 14
InstAnd - i8 reg 14, i8 imm 1
InstMove - i8 reg 3, i8 reg 14
InstCall - 
InstJump - label3

label3: 
InstLoad - i64 reg 14, i64 stack -8
InstLoad - i64 reg 13, i64 stack -16
InstLoad - i64 reg 12, i64 stack -24
InstMove - i64 reg 1, i64 reg 2
InstPop - i64 reg 2
InstRet - 

internal TestBitXor: 
label4: 
InstPush - i64 reg 2
InstMove - i64 reg 2, i64 reg 1
InstSub - i64 reg 1, i64 imm 152
InstStore - i64 stack -8, i64 reg 14
InstStore - i64 stack -16, i64 reg 13
InstStore - i64 stack -24, i64 reg 12
InstMove - i64 reg 14, i64 imm 5
InstXor - i64 reg 14, i64 imm 3
InstStore - i64 stack -32, i64 reg 14
InstLoad - i64 reg 14, i64 stack -32
InstICmp - i64 reg 14, i64 imm 6
x64::SetE - i8 reg 14
InstAnd - i8 reg 14, i8 imm 1
InstMove - i8 reg 3, i8 reg 14
InstCall - 
InstStore - i64 stack -40, i64 imm 5
InstStore - i64 stack -48, i64 imm 3
InstLoad - i64 reg 14, i64 stack -40
InstLoad - i64 reg 13, i64 stack -48
InstMove - i64 reg 12, i64 reg 14
InstXor - i64 reg 12, i64 reg 13
InstStore - i64 stack -56, i64 reg 12
InstLoad - i64 reg 12, i64 stack -56
InstICmp - i64 reg 12, i64 imm 6
x64::SetE - i8 reg 12
InstAnd - i8 reg 12, i8 imm 1
InstMove - i8 reg 3, i8 reg 12
InstCall - 
InstLoad - i64 reg 12, i64 global_a
InstLoad - i64 reg 13, i64 global_b
InstMove - i64 reg 14, i64 reg 12
InstXor - i64 reg 14, i64 reg 13
InstStore - i64 stack -64, i64 reg 14
InstLoad - i64 reg 14, i64 stack -64
InstICmp - i64 reg 14, i64 imm 6
x64::SetE - i8 reg 14
InstAnd - i8 reg 14, i8 imm 1
InstMove - i8 reg 3, i8 reg 14
InstCall - 
InstLoad - i64 reg 14, i64 stack -40
InstLoad - i64 reg 13, i64 global_b
InstMove - i64 reg 12, i64 reg 14
InstXor - i64 reg 12, i64 reg 13
InstStore - i64 stack -72, i64 reg 12
InstLoad - i64 reg 12, i64 stack -72
InstICmp - i64 reg 12, i64 imm 6
x64::SetE - i8 reg 12
InstAnd - i8 reg 12, i8 imm 1
InstMove - i8 reg 3, i8 reg 12
InstCall - 
InstLoad - i64 reg 12, i64 stack -48
InstMove - i64 reg 13, i64 imm 5
InstXor - i64 reg 13, i64 reg 12
InstStore - i64 stack -80, i64 reg 13
InstLoad - i64 reg 13, i64 stack -80
InstICmp - i64 reg 13, i64 imm 6
x64::SetE - i8 reg 13
InstAnd - i8 reg 13, i8 imm 1
InstMove - i8 reg 3, i8 reg 13
InstCall - 
InstLoad - i64 reg 13, i64 global_a
InstMove - i64 reg 12, i64 reg 13
InstXor - i64 reg 12, i64 imm 3
InstStore - i64 stack -88, i64 reg 12
InstLoad - i64 reg 12, i64 stack -88
InstICmp - i64 reg 12, i64 imm 6
x64::SetE - i8 reg 12
InstAnd - i8 reg 12, i8 imm 1
InstMove - i8 reg 3, i8 reg 12
InstCall - 
InstStore - i64 stack -96, i64 imm 5
InstLoad - i64 reg 12, i64 stack -96
InstMove - i64 reg 13, i64 reg 12
InstXor - i64 reg 13, i64 imm 3
InstStore - i64 stack -96, i64 reg 13
InstLoad - i64 reg 13, i64 stack -96
InstICmp - i64 reg 13, i64 imm 6
x64::SetE - i8 reg 13
InstAnd - i8 reg 13, i8 imm 1
InstMove - i8 reg 3, i8 reg 13
InstCall - 
InstStore - i64 stack -104, i64 imm 5
InstStore - i64 stack -112, i64 imm 3
InstLoad - i64 reg 13, i64 stack -104
InstLoad - i64 reg 12, i64 stack -112
InstMove - i64 reg 14, i64 reg 13
InstXor - i64 reg 14, i64 reg 12
InstStore - i64 stack -104, i64 reg 14
InstLoad - i64 reg 14, i64 stack -104
InstICmp - i64 reg 14, i64 imm 6
x64::SetE - i8 reg 14
InstAnd - i8 reg 14, i8 imm 1
InstMove - i8 reg 3, i8 reg 14
InstCall - 
InstLoad - i64 reg 14, i64 global_composite_xor_a
InstLoad - i64 reg 12, i64 global_composite_xor_b
InstMove - i64 reg 13, i64 reg 14
InstXor - i64 reg 13, i64 reg 12
InstStore - global_composite_xor_a, i64 reg 13
InstLoad - i64 reg 13, i64 global_composite_xor_a
InstICmp - i64 reg 13, i64 imm 6
x64::SetE - i8 reg 13
InstAnd - i8 reg 13, i8 imm 1
InstMove - i8 reg 3, i8 reg 13
InstCall - 
InstLoad - i64 reg 13, i64 global_composite_xor_b
InstMove - i64 reg 12, i64 reg 13
InstXor - i64 reg 12, i64 imm 5
InstStore - global_composite_xor_b, i64 reg 12
InstLoad - i64 reg 12, i64 global_composite_xor_b
InstICmp - i64 reg 12, i64 imm 6
x64::SetE - i8 reg 12
InstAnd - i8 reg 12, i8 imm 1
InstMove - i8 reg 3, i8 reg 12
InstCall - 
InstStore - i64 stack -120, i64 imm 2
InstLoad - i64 reg 12, i64 global_composite_xor_c
InstLoad - i64 reg 13, i64 stack -120
InstMove - i64 reg 14, i64 reg 12
InstXor - i64 reg 14, i64 reg 13
InstStore - global_composite_xor_c, i64 reg 14
InstLoad - i64 reg 14, i64 global_composite_xor_c
InstICmp - i64 reg 14, i64 imm 5
x64::SetE - i8 reg 14
InstAnd - i8 reg 14, i8 imm 1
InstMove - i8 reg 3, i8 reg 14
InstCall - 
InstJump - label5

label5: 
InstLoad - i64 reg 14, i64 stack -8
InstLoad - i64 reg 13, i64 stack -16
InstLoad - i64 reg 12, i64 stack -24
InstMove - i64 reg 1, i64 reg 2
InstPop - i64 reg 2
InstRet - 

internal TestBitNot: 
label6: 
InstPush - i64 reg 2
InstMove - i64 reg 2, i64 reg 1
InstSub - i64 reg 1, i64 imm 136
InstStore - i64 stack -8, i64 reg 14
InstStore - i64 stack -16, i64 reg 13
InstStore - i64 stack -24, i64 imm -6
InstLoad - i64 reg 14, i64 stack -24
InstICmp - i64 reg 14, i64 imm -6
x64::SetE - i8 reg 14
InstAnd - i8 reg 14, i8 imm 1
InstMove - i8 reg 3, i8 reg 14
InstCall - 
InstStore - i64 stack -32, i64 imm 0
InstLoad - i64 reg 14, i64 stack -32
InstICmp - i64 reg 14, i64 imm 0
x64::SetE - i8 reg 14
InstAnd - i8 reg 14, i8 imm 1
InstMove - i8 reg 3, i8 reg 14
InstCall - 
InstStore - i64 stack -40, i64 imm -1
InstLoad - i64 reg 14, i64 stack -40
InstICmp - i64 reg 14, i64 imm -1
x64::SetE - i8 reg 14
InstAnd - i8 reg 14, i8 imm 1
InstMove - i8 reg 3, i8 reg 14
InstCall - 
InstStore - i64 stack -48, i64 imm -256
InstLoad - i64 reg 14, i64 stack -48
InstICmp - i64 reg 14, i64 imm -256
x64::SetE - i8 reg 14
InstAnd - i8 reg 14, i8 imm 1
InstMove - i8 reg 3, i8 reg 14
InstCall - 
InstStore - i64 stack -56, i64 imm -65536
InstLoad - i64 reg 14, i64 stack -56
InstICmp - i64 reg 14, i64 imm -65536
x64::SetE - i8 reg 14
InstAnd - i8 reg 14, i8 imm 1
InstMove - i8 reg 3, i8 reg 14
InstCall - 
InstStore - i64 stack -64, i64 imm 5
InstLoad - i64 reg 14, i64 stack -64
InstMove - i64 reg 13, i64 reg 14
InstNot - i64 reg 13
InstStore - i64 stack -72, i64 reg 13
InstLoad - i64 reg 13, i64 stack -72
InstICmp - i64 reg 13, i64 imm -6
x64::SetE - i8 reg 13
InstAnd - i8 reg 13, i8 imm 1
InstMove - i8 reg 3, i8 reg 13
InstCall - 
InstStore - i64 stack -80, i64 imm -1
InstLoad - i64 reg 13, i64 stack -80
InstMove - i64 reg 14, i64 reg 13
InstNot - i64 reg 14
InstStore - i64 stack -88, i64 reg 14
InstLoad - i64 reg 14, i64 stack -88
InstICmp - i64 reg 14, i64 imm 0
x64::SetE - i8 reg 14
InstAnd - i8 reg 14, i8 imm 1
InstMove - i8 reg 3, i8 reg 14
InstCall - 
InstLoad - i64 reg 14, i64 global_a
InstMove - i64 reg 13, i64 reg 14
InstNot - i64 reg 13
InstStore - i64 stack -96, i64 reg 13
InstLoad - i64 reg 13, i64 stack -96
InstICmp - i64 reg 13, i64 imm -6
x64::SetE - i8 reg 13
InstAnd - i8 reg 13, i8 imm 1
InstMove - i8 reg 3, i8 reg 13
InstCall - 
InstLoad - i64 reg 13, i64 global_c
InstMove - i64 reg 14, i64 reg 13
InstNot - i64 reg 14
InstStore - i64 stack -104, i64 reg 14
InstLoad - i64 reg 14, i64 stack -104
InstICmp - i64 reg 14, i64 imm -8
x64::SetE - i8 reg 14
InstAnd - i8 reg 14, i8 imm 1
InstMove - i8 reg 3, i8 reg 14
InstCall - 
InstJump - label7

label7: 
InstLoad - i64 reg 14, i64 stack -8
InstLoad - i64 reg 13, i64 stack -16
InstMove - i64 reg 1, i64 reg 2
InstPop - i64 reg 2
InstRet - 

external main: 
label8: 
InstPush - i64 reg 2
InstMove - i64 reg 2, i64 reg 1
InstSub - i64 reg 1, i64 imm 48
InstStore - i64 stack -8, i64 reg 14
InstCall - 
InstCall - 
InstCall - 
InstCall - 
InstStore - i64 stack -16, i64 imm 0
InstJump - label10

label9: 

label10: 
InstLoad - i64 reg 14, i64 stack -16
InstMove - i64 reg 0, i64 reg 14
InstLoad - i64 reg 14, i64 stack -8
InstMove - i64 reg 1, i64 reg 2
InstPop - i64 reg 2
InstRet - 

