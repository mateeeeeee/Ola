external Assert

external AssertMsg

internal TestDoWhileLoopInt: 
label0: 
InstPush - i64 reg 2
InstMove - i64 reg 2, i64 reg 1
InstSub - i64 reg 1, i64 imm 80
InstStore - i64 stack -8, i64 reg 6
InstStore - i64 stack -16, i64 reg 14
InstStore - i64 stack -24, i64 reg 13
InstStore - i64 stack -32, i64 reg 12
InstStore - i64 stack -40, i64 reg 7
InstMove - i64 reg 14, i64 imm 1
InstMove - i64 reg 13, i64 imm 0
InstJump - label1

label1: 
InstMove - i64 reg 12, i64 reg 13
InstAdd - i64 reg 12, i64 reg 14
InstStore - ptr stack -48, i64 reg 14
InstMove - i64 reg 7, i64 reg 14
InstAdd - i64 reg 7, i64 imm 1
InstJump - label2

label2: 
InstICmp - i64 reg 7, i64 imm 5
x64::SetLE - i8 reg 6
InstAnd - i8 reg 6, i8 imm 1
InstTest - i8 reg 6, i8 reg 6
InstMove - i64 reg 14, i64 reg 7
InstMove - i64 reg 13, i64 reg 12
InstJNE - label1
InstJump - label3

label3: 
InstICmp - i64 reg 12, i64 imm 15
x64::SetE - i8 reg 12
InstAnd - i8 reg 12, i8 imm 1
InstMove - i8 reg 3, i8 reg 12
InstCall - 
InstJump - label4

label4: 
InstLoad - i64 reg 6, i64 stack -8
InstLoad - i64 reg 14, i64 stack -16
InstLoad - i64 reg 13, i64 stack -24
InstLoad - i64 reg 12, i64 stack -32
InstLoad - i64 reg 7, i64 stack -40
InstMove - i64 reg 1, i64 reg 2
InstPop - i64 reg 2
InstRet - 

internal TestDoWhileLoopBool: 
label5: 
InstPush - i64 reg 2
InstMove - i64 reg 2, i64 reg 1
InstSub - i64 reg 1, i64 imm 72
InstStore - i64 stack -8, i64 reg 14
InstStore - i64 stack -16, i64 reg 13
InstStore - i64 stack -24, i64 reg 12
InstStore - i64 stack -32, i64 reg 7
InstMove - i64 reg 14, i64 imm 0
InstMove - i8 reg 13, i64 imm 1
InstJump - label6

label6: 
InstStore - ptr stack -40, i64 reg 14
InstMove - i64 reg 12, i64 reg 14
InstAdd - i64 reg 12, i64 imm 1
InstICmp - i64 reg 12, i64 imm 3
x64::SetE - i8 reg 7
InstAnd - i8 reg 7, i8 imm 1
InstTest - i8 reg 7, i8 reg 7
InstJNE - label9
InstMove - i8 reg 7, i8 reg 13
InstJump - label10

label7: 
InstTest - i8 reg 7, i8 reg 7
InstMove - i64 reg 14, i64 reg 12
InstMove - i8 reg 13, i8 reg 7
InstJNE - label6
InstJump - label8

label8: 
InstICmp - i64 reg 12, i64 imm 3
x64::SetE - i8 reg 12
InstAnd - i8 reg 12, i8 imm 1
InstMove - i8 reg 3, i8 reg 12
InstCall - 
InstJump - label11

label9: 
InstMove - i8 reg 7, i64 imm 0
InstJump - label10

label10: 
InstJump - label7

label11: 
InstLoad - i64 reg 14, i64 stack -8
InstLoad - i64 reg 13, i64 stack -16
InstLoad - i64 reg 12, i64 stack -24
InstLoad - i64 reg 7, i64 stack -32
InstMove - i64 reg 1, i64 reg 2
InstPop - i64 reg 2
InstRet - 

internal TestNestedDoWhileLoops: 
label12: 
InstPush - i64 reg 2
InstMove - i64 reg 2, i64 reg 1
InstSub - i64 reg 1, i64 imm 88
InstStore - i64 stack -8, i64 reg 6
InstStore - i64 stack -16, i64 reg 14
InstStore - i64 stack -24, i64 reg 13
InstStore - i64 stack -32, i64 reg 12
InstStore - i64 stack -40, i64 reg 7
InstMove - i64 reg 14, i64 imm 0
InstMove - i64 reg 13, i64 imm 0
InstJump - label13

label13: 
InstMove - i64 reg 12, i64 reg 14
InstJump - label16

label14: 
InstICmp - i64 reg 12, i64 imm 3
x64::SetLT - i8 reg 6
InstAnd - i8 reg 6, i8 imm 1
InstTest - i8 reg 6, i8 reg 6
InstMove - i64 reg 14, i64 reg 7
InstMove - i64 reg 13, i64 reg 12
InstJNE - label13
InstJump - label15

label15: 
InstICmp - i64 reg 12, i64 imm 3
x64::SetE - i8 reg 12
InstAnd - i8 reg 12, i8 imm 1
InstMove - i8 reg 3, i8 reg 12
InstCall - 
InstICmp - i64 reg 7, i64 imm 4
x64::SetE - i8 reg 7
InstAnd - i8 reg 7, i8 imm 1
InstMove - i8 reg 3, i8 reg 7
InstCall - 
InstJump - label19

label16: 
InstStore - ptr stack -56, i64 reg 12
InstMove - i64 reg 7, i64 reg 12
InstAdd - i64 reg 7, i64 imm 1
InstJump - label17

label17: 
InstICmp - i64 reg 7, i64 imm 2
x64::SetLT - i8 reg 6
InstAnd - i8 reg 6, i8 imm 1
InstTest - i8 reg 6, i8 reg 6
InstMove - i64 reg 12, i64 reg 7
InstJNE - label16
InstJump - label18

label18: 
InstStore - ptr stack -48, i64 reg 13
InstMove - i64 reg 12, i64 reg 13
InstAdd - i64 reg 12, i64 imm 1
InstJump - label14

label19: 
InstLoad - i64 reg 6, i64 stack -8
InstLoad - i64 reg 14, i64 stack -16
InstLoad - i64 reg 13, i64 stack -24
InstLoad - i64 reg 12, i64 stack -32
InstLoad - i64 reg 7, i64 stack -40
InstMove - i64 reg 1, i64 reg 2
InstPop - i64 reg 2
InstRet - 

internal TestDoWhileLoopWithBreak: 
label20: 
InstPush - i64 reg 2
InstMove - i64 reg 2, i64 reg 1
InstSub - i64 reg 1, i64 imm 80
InstStore - i64 stack -8, i64 reg 6
InstStore - i64 stack -16, i64 reg 14
InstStore - i64 stack -24, i64 reg 13
InstStore - i64 stack -32, i64 reg 12
InstStore - i64 stack -40, i64 reg 7
InstMove - i64 reg 14, i64 imm 0
InstMove - i64 reg 13, i64 imm 1
InstJump - label21

label21: 
InstMove - i64 reg 12, i64 reg 14
InstAdd - i64 reg 12, i64 reg 13
InstStore - ptr stack -48, i64 reg 13
InstMove - i64 reg 7, i64 reg 13
InstAdd - i64 reg 7, i64 imm 1
InstICmp - i64 reg 7, i64 imm 5
x64::SetGT - i8 reg 6
InstAnd - i8 reg 6, i8 imm 1
InstTest - i8 reg 6, i8 reg 6
InstJNE - label23
InstJump - label22

label22: 
InstMove - i64 reg 14, i64 reg 12
InstMove - i64 reg 13, i64 reg 7
InstJump - label21

label23: 
InstICmp - i64 reg 12, i64 imm 15
x64::SetE - i8 reg 12
InstAnd - i8 reg 12, i8 imm 1
InstMove - i8 reg 3, i8 reg 12
InstCall - 
InstJump - label24

label24: 
InstLoad - i64 reg 6, i64 stack -8
InstLoad - i64 reg 14, i64 stack -16
InstLoad - i64 reg 13, i64 stack -24
InstLoad - i64 reg 12, i64 stack -32
InstLoad - i64 reg 7, i64 stack -40
InstMove - i64 reg 1, i64 reg 2
InstPop - i64 reg 2
InstRet - 

internal TestDoWhileLoopWithContinue: 
label25: 
InstPush - i64 reg 2
InstMove - i64 reg 2, i64 reg 1
InstSub - i64 reg 1, i64 imm 80
InstStore - i64 stack -8, i64 reg 6
InstStore - i64 stack -16, i64 reg 14
InstStore - i64 stack -24, i64 reg 13
InstStore - i64 stack -32, i64 reg 12
InstStore - i64 stack -40, i64 reg 7
InstMove - i64 reg 14, i64 imm 0
InstMove - i64 reg 13, i64 imm 0
InstJump - label26

label26: 
InstStore - ptr stack -48, i64 reg 14
InstMove - i64 reg 12, i64 reg 14
InstAdd - i64 reg 12, i64 imm 1
InstMove - i64 reg 0, i64 reg 12
x64::Cqo - 
InstMove - i64 reg 7, i64 imm 2
InstSDiv - i64 reg 7
InstMove - i64 reg 7, i64 reg 4
InstICmp - i64 reg 7, i64 imm 0
x64::SetE - i8 reg 7
InstAnd - i8 reg 7, i8 imm 1
InstTest - i8 reg 7, i8 reg 7
InstJNE - label29
InstJump - label30

label27: 
InstICmp - i64 reg 12, i64 imm 5
x64::SetLT - i8 reg 7
InstAnd - i8 reg 7, i8 imm 1
InstTest - i8 reg 7, i8 reg 7
InstMove - i64 reg 14, i64 reg 12
InstMove - i64 reg 13, i64 reg 6
InstJNE - label26
InstJump - label28

label28: 
InstICmp - i64 reg 6, i64 imm 9
x64::SetE - i8 reg 12
InstAnd - i8 reg 12, i8 imm 1
InstMove - i8 reg 3, i8 reg 12
InstCall - 
InstJump - label31

label29: 
InstMove - i64 reg 6, i64 reg 13
InstJump - label27

label30: 
InstMove - i64 reg 7, i64 reg 13
InstAdd - i64 reg 7, i64 reg 12
InstMove - i64 reg 6, i64 reg 7
InstJump - label27

label31: 
InstLoad - i64 reg 6, i64 stack -8
InstLoad - i64 reg 14, i64 stack -16
InstLoad - i64 reg 13, i64 stack -24
InstLoad - i64 reg 12, i64 stack -32
InstLoad - i64 reg 7, i64 stack -40
InstMove - i64 reg 1, i64 reg 2
InstPop - i64 reg 2
InstRet - 

internal TestEmptyDoWhileLoop: 
label32: 
InstPush - i64 reg 2
InstMove - i64 reg 2, i64 reg 1
InstSub - i64 reg 1, i64 imm 56
InstStore - i64 stack -8, i64 reg 14
InstStore - i64 stack -16, i64 reg 13
InstStore - i64 stack -24, i64 reg 12
InstMove - i64 reg 14, i64 imm 0
InstJump - label33

label33: 
InstJump - label34

label34: 
InstMove - i64 reg 13, i64 reg 14
InstAdd - i64 reg 13, i64 imm 1
InstICmp - i64 reg 13, i64 imm 2
x64::SetLT - i8 reg 12
InstAnd - i8 reg 12, i8 imm 1
InstTest - i8 reg 12, i8 reg 12
InstMove - i64 reg 14, i64 reg 13
InstJNE - label33
InstJump - label35

label35: 
InstICmp - i64 reg 13, i64 imm 2
x64::SetE - i8 reg 13
InstAnd - i8 reg 13, i8 imm 1
InstMove - i8 reg 3, i8 reg 13
InstCall - 
InstJump - label36

label36: 
InstLoad - i64 reg 14, i64 stack -8
InstLoad - i64 reg 13, i64 stack -16
InstLoad - i64 reg 12, i64 stack -24
InstMove - i64 reg 1, i64 reg 2
InstPop - i64 reg 2
InstRet - 

internal TestDoWhileLoopBoundary: 
label37: 
InstPush - i64 reg 2
InstMove - i64 reg 2, i64 reg 1
InstSub - i64 reg 1, i64 imm 56
InstStore - i64 stack -8, i64 reg 14
InstStore - i64 stack -16, i64 reg 13
InstMove - i64 reg 14, i64 imm 0
InstJump - label38

label38: 
InstStore - ptr stack -24, i64 reg 14
InstMove - i64 reg 13, i64 reg 14
InstAdd - i64 reg 13, i64 imm 1
InstJump - label39

label39: 
InstICmp - i64 reg 13, i64 imm 1
x64::SetE - i8 reg 13
InstAnd - i8 reg 13, i8 imm 1
InstMove - i8 reg 3, i8 reg 13
InstCall - 
InstJump - label40

label40: 
InstLoad - i64 reg 14, i64 stack -8
InstLoad - i64 reg 13, i64 stack -16
InstMove - i64 reg 1, i64 reg 2
InstPop - i64 reg 2
InstRet - 

internal TestDoWhileLoopWithMultipleVariables: 
label41: 
InstPush - i64 reg 2
InstMove - i64 reg 2, i64 reg 1
InstSub - i64 reg 1, i64 imm 32
InstStore - i64 stack -8, i64 reg 14
InstStore - i64 stack -16, i64 reg 13
InstStore - i64 stack -24, i64 reg 12
InstStore - i64 stack -32, i64 reg 7
InstMove - i64 reg 14, i64 imm 1
InstMove - i64 reg 13, i64 imm 1
InstJump - label42

label42: 
InstMove - i64 reg 12, i64 reg 13
InstAdd - i64 reg 12, i64 reg 14
InstJump - label43

label43: 
InstICmp - i64 reg 12, i64 imm 10
x64::SetLT - i8 reg 7
InstAnd - i8 reg 7, i8 imm 1
InstTest - i8 reg 7, i8 reg 7
InstMove - i64 reg 7, i64 reg 14
InstMove - i64 reg 14, i64 reg 12
InstMove - i64 reg 13, i64 reg 7
InstJNE - label42
InstJump - label44

label44: 
InstLoad - i64 reg 14, i64 stack -8
InstLoad - i64 reg 13, i64 stack -16
InstLoad - i64 reg 12, i64 stack -24
InstLoad - i64 reg 7, i64 stack -32
InstMove - i64 reg 1, i64 reg 2
InstPop - i64 reg 2
InstRet - 

internal TestDoWhileLoopComplexCondition: 
label45: 
InstPush - i64 reg 2
InstMove - i64 reg 2, i64 reg 1
InstSub - i64 reg 1, i64 imm 104
InstStore - i64 stack -8, i64 reg 6
InstStore - i64 stack -16, i64 reg 14
InstStore - i64 stack -24, i64 reg 5
InstStore - i64 stack -32, i64 reg 13
InstStore - i64 stack -40, i64 reg 12
InstStore - i64 stack -48, i64 reg 7
InstMove - i64 reg 14, i64 imm 3
InstMove - i64 reg 13, i64 imm 0
InstJump - label46

label46: 
InstStore - ptr stack -56, i64 reg 13
InstMove - i64 reg 12, i64 reg 13
InstAdd - i64 reg 12, i64 imm 1
InstStore - ptr stack -64, i64 reg 14
InstStore - i64 stack -72, i64 reg 14
InstSub - i64 stack -72, i64 imm 1
InstJump - label47

label47: 
InstICmp - i64 reg 12, i64 imm 3
x64::SetLT - i8 reg 6
InstAnd - i8 reg 6, i8 imm 1
InstICmp - i64 stack -72, i64 imm 0
x64::SetGT - i8 reg 5
InstAnd - i8 reg 5, i8 imm 1
InstMove - i8 reg 7, i8 reg 6
InstAnd - i8 reg 7, i8 reg 5
InstICmp - i8 reg 7, i64 imm 0
x64::SetNE - i8 reg 7
InstAnd - i8 reg 7, i8 imm 1
InstTest - i8 reg 7, i8 reg 7
InstLoad - i64 reg 14, i64 stack -72
InstMove - i64 reg 13, i64 reg 12
InstJNE - label46
InstJump - label48

label48: 
InstICmp - i64 reg 12, i64 imm 3
x64::SetE - i8 reg 12
InstAnd - i8 reg 12, i8 imm 1
InstICmp - i64 stack -72, i64 imm 0
x64::SetE - i8 reg 7
InstAnd - i8 reg 7, i8 imm 1
InstMove - i8 reg 13, i8 reg 12
InstAnd - i8 reg 13, i8 reg 7
InstICmp - i8 reg 13, i64 imm 0
x64::SetNE - i8 reg 13
InstAnd - i8 reg 13, i8 imm 1
InstMove - i8 reg 3, i8 reg 13
InstCall - 
InstJump - label49

label49: 
InstLoad - i64 reg 6, i64 stack -8
InstLoad - i64 reg 14, i64 stack -16
InstLoad - i64 reg 5, i64 stack -24
InstLoad - i64 reg 13, i64 stack -32
InstLoad - i64 reg 12, i64 stack -40
InstLoad - i64 reg 7, i64 stack -48
InstMove - i64 reg 1, i64 reg 2
InstPop - i64 reg 2
InstRet - 

internal TestDoWhileLoopChangingCondition: 
label50: 
InstPush - i64 reg 2
InstMove - i64 reg 2, i64 reg 1
InstSub - i64 reg 1, i64 imm 80
InstStore - i64 stack -8, i64 reg 6
InstStore - i64 stack -16, i64 reg 14
InstStore - i64 stack -24, i64 reg 13
InstStore - i64 stack -32, i64 reg 12
InstStore - i64 stack -40, i64 reg 7
InstMove - i64 reg 14, i64 imm 0
InstMove - i64 reg 13, i64 imm 0
InstJump - label51

label51: 
InstStore - ptr stack -48, i64 reg 13
InstMove - i64 reg 12, i64 reg 13
InstAdd - i64 reg 12, i64 imm 1
InstICmp - i64 reg 12, i64 imm 3
x64::SetE - i8 reg 7
InstAnd - i8 reg 7, i8 imm 1
InstTest - i8 reg 7, i8 reg 7
InstJNE - label54
InstMove - i64 reg 7, i64 reg 12
InstJump - label55

label52: 
InstICmp - i64 reg 7, i64 imm 5
x64::SetLT - i8 reg 6
InstAnd - i8 reg 6, i8 imm 1
InstTest - i8 reg 6, i8 reg 6
InstMove - i64 reg 14, i64 reg 12
InstMove - i64 reg 13, i64 reg 7
InstJNE - label51
InstJump - label53

label53: 
InstICmp - i64 reg 12, i64 imm 13
x64::SetE - i8 reg 12
InstAnd - i8 reg 12, i8 imm 1
InstMove - i8 reg 3, i8 reg 12
InstCall - 
InstJump - label56

label54: 
InstMove - i64 reg 7, i64 imm 10
InstJump - label55

label55: 
InstMove - i64 reg 12, i64 reg 14
InstAdd - i64 reg 12, i64 reg 7
InstJump - label52

label56: 
InstLoad - i64 reg 6, i64 stack -8
InstLoad - i64 reg 14, i64 stack -16
InstLoad - i64 reg 13, i64 stack -24
InstLoad - i64 reg 12, i64 stack -32
InstLoad - i64 reg 7, i64 stack -40
InstMove - i64 reg 1, i64 reg 2
InstPop - i64 reg 2
InstRet - 

internal TestDoWhileLoopMultipleExits: 
label57: 
InstPush - i64 reg 2
InstMove - i64 reg 2, i64 reg 1
InstSub - i64 reg 1, i64 imm 64
InstStore - i64 stack -8, i64 reg 14
InstStore - i64 stack -16, i64 reg 13
InstStore - i64 stack -24, i64 reg 12
InstMove - i64 reg 14, i64 imm 0
InstJump - label58

label58: 
InstStore - ptr stack -32, i64 reg 14
InstMove - i64 reg 13, i64 reg 14
InstAdd - i64 reg 13, i64 imm 1
InstICmp - i64 reg 13, i64 imm 5
x64::SetE - i8 reg 12
InstAnd - i8 reg 12, i8 imm 1
InstTest - i8 reg 12, i8 reg 12
InstJNE - label61
InstJump - label62

label59: 
InstMove - i64 reg 14, i64 reg 13
InstJump - label58

label60: 
InstICmp - i64 reg 13, i64 imm 5
x64::SetE - i8 reg 13
InstAnd - i8 reg 13, i8 imm 1
InstMove - i8 reg 3, i8 reg 13
InstCall - 
InstMove - i8 reg 3, i8 reg 14
InstCall - 
InstJump - label64

label61: 
InstMove - i8 reg 14, i64 imm 1
InstJump - label60

label62: 
InstICmp - i64 reg 13, i64 imm 10
x64::SetGT - i8 reg 12
InstAnd - i8 reg 12, i8 imm 1
InstTest - i8 reg 12, i8 reg 12
InstJNE - label63
InstJump - label59

label63: 
InstMove - i8 reg 14, i64 imm 0
InstJump - label60

label64: 
InstLoad - i64 reg 14, i64 stack -8
InstLoad - i64 reg 13, i64 stack -16
InstLoad - i64 reg 12, i64 stack -24
InstMove - i64 reg 1, i64 reg 2
InstPop - i64 reg 2
InstRet - 

external main: 
label65: 
InstPush - i64 reg 2
InstMove - i64 reg 2, i64 reg 1
InstSub - i64 reg 1, i64 imm 32
InstCall - 
InstCall - 
InstCall - 
InstCall - 
InstCall - 
InstCall - 
InstCall - 
InstCall - 
InstCall - 
InstCall - 
InstCall - 
InstJump - label66

label66: 
InstMove - i64 reg 0, i64 imm 0
InstMove - i64 reg 1, i64 reg 2
InstPop - i64 reg 2
InstRet - 

