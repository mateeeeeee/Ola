external Assert

external AssertMsg

internal data storage GlobalIntX

internal data storage GlobalIntY

internal TestShiftOperatorsIntegers: 
label0: 
InstPush - i64 reg 2
InstMove - i64 reg 2, i64 reg 1
InstSub - i64 reg 1, i64 imm 72
InstStore - i64 stack -8, i64 reg 14
InstStore - i64 stack -16, i64 reg 13
InstStore - i64 stack -24, i64 reg 12
InstStore - i64 stack -32, i64 imm 5
InstStore - i64 stack -40, i64 imm 2
InstMove - i64 reg 3, i64 imm 1
InstCall - 
InstMove - i64 reg 3, i64 imm 1
InstCall - 
InstLoad - i64 reg 14, i64 GlobalIntX
InstMove - i64 reg 13, i64 reg 14
InstShl - i64 reg 13, i64 imm 1
InstICmp - i64 reg 13, i64 imm 16
x64::SetE - i8 reg 13
InstAnd - i8 reg 13, i8 imm 1
InstMove - i8 reg 3, i8 reg 13
InstCall - 
InstLoad - i64 reg 13, i64 GlobalIntX
InstMove - i64 reg 14, i64 reg 13
InstAShr - i64 reg 14, i64 imm 1
InstICmp - i64 reg 14, i64 imm 4
x64::SetE - i8 reg 14
InstAnd - i8 reg 14, i8 imm 1
InstMove - i8 reg 3, i8 reg 14
InstCall - 
InstLoad - i64 reg 14, i64 GlobalIntY
InstMove - i64 reg 13, i64 imm 4
InstMove - i64 reg 3, i64 reg 14
InstShl - i64 reg 13, i8 reg 3
InstICmp - i64 reg 13, i64 imm 32
x64::SetE - i8 reg 13
InstAnd - i8 reg 13, i8 imm 1
InstMove - i8 reg 3, i8 reg 13
InstCall - 
InstLoad - i64 reg 13, i64 GlobalIntY
InstMove - i64 reg 14, i64 imm 4
InstMove - i64 reg 3, i64 reg 13
InstAShr - i64 reg 14, i8 reg 3
InstICmp - i64 reg 14, i64 imm 0
x64::SetE - i8 reg 14
InstAnd - i8 reg 14, i8 imm 1
InstMove - i8 reg 3, i8 reg 14
InstCall - 
InstLoad - i64 reg 14, i64 stack -32
InstMove - i64 reg 13, i64 reg 14
InstShl - i64 reg 13, i64 imm 1
InstICmp - i64 reg 13, i64 imm 10
x64::SetE - i8 reg 13
InstAnd - i8 reg 13, i8 imm 1
InstMove - i8 reg 3, i8 reg 13
InstCall - 
InstLoad - i64 reg 13, i64 stack -32
InstMove - i64 reg 14, i64 reg 13
InstAShr - i64 reg 14, i64 imm 1
InstICmp - i64 reg 14, i64 imm 2
x64::SetE - i8 reg 14
InstAnd - i8 reg 14, i8 imm 1
InstMove - i8 reg 3, i8 reg 14
InstCall - 
InstLoad - i64 reg 14, i64 stack -40
InstMove - i64 reg 13, i64 imm 4
InstMove - i64 reg 3, i64 reg 14
InstShl - i64 reg 13, i8 reg 3
InstICmp - i64 reg 13, i64 imm 16
x64::SetE - i8 reg 13
InstAnd - i8 reg 13, i8 imm 1
InstMove - i8 reg 3, i8 reg 13
InstCall - 
InstLoad - i64 reg 13, i64 stack -40
InstMove - i64 reg 14, i64 imm 4
InstMove - i64 reg 3, i64 reg 13
InstAShr - i64 reg 14, i8 reg 3
InstICmp - i64 reg 14, i64 imm 1
x64::SetE - i8 reg 14
InstAnd - i8 reg 14, i8 imm 1
InstMove - i8 reg 3, i8 reg 14
InstCall - 
InstLoad - i64 reg 14, i64 GlobalIntX
InstLoad - i64 reg 13, i64 stack -40
InstMove - i64 reg 12, i64 reg 14
InstMove - i64 reg 3, i64 reg 13
InstShl - i64 reg 12, i8 reg 3
InstICmp - i64 reg 12, i64 imm 32
x64::SetE - i8 reg 12
InstAnd - i8 reg 12, i8 imm 1
InstMove - i8 reg 3, i8 reg 12
InstCall - 
InstLoad - i64 reg 12, i64 GlobalIntX
InstLoad - i64 reg 13, i64 stack -40
InstMove - i64 reg 14, i64 reg 12
InstMove - i64 reg 3, i64 reg 13
InstAShr - i64 reg 14, i8 reg 3
InstICmp - i64 reg 14, i64 imm 2
x64::SetE - i8 reg 14
InstAnd - i8 reg 14, i8 imm 1
InstMove - i8 reg 3, i8 reg 14
InstCall - 
InstLoad - i64 reg 14, i64 stack -32
InstLoad - i64 reg 13, i64 GlobalIntY
InstMove - i64 reg 12, i64 reg 14
InstMove - i64 reg 3, i64 reg 13
InstShl - i64 reg 12, i8 reg 3
InstICmp - i64 reg 12, i64 imm 40
x64::SetE - i8 reg 12
InstAnd - i8 reg 12, i8 imm 1
InstMove - i8 reg 3, i8 reg 12
InstCall - 
InstLoad - i64 reg 12, i64 stack -32
InstLoad - i64 reg 13, i64 GlobalIntY
InstMove - i64 reg 14, i64 reg 12
InstMove - i64 reg 3, i64 reg 13
InstAShr - i64 reg 14, i8 reg 3
InstICmp - i64 reg 14, i64 imm 0
x64::SetE - i8 reg 14
InstAnd - i8 reg 14, i8 imm 1
InstMove - i8 reg 3, i8 reg 14
InstCall - 
InstLoad - i64 reg 14, i64 stack -32
InstLoad - i64 reg 13, i64 stack -40
InstMove - i64 reg 12, i64 reg 14
InstMove - i64 reg 3, i64 reg 13
InstShl - i64 reg 12, i8 reg 3
InstICmp - i64 reg 12, i64 imm 20
x64::SetE - i8 reg 12
InstAnd - i8 reg 12, i8 imm 1
InstMove - i8 reg 3, i8 reg 12
InstCall - 
InstLoad - i64 reg 12, i64 stack -32
InstLoad - i64 reg 13, i64 stack -40
InstMove - i64 reg 14, i64 reg 12
InstMove - i64 reg 3, i64 reg 13
InstAShr - i64 reg 14, i8 reg 3
InstICmp - i64 reg 14, i64 imm 1
x64::SetE - i8 reg 14
InstAnd - i8 reg 14, i8 imm 1
InstMove - i8 reg 3, i8 reg 14
InstCall - 
InstLoad - i64 reg 14, i64 GlobalIntX
InstLoad - i64 reg 13, i64 GlobalIntY
InstMove - i64 reg 12, i64 reg 14
InstMove - i64 reg 3, i64 reg 13
InstShl - i64 reg 12, i8 reg 3
InstICmp - i64 reg 12, i64 imm 64
x64::SetE - i8 reg 12
InstAnd - i8 reg 12, i8 imm 1
InstMove - i8 reg 3, i8 reg 12
InstCall - 
InstLoad - i64 reg 12, i64 GlobalIntX
InstLoad - i64 reg 13, i64 GlobalIntY
InstMove - i64 reg 14, i64 reg 12
InstMove - i64 reg 3, i64 reg 13
InstAShr - i64 reg 14, i8 reg 3
InstICmp - i64 reg 14, i64 imm 1
x64::SetE - i8 reg 14
InstAnd - i8 reg 14, i8 imm 1
InstMove - i8 reg 3, i8 reg 14
InstCall - 
InstJump - label1

label1: 
InstLoad - i64 reg 14, i64 stack -8
InstLoad - i64 reg 13, i64 stack -16
InstLoad - i64 reg 12, i64 stack -24
InstMove - i64 reg 1, i64 reg 2
InstPop - i64 reg 2
InstRet - 

internal TestCompoundShiftOperatorsIntegers: 
label2: 
InstPush - i64 reg 2
InstMove - i64 reg 2, i64 reg 1
InstSub - i64 reg 1, i64 imm 80
InstStore - i64 stack -8, i64 reg 14
InstStore - i64 stack -16, i64 reg 13
InstStore - i64 stack -24, i64 reg 12
InstStore - i64 stack -32, i64 imm 5
InstStore - i64 stack -40, i64 imm 2
InstLoad - i64 reg 14, i64 stack -32
InstMove - i64 reg 13, i64 reg 14
InstShl - i64 reg 13, i64 imm 2
InstStore - i64 stack -32, i64 reg 13
InstLoad - i64 reg 13, i64 stack -32
InstICmp - i64 reg 13, i64 imm 20
x64::SetE - i8 reg 13
InstAnd - i8 reg 13, i8 imm 1
InstMove - i8 reg 3, i8 reg 13
InstCall - 
InstLoad - i64 reg 13, i64 stack -32
InstMove - i64 reg 14, i64 reg 13
InstAShr - i64 reg 14, i64 imm 2
InstStore - i64 stack -32, i64 reg 14
InstLoad - i64 reg 14, i64 stack -32
InstICmp - i64 reg 14, i64 imm 5
x64::SetE - i8 reg 14
InstAnd - i8 reg 14, i8 imm 1
InstMove - i8 reg 3, i8 reg 14
InstCall - 
InstStore - i64 stack -48, i64 imm 4
InstLoad - i64 reg 14, i64 stack -48
InstLoad - i64 reg 13, i64 stack -40
InstMove - i64 reg 12, i64 reg 14
InstMove - i64 reg 3, i64 reg 13
InstShl - i64 reg 12, i8 reg 3
InstStore - i64 stack -48, i64 reg 12
InstLoad - i64 reg 12, i64 stack -48
InstICmp - i64 reg 12, i64 imm 16
x64::SetE - i8 reg 12
InstAnd - i8 reg 12, i8 imm 1
InstMove - i8 reg 3, i8 reg 12
InstCall - 
InstStore - i64 stack -48, i64 imm 16
InstLoad - i64 reg 12, i64 stack -48
InstLoad - i64 reg 13, i64 stack -40
InstMove - i64 reg 14, i64 reg 12
InstMove - i64 reg 3, i64 reg 13
InstAShr - i64 reg 14, i8 reg 3
InstStore - i64 stack -48, i64 reg 14
InstLoad - i64 reg 14, i64 stack -48
InstICmp - i64 reg 14, i64 imm 4
x64::SetE - i8 reg 14
InstAnd - i8 reg 14, i8 imm 1
InstMove - i8 reg 3, i8 reg 14
InstCall - 
InstLoad - i64 reg 14, i64 stack -32
InstLoad - i64 reg 13, i64 GlobalIntY
InstMove - i64 reg 12, i64 reg 14
InstMove - i64 reg 3, i64 reg 13
InstShl - i64 reg 12, i8 reg 3
InstStore - i64 stack -32, i64 reg 12
InstLoad - i64 reg 12, i64 stack -32
InstICmp - i64 reg 12, i64 imm 40
x64::SetE - i8 reg 12
InstAnd - i8 reg 12, i8 imm 1
InstMove - i8 reg 3, i8 reg 12
InstCall - 
InstLoad - i64 reg 12, i64 stack -32
InstLoad - i64 reg 13, i64 GlobalIntY
InstMove - i64 reg 14, i64 reg 12
InstMove - i64 reg 3, i64 reg 13
InstAShr - i64 reg 14, i8 reg 3
InstStore - i64 stack -32, i64 reg 14
InstLoad - i64 reg 14, i64 stack -32
InstICmp - i64 reg 14, i64 imm 5
x64::SetE - i8 reg 14
InstAnd - i8 reg 14, i8 imm 1
InstMove - i8 reg 3, i8 reg 14
InstCall - 
InstLoad - i64 reg 14, i64 GlobalIntX
InstMove - i64 reg 13, i64 reg 14
InstShl - i64 reg 13, i64 imm 1
InstStore - GlobalIntX, i64 reg 13
InstLoad - i64 reg 13, i64 GlobalIntX
InstICmp - i64 reg 13, i64 imm 16
x64::SetE - i8 reg 13
InstAnd - i8 reg 13, i8 imm 1
InstMove - i8 reg 3, i8 reg 13
InstCall - 
InstLoad - i64 reg 13, i64 GlobalIntX
InstMove - i64 reg 14, i64 reg 13
InstAShr - i64 reg 14, i64 imm 1
InstStore - GlobalIntX, i64 reg 14
InstLoad - i64 reg 14, i64 GlobalIntX
InstICmp - i64 reg 14, i64 imm 8
x64::SetE - i8 reg 14
InstAnd - i8 reg 14, i8 imm 1
InstMove - i8 reg 3, i8 reg 14
InstCall - 
InstLoad - i64 reg 14, i64 GlobalIntX
InstLoad - i64 reg 13, i64 stack -40
InstMove - i64 reg 12, i64 reg 14
InstMove - i64 reg 3, i64 reg 13
InstShl - i64 reg 12, i8 reg 3
InstStore - GlobalIntX, i64 reg 12
InstLoad - i64 reg 12, i64 GlobalIntX
InstICmp - i64 reg 12, i64 imm 32
x64::SetE - i8 reg 12
InstAnd - i8 reg 12, i8 imm 1
InstMove - i8 reg 3, i8 reg 12
InstCall - 
InstLoad - i64 reg 12, i64 GlobalIntX
InstLoad - i64 reg 13, i64 stack -40
InstMove - i64 reg 14, i64 reg 12
InstMove - i64 reg 3, i64 reg 13
InstAShr - i64 reg 14, i8 reg 3
InstStore - GlobalIntX, i64 reg 14
InstLoad - i64 reg 14, i64 GlobalIntX
InstICmp - i64 reg 14, i64 imm 8
x64::SetE - i8 reg 14
InstAnd - i8 reg 14, i8 imm 1
InstMove - i8 reg 3, i8 reg 14
InstCall - 
InstLoad - i64 reg 14, i64 GlobalIntX
InstLoad - i64 reg 13, i64 GlobalIntY
InstMove - i64 reg 12, i64 reg 14
InstMove - i64 reg 3, i64 reg 13
InstShl - i64 reg 12, i8 reg 3
InstStore - GlobalIntX, i64 reg 12
InstLoad - i64 reg 12, i64 GlobalIntX
InstICmp - i64 reg 12, i64 imm 64
x64::SetE - i8 reg 12
InstAnd - i8 reg 12, i8 imm 1
InstMove - i8 reg 3, i8 reg 12
InstCall - 
InstLoad - i64 reg 12, i64 GlobalIntX
InstLoad - i64 reg 13, i64 GlobalIntY
InstMove - i64 reg 14, i64 reg 12
InstMove - i64 reg 3, i64 reg 13
InstAShr - i64 reg 14, i8 reg 3
InstStore - GlobalIntX, i64 reg 14
InstLoad - i64 reg 14, i64 GlobalIntX
InstICmp - i64 reg 14, i64 imm 8
x64::SetE - i8 reg 14
InstAnd - i8 reg 14, i8 imm 1
InstMove - i8 reg 3, i8 reg 14
InstCall - 
InstStore - GlobalIntX, i64 imm 8
InstJump - label3

label3: 
InstLoad - i64 reg 14, i64 stack -8
InstLoad - i64 reg 13, i64 stack -16
InstLoad - i64 reg 12, i64 stack -24
InstMove - i64 reg 1, i64 reg 2
InstPop - i64 reg 2
InstRet - 

external main: 
label4: 
InstPush - i64 reg 2
InstMove - i64 reg 2, i64 reg 1
InstSub - i64 reg 1, i64 imm 48
InstStore - i64 stack -8, i64 reg 14
InstCall - 
InstCall - 
InstStore - i64 stack -16, i64 imm 0
InstJump - label6

label5: 

label6: 
InstLoad - i64 reg 14, i64 stack -16
InstMove - i64 reg 0, i64 reg 14
InstLoad - i64 reg 14, i64 stack -8
InstMove - i64 reg 1, i64 reg 2
InstPop - i64 reg 2
InstRet - 

