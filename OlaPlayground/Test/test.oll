Module ID : test.ola

define internal @min__I__I i64(i64 %a,i64 %b) {
entry:
%0 = alloca i64
store i64 %a, ptr %0
%1 = alloca i64
store i64 %b, ptr %1
%2 = alloca i64
%3 = alloca i64
%4 = load i64, ptr %0
%5 = load i64, ptr %1
%6 = icmp slt i64 %4, %5
br i8 %6, label if.then, label if.else
if.then:
%7 = load i64, ptr %0
store i64 %7, ptr %3
br label if.end
if.else:
%8 = load i64, ptr %1
store i64 %8, ptr %3
br label if.end
if.end:
%9 = load i64, ptr %3
store i64 %9, ptr %2
br label exit
return:
br label exit
exit:
%10 = load i64, ptr %2
ret i64 %10
}


define external @main i64() {
entry:
%0 = alloca i64
%1 = call i64 3, 4, @min__I__I
store i64 %1, ptr %0
br label exit
return:
br label exit
exit:
%2 = load i64, ptr %0
ret i64 %2
}

