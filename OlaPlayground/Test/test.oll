Module ID : test.ola

declare @Assert void(i8)


declare @AssertMsg void(i8,ptr)


define external @main i64() {
entry:
%0 = alloca i64
%1 = alloca i64
%2 = alloca i64
br label dowhile.body
dowhile.body:
%3 = phi i64 [ 0, entry ], [ %4, dowhile.cond ]
br label dowhile.body1
dowhile.cond:
br label dowhile.body
dowhile.end:
call i8 0, @Assert
%5 = icmp eq i64 %4, 4
call i8 %5, @Assert
br label exit
return:
br label exit
dowhile.body1:
%6 = phi i64 [ %3, dowhile.body ], [ %4, dowhile.cond1 ]
%7 = alloca ptr
%4 = add i64 %6, 1
br label dowhile.cond1
dowhile.cond1:
%8 = icmp slt i64 %4, 2
br i8 %8, label dowhile.body1, label dowhile.end1
dowhile.end1:
%9 = alloca ptr
br label dowhile.cond
exit:
ret i64 0
}

