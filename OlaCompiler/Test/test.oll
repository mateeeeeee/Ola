Module ID : test.ola

declare @Assert void(i8)


declare @AssertMsg void(i8,ptr)


define internal @TestWhileLoopWithBreak void() {
entry:
%0 = alloca i64
store 0, ptr %0
%1 = alloca i64
store 1, ptr %1
br label while.cond
while.cond:
br 1, label while.body, label while.end
while.body:
%2 = load i64, ptr %0
%3 = load i64, ptr %1
%4 = add i64 %2, %3
store i64 %4, ptr %0
%5 = load i64, ptr %1
%6 = alloca ptr
%7 = load i64, ptr %1
store i64 %7, ptr %6
%8 = add i64 %5, 1
store i64 %8, ptr %1
%9 = load i64, ptr %1
%10 = icmp sgt i64 %9, 5
br i8 %10, label if.then, label if.end
while.end:
%11 = load i64, ptr %0
%12 = icmp eq i64 %11, 15
call i8 %12, @Assert
br label exit
if.then:
br label while.end
if.else:
%nop = neg i64 0
br label exit
if.end:
br label while.cond
break:
%nop1 = neg i64 0
br label exit
exit:
ret 
}


define external @main i64() {
entry:
%0 = alloca i64
call ptr @TestWhileLoopWithBreak
store 0, ptr %0
br label exit
return:
%nop = neg i64 0
br label exit
exit:
%1 = load i64, ptr %0
ret i64 %1
}

