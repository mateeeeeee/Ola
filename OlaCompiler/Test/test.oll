Module ID : test.ola

declare @Assert void(i8)


declare @AssertMsg void(i8,ptr)


declare @IsAlnum i8(i8)


declare @IsAlpha i8(i8)


declare @IsLower i8(i8)


declare @IsUpper i8(i8)


declare @IsDigit i8(i8)


declare @IsSpace i8(i8)


declare @ToLower i8(i8)


declare @ToUpper i8(i8)


declare @StringToFloat f64(ptr)


declare @StringToInt i64(ptr)


declare @StringCopy void(ptr,ptr,i64)


define internal @globalString ptr global


define external @main i64() {
entry:
%0 = alloca i64
call i8 1, @Assert
%1 = gep ptr @globalString, 0, 0
%2 = load i8, ptr %1
%3 = icmp eq i8 %2, 103
call i8 %3, @Assert
store 0, ptr %0
br label exit
return:
br label exit
exit:
%4 = load i64, ptr %0
ret i64 %4
}

