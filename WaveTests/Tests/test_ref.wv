import std.assert;


//ref todo list
//1. passing to function parameter
//   - passing T variable to ref T function parameter + 
//	 - passing ref T variable to T function parameter +
//	 - passing ref T variable to ref T function parameter + 
//2. assignment 
//   - assigning T to ref T variable + 
//   - assigning ref T to T variable +
//   - assigning ref T to ref T variable +
//3. returning from functions
//4. methods and fields
//5. global variables

void IntByRef(ref int a)
{
	++a;
}

void IntByValue(int a)
{
	++a;
}

void TestRefSimple()
{
	//passing T variable to ref T function parameter
	int a = 9;
	IntByRef(a);
	Assert(a == 10);

	//assigning T to ref T variable 
	ref int b = a;
	++b;
	Assert(a == 11);

	//assigning ref T to T variable
	int c = b;
	++c;
	Assert(c == 12);
	Assert(a == 11);

	////assigning ref T to ref T variable 
	ref int d = b; 
	++d;
	Assert(a == 12);

	//passing ref T variable to ref T function parameter
	IntByRef(d);
	Assert(a == 13);

	//passing ref T variable to T function parameter
	IntByValue(d);
	Assert(a == 13);
}

class S
{
	public void Init(int x, int y)
	{
		this.x = x;
		this.y = y;
	}

	public int x = 0;
	public int y = 0;
};

void TestRefStruct()
{
	S s; s.Init(10, 10);
}

public int main()
{
	TestRefSimple();
	TestRefStruct();

	return 0;
}