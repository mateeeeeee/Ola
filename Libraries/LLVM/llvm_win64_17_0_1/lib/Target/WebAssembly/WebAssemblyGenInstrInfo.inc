/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Target Instruction Enum Values and Descriptors                             *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

#ifdef GET_INSTRINFO_ENUM
#undef GET_INSTRINFO_ENUM
namespace llvm {

namespace WebAssembly {
  enum {
    PHI	= 0,
    INLINEASM	= 1,
    INLINEASM_BR	= 2,
    CFI_INSTRUCTION	= 3,
    EH_LABEL	= 4,
    GC_LABEL	= 5,
    ANNOTATION_LABEL	= 6,
    KILL	= 7,
    EXTRACT_SUBREG	= 8,
    INSERT_SUBREG	= 9,
    IMPLICIT_DEF	= 10,
    SUBREG_TO_REG	= 11,
    COPY_TO_REGCLASS	= 12,
    DBG_VALUE	= 13,
    DBG_VALUE_LIST	= 14,
    DBG_INSTR_REF	= 15,
    DBG_PHI	= 16,
    DBG_LABEL	= 17,
    REG_SEQUENCE	= 18,
    COPY	= 19,
    BUNDLE	= 20,
    LIFETIME_START	= 21,
    LIFETIME_END	= 22,
    PSEUDO_PROBE	= 23,
    ARITH_FENCE	= 24,
    STACKMAP	= 25,
    FENTRY_CALL	= 26,
    PATCHPOINT	= 27,
    LOAD_STACK_GUARD	= 28,
    PREALLOCATED_SETUP	= 29,
    PREALLOCATED_ARG	= 30,
    STATEPOINT	= 31,
    LOCAL_ESCAPE	= 32,
    FAULTING_OP	= 33,
    PATCHABLE_OP	= 34,
    PATCHABLE_FUNCTION_ENTER	= 35,
    PATCHABLE_RET	= 36,
    PATCHABLE_FUNCTION_EXIT	= 37,
    PATCHABLE_TAIL_CALL	= 38,
    PATCHABLE_EVENT_CALL	= 39,
    PATCHABLE_TYPED_EVENT_CALL	= 40,
    ICALL_BRANCH_FUNNEL	= 41,
    MEMBARRIER	= 42,
    G_ASSERT_SEXT	= 43,
    G_ASSERT_ZEXT	= 44,
    G_ASSERT_ALIGN	= 45,
    G_ADD	= 46,
    G_SUB	= 47,
    G_MUL	= 48,
    G_SDIV	= 49,
    G_UDIV	= 50,
    G_SREM	= 51,
    G_UREM	= 52,
    G_SDIVREM	= 53,
    G_UDIVREM	= 54,
    G_AND	= 55,
    G_OR	= 56,
    G_XOR	= 57,
    G_IMPLICIT_DEF	= 58,
    G_PHI	= 59,
    G_FRAME_INDEX	= 60,
    G_GLOBAL_VALUE	= 61,
    G_CONSTANT_POOL	= 62,
    G_EXTRACT	= 63,
    G_UNMERGE_VALUES	= 64,
    G_INSERT	= 65,
    G_MERGE_VALUES	= 66,
    G_BUILD_VECTOR	= 67,
    G_BUILD_VECTOR_TRUNC	= 68,
    G_CONCAT_VECTORS	= 69,
    G_PTRTOINT	= 70,
    G_INTTOPTR	= 71,
    G_BITCAST	= 72,
    G_FREEZE	= 73,
    G_CONSTANT_FOLD_BARRIER	= 74,
    G_INTRINSIC_FPTRUNC_ROUND	= 75,
    G_INTRINSIC_TRUNC	= 76,
    G_INTRINSIC_ROUND	= 77,
    G_INTRINSIC_LRINT	= 78,
    G_INTRINSIC_ROUNDEVEN	= 79,
    G_READCYCLECOUNTER	= 80,
    G_LOAD	= 81,
    G_SEXTLOAD	= 82,
    G_ZEXTLOAD	= 83,
    G_INDEXED_LOAD	= 84,
    G_INDEXED_SEXTLOAD	= 85,
    G_INDEXED_ZEXTLOAD	= 86,
    G_STORE	= 87,
    G_INDEXED_STORE	= 88,
    G_ATOMIC_CMPXCHG_WITH_SUCCESS	= 89,
    G_ATOMIC_CMPXCHG	= 90,
    G_ATOMICRMW_XCHG	= 91,
    G_ATOMICRMW_ADD	= 92,
    G_ATOMICRMW_SUB	= 93,
    G_ATOMICRMW_AND	= 94,
    G_ATOMICRMW_NAND	= 95,
    G_ATOMICRMW_OR	= 96,
    G_ATOMICRMW_XOR	= 97,
    G_ATOMICRMW_MAX	= 98,
    G_ATOMICRMW_MIN	= 99,
    G_ATOMICRMW_UMAX	= 100,
    G_ATOMICRMW_UMIN	= 101,
    G_ATOMICRMW_FADD	= 102,
    G_ATOMICRMW_FSUB	= 103,
    G_ATOMICRMW_FMAX	= 104,
    G_ATOMICRMW_FMIN	= 105,
    G_ATOMICRMW_UINC_WRAP	= 106,
    G_ATOMICRMW_UDEC_WRAP	= 107,
    G_FENCE	= 108,
    G_BRCOND	= 109,
    G_BRINDIRECT	= 110,
    G_INVOKE_REGION_START	= 111,
    G_INTRINSIC	= 112,
    G_INTRINSIC_W_SIDE_EFFECTS	= 113,
    G_ANYEXT	= 114,
    G_TRUNC	= 115,
    G_CONSTANT	= 116,
    G_FCONSTANT	= 117,
    G_VASTART	= 118,
    G_VAARG	= 119,
    G_SEXT	= 120,
    G_SEXT_INREG	= 121,
    G_ZEXT	= 122,
    G_SHL	= 123,
    G_LSHR	= 124,
    G_ASHR	= 125,
    G_FSHL	= 126,
    G_FSHR	= 127,
    G_ROTR	= 128,
    G_ROTL	= 129,
    G_ICMP	= 130,
    G_FCMP	= 131,
    G_SELECT	= 132,
    G_UADDO	= 133,
    G_UADDE	= 134,
    G_USUBO	= 135,
    G_USUBE	= 136,
    G_SADDO	= 137,
    G_SADDE	= 138,
    G_SSUBO	= 139,
    G_SSUBE	= 140,
    G_UMULO	= 141,
    G_SMULO	= 142,
    G_UMULH	= 143,
    G_SMULH	= 144,
    G_UADDSAT	= 145,
    G_SADDSAT	= 146,
    G_USUBSAT	= 147,
    G_SSUBSAT	= 148,
    G_USHLSAT	= 149,
    G_SSHLSAT	= 150,
    G_SMULFIX	= 151,
    G_UMULFIX	= 152,
    G_SMULFIXSAT	= 153,
    G_UMULFIXSAT	= 154,
    G_SDIVFIX	= 155,
    G_UDIVFIX	= 156,
    G_SDIVFIXSAT	= 157,
    G_UDIVFIXSAT	= 158,
    G_FADD	= 159,
    G_FSUB	= 160,
    G_FMUL	= 161,
    G_FMA	= 162,
    G_FMAD	= 163,
    G_FDIV	= 164,
    G_FREM	= 165,
    G_FPOW	= 166,
    G_FPOWI	= 167,
    G_FEXP	= 168,
    G_FEXP2	= 169,
    G_FLOG	= 170,
    G_FLOG2	= 171,
    G_FLOG10	= 172,
    G_FLDEXP	= 173,
    G_FFREXP	= 174,
    G_FNEG	= 175,
    G_FPEXT	= 176,
    G_FPTRUNC	= 177,
    G_FPTOSI	= 178,
    G_FPTOUI	= 179,
    G_SITOFP	= 180,
    G_UITOFP	= 181,
    G_FABS	= 182,
    G_FCOPYSIGN	= 183,
    G_IS_FPCLASS	= 184,
    G_FCANONICALIZE	= 185,
    G_FMINNUM	= 186,
    G_FMAXNUM	= 187,
    G_FMINNUM_IEEE	= 188,
    G_FMAXNUM_IEEE	= 189,
    G_FMINIMUM	= 190,
    G_FMAXIMUM	= 191,
    G_PTR_ADD	= 192,
    G_PTRMASK	= 193,
    G_SMIN	= 194,
    G_SMAX	= 195,
    G_UMIN	= 196,
    G_UMAX	= 197,
    G_ABS	= 198,
    G_LROUND	= 199,
    G_LLROUND	= 200,
    G_BR	= 201,
    G_BRJT	= 202,
    G_INSERT_VECTOR_ELT	= 203,
    G_EXTRACT_VECTOR_ELT	= 204,
    G_SHUFFLE_VECTOR	= 205,
    G_CTTZ	= 206,
    G_CTTZ_ZERO_UNDEF	= 207,
    G_CTLZ	= 208,
    G_CTLZ_ZERO_UNDEF	= 209,
    G_CTPOP	= 210,
    G_BSWAP	= 211,
    G_BITREVERSE	= 212,
    G_FCEIL	= 213,
    G_FCOS	= 214,
    G_FSIN	= 215,
    G_FSQRT	= 216,
    G_FFLOOR	= 217,
    G_FRINT	= 218,
    G_FNEARBYINT	= 219,
    G_ADDRSPACE_CAST	= 220,
    G_BLOCK_ADDR	= 221,
    G_JUMP_TABLE	= 222,
    G_DYN_STACKALLOC	= 223,
    G_STRICT_FADD	= 224,
    G_STRICT_FSUB	= 225,
    G_STRICT_FMUL	= 226,
    G_STRICT_FDIV	= 227,
    G_STRICT_FREM	= 228,
    G_STRICT_FMA	= 229,
    G_STRICT_FSQRT	= 230,
    G_STRICT_FLDEXP	= 231,
    G_READ_REGISTER	= 232,
    G_WRITE_REGISTER	= 233,
    G_MEMCPY	= 234,
    G_MEMCPY_INLINE	= 235,
    G_MEMMOVE	= 236,
    G_MEMSET	= 237,
    G_BZERO	= 238,
    G_VECREDUCE_SEQ_FADD	= 239,
    G_VECREDUCE_SEQ_FMUL	= 240,
    G_VECREDUCE_FADD	= 241,
    G_VECREDUCE_FMUL	= 242,
    G_VECREDUCE_FMAX	= 243,
    G_VECREDUCE_FMIN	= 244,
    G_VECREDUCE_ADD	= 245,
    G_VECREDUCE_MUL	= 246,
    G_VECREDUCE_AND	= 247,
    G_VECREDUCE_OR	= 248,
    G_VECREDUCE_XOR	= 249,
    G_VECREDUCE_SMAX	= 250,
    G_VECREDUCE_SMIN	= 251,
    G_VECREDUCE_UMAX	= 252,
    G_VECREDUCE_UMIN	= 253,
    G_SBFX	= 254,
    G_UBFX	= 255,
    CALL_PARAMS	= 256,
    CALL_PARAMS_S	= 257,
    CALL_RESULTS	= 258,
    CALL_RESULTS_S	= 259,
    CATCHRET	= 260,
    CATCHRET_S	= 261,
    CLEANUPRET	= 262,
    CLEANUPRET_S	= 263,
    COMPILER_FENCE	= 264,
    COMPILER_FENCE_S	= 265,
    RET_CALL_RESULTS	= 266,
    RET_CALL_RESULTS_S	= 267,
    ABS_F32	= 268,
    ABS_F32_S	= 269,
    ABS_F32x4	= 270,
    ABS_F32x4_S	= 271,
    ABS_F64	= 272,
    ABS_F64_S	= 273,
    ABS_F64x2	= 274,
    ABS_F64x2_S	= 275,
    ABS_I16x8	= 276,
    ABS_I16x8_S	= 277,
    ABS_I32x4	= 278,
    ABS_I32x4_S	= 279,
    ABS_I64x2	= 280,
    ABS_I64x2_S	= 281,
    ABS_I8x16	= 282,
    ABS_I8x16_S	= 283,
    ADD_F32	= 284,
    ADD_F32_S	= 285,
    ADD_F32x4	= 286,
    ADD_F32x4_S	= 287,
    ADD_F64	= 288,
    ADD_F64_S	= 289,
    ADD_F64x2	= 290,
    ADD_F64x2_S	= 291,
    ADD_I16x8	= 292,
    ADD_I16x8_S	= 293,
    ADD_I32	= 294,
    ADD_I32_S	= 295,
    ADD_I32x4	= 296,
    ADD_I32x4_S	= 297,
    ADD_I64	= 298,
    ADD_I64_S	= 299,
    ADD_I64x2	= 300,
    ADD_I64x2_S	= 301,
    ADD_I8x16	= 302,
    ADD_I8x16_S	= 303,
    ADD_SAT_S_I16x8	= 304,
    ADD_SAT_S_I16x8_S	= 305,
    ADD_SAT_S_I8x16	= 306,
    ADD_SAT_S_I8x16_S	= 307,
    ADD_SAT_U_I16x8	= 308,
    ADD_SAT_U_I16x8_S	= 309,
    ADD_SAT_U_I8x16	= 310,
    ADD_SAT_U_I8x16_S	= 311,
    ADJCALLSTACKDOWN	= 312,
    ADJCALLSTACKDOWN_S	= 313,
    ADJCALLSTACKUP	= 314,
    ADJCALLSTACKUP_S	= 315,
    ALLTRUE_I16x8	= 316,
    ALLTRUE_I16x8_S	= 317,
    ALLTRUE_I32x4	= 318,
    ALLTRUE_I32x4_S	= 319,
    ALLTRUE_I64x2	= 320,
    ALLTRUE_I64x2_S	= 321,
    ALLTRUE_I8x16	= 322,
    ALLTRUE_I8x16_S	= 323,
    AND	= 324,
    ANDNOT	= 325,
    ANDNOT_S	= 326,
    AND_I32	= 327,
    AND_I32_S	= 328,
    AND_I64	= 329,
    AND_I64_S	= 330,
    AND_S	= 331,
    ANYTRUE	= 332,
    ANYTRUE_S	= 333,
    ARGUMENT_externref	= 334,
    ARGUMENT_externref_S	= 335,
    ARGUMENT_f32	= 336,
    ARGUMENT_f32_S	= 337,
    ARGUMENT_f64	= 338,
    ARGUMENT_f64_S	= 339,
    ARGUMENT_funcref	= 340,
    ARGUMENT_funcref_S	= 341,
    ARGUMENT_i32	= 342,
    ARGUMENT_i32_S	= 343,
    ARGUMENT_i64	= 344,
    ARGUMENT_i64_S	= 345,
    ARGUMENT_v16i8	= 346,
    ARGUMENT_v16i8_S	= 347,
    ARGUMENT_v2f64	= 348,
    ARGUMENT_v2f64_S	= 349,
    ARGUMENT_v2i64	= 350,
    ARGUMENT_v2i64_S	= 351,
    ARGUMENT_v4f32	= 352,
    ARGUMENT_v4f32_S	= 353,
    ARGUMENT_v4i32	= 354,
    ARGUMENT_v4i32_S	= 355,
    ARGUMENT_v8i16	= 356,
    ARGUMENT_v8i16_S	= 357,
    ATOMIC_FENCE	= 358,
    ATOMIC_FENCE_S	= 359,
    ATOMIC_LOAD16_U_I32_A32	= 360,
    ATOMIC_LOAD16_U_I32_A32_S	= 361,
    ATOMIC_LOAD16_U_I32_A64	= 362,
    ATOMIC_LOAD16_U_I32_A64_S	= 363,
    ATOMIC_LOAD16_U_I64_A32	= 364,
    ATOMIC_LOAD16_U_I64_A32_S	= 365,
    ATOMIC_LOAD16_U_I64_A64	= 366,
    ATOMIC_LOAD16_U_I64_A64_S	= 367,
    ATOMIC_LOAD32_U_I64_A32	= 368,
    ATOMIC_LOAD32_U_I64_A32_S	= 369,
    ATOMIC_LOAD32_U_I64_A64	= 370,
    ATOMIC_LOAD32_U_I64_A64_S	= 371,
    ATOMIC_LOAD8_U_I32_A32	= 372,
    ATOMIC_LOAD8_U_I32_A32_S	= 373,
    ATOMIC_LOAD8_U_I32_A64	= 374,
    ATOMIC_LOAD8_U_I32_A64_S	= 375,
    ATOMIC_LOAD8_U_I64_A32	= 376,
    ATOMIC_LOAD8_U_I64_A32_S	= 377,
    ATOMIC_LOAD8_U_I64_A64	= 378,
    ATOMIC_LOAD8_U_I64_A64_S	= 379,
    ATOMIC_LOAD_I32_A32	= 380,
    ATOMIC_LOAD_I32_A32_S	= 381,
    ATOMIC_LOAD_I32_A64	= 382,
    ATOMIC_LOAD_I32_A64_S	= 383,
    ATOMIC_LOAD_I64_A32	= 384,
    ATOMIC_LOAD_I64_A32_S	= 385,
    ATOMIC_LOAD_I64_A64	= 386,
    ATOMIC_LOAD_I64_A64_S	= 387,
    ATOMIC_RMW16_U_ADD_I32_A32	= 388,
    ATOMIC_RMW16_U_ADD_I32_A32_S	= 389,
    ATOMIC_RMW16_U_ADD_I32_A64	= 390,
    ATOMIC_RMW16_U_ADD_I32_A64_S	= 391,
    ATOMIC_RMW16_U_ADD_I64_A32	= 392,
    ATOMIC_RMW16_U_ADD_I64_A32_S	= 393,
    ATOMIC_RMW16_U_ADD_I64_A64	= 394,
    ATOMIC_RMW16_U_ADD_I64_A64_S	= 395,
    ATOMIC_RMW16_U_AND_I32_A32	= 396,
    ATOMIC_RMW16_U_AND_I32_A32_S	= 397,
    ATOMIC_RMW16_U_AND_I32_A64	= 398,
    ATOMIC_RMW16_U_AND_I32_A64_S	= 399,
    ATOMIC_RMW16_U_AND_I64_A32	= 400,
    ATOMIC_RMW16_U_AND_I64_A32_S	= 401,
    ATOMIC_RMW16_U_AND_I64_A64	= 402,
    ATOMIC_RMW16_U_AND_I64_A64_S	= 403,
    ATOMIC_RMW16_U_CMPXCHG_I32_A32	= 404,
    ATOMIC_RMW16_U_CMPXCHG_I32_A32_S	= 405,
    ATOMIC_RMW16_U_CMPXCHG_I32_A64	= 406,
    ATOMIC_RMW16_U_CMPXCHG_I32_A64_S	= 407,
    ATOMIC_RMW16_U_CMPXCHG_I64_A32	= 408,
    ATOMIC_RMW16_U_CMPXCHG_I64_A32_S	= 409,
    ATOMIC_RMW16_U_CMPXCHG_I64_A64	= 410,
    ATOMIC_RMW16_U_CMPXCHG_I64_A64_S	= 411,
    ATOMIC_RMW16_U_OR_I32_A32	= 412,
    ATOMIC_RMW16_U_OR_I32_A32_S	= 413,
    ATOMIC_RMW16_U_OR_I32_A64	= 414,
    ATOMIC_RMW16_U_OR_I32_A64_S	= 415,
    ATOMIC_RMW16_U_OR_I64_A32	= 416,
    ATOMIC_RMW16_U_OR_I64_A32_S	= 417,
    ATOMIC_RMW16_U_OR_I64_A64	= 418,
    ATOMIC_RMW16_U_OR_I64_A64_S	= 419,
    ATOMIC_RMW16_U_SUB_I32_A32	= 420,
    ATOMIC_RMW16_U_SUB_I32_A32_S	= 421,
    ATOMIC_RMW16_U_SUB_I32_A64	= 422,
    ATOMIC_RMW16_U_SUB_I32_A64_S	= 423,
    ATOMIC_RMW16_U_SUB_I64_A32	= 424,
    ATOMIC_RMW16_U_SUB_I64_A32_S	= 425,
    ATOMIC_RMW16_U_SUB_I64_A64	= 426,
    ATOMIC_RMW16_U_SUB_I64_A64_S	= 427,
    ATOMIC_RMW16_U_XCHG_I32_A32	= 428,
    ATOMIC_RMW16_U_XCHG_I32_A32_S	= 429,
    ATOMIC_RMW16_U_XCHG_I32_A64	= 430,
    ATOMIC_RMW16_U_XCHG_I32_A64_S	= 431,
    ATOMIC_RMW16_U_XCHG_I64_A32	= 432,
    ATOMIC_RMW16_U_XCHG_I64_A32_S	= 433,
    ATOMIC_RMW16_U_XCHG_I64_A64	= 434,
    ATOMIC_RMW16_U_XCHG_I64_A64_S	= 435,
    ATOMIC_RMW16_U_XOR_I32_A32	= 436,
    ATOMIC_RMW16_U_XOR_I32_A32_S	= 437,
    ATOMIC_RMW16_U_XOR_I32_A64	= 438,
    ATOMIC_RMW16_U_XOR_I32_A64_S	= 439,
    ATOMIC_RMW16_U_XOR_I64_A32	= 440,
    ATOMIC_RMW16_U_XOR_I64_A32_S	= 441,
    ATOMIC_RMW16_U_XOR_I64_A64	= 442,
    ATOMIC_RMW16_U_XOR_I64_A64_S	= 443,
    ATOMIC_RMW32_U_ADD_I64_A32	= 444,
    ATOMIC_RMW32_U_ADD_I64_A32_S	= 445,
    ATOMIC_RMW32_U_ADD_I64_A64	= 446,
    ATOMIC_RMW32_U_ADD_I64_A64_S	= 447,
    ATOMIC_RMW32_U_AND_I64_A32	= 448,
    ATOMIC_RMW32_U_AND_I64_A32_S	= 449,
    ATOMIC_RMW32_U_AND_I64_A64	= 450,
    ATOMIC_RMW32_U_AND_I64_A64_S	= 451,
    ATOMIC_RMW32_U_CMPXCHG_I64_A32	= 452,
    ATOMIC_RMW32_U_CMPXCHG_I64_A32_S	= 453,
    ATOMIC_RMW32_U_CMPXCHG_I64_A64	= 454,
    ATOMIC_RMW32_U_CMPXCHG_I64_A64_S	= 455,
    ATOMIC_RMW32_U_OR_I64_A32	= 456,
    ATOMIC_RMW32_U_OR_I64_A32_S	= 457,
    ATOMIC_RMW32_U_OR_I64_A64	= 458,
    ATOMIC_RMW32_U_OR_I64_A64_S	= 459,
    ATOMIC_RMW32_U_SUB_I64_A32	= 460,
    ATOMIC_RMW32_U_SUB_I64_A32_S	= 461,
    ATOMIC_RMW32_U_SUB_I64_A64	= 462,
    ATOMIC_RMW32_U_SUB_I64_A64_S	= 463,
    ATOMIC_RMW32_U_XCHG_I64_A32	= 464,
    ATOMIC_RMW32_U_XCHG_I64_A32_S	= 465,
    ATOMIC_RMW32_U_XCHG_I64_A64	= 466,
    ATOMIC_RMW32_U_XCHG_I64_A64_S	= 467,
    ATOMIC_RMW32_U_XOR_I64_A32	= 468,
    ATOMIC_RMW32_U_XOR_I64_A32_S	= 469,
    ATOMIC_RMW32_U_XOR_I64_A64	= 470,
    ATOMIC_RMW32_U_XOR_I64_A64_S	= 471,
    ATOMIC_RMW8_U_ADD_I32_A32	= 472,
    ATOMIC_RMW8_U_ADD_I32_A32_S	= 473,
    ATOMIC_RMW8_U_ADD_I32_A64	= 474,
    ATOMIC_RMW8_U_ADD_I32_A64_S	= 475,
    ATOMIC_RMW8_U_ADD_I64_A32	= 476,
    ATOMIC_RMW8_U_ADD_I64_A32_S	= 477,
    ATOMIC_RMW8_U_ADD_I64_A64	= 478,
    ATOMIC_RMW8_U_ADD_I64_A64_S	= 479,
    ATOMIC_RMW8_U_AND_I32_A32	= 480,
    ATOMIC_RMW8_U_AND_I32_A32_S	= 481,
    ATOMIC_RMW8_U_AND_I32_A64	= 482,
    ATOMIC_RMW8_U_AND_I32_A64_S	= 483,
    ATOMIC_RMW8_U_AND_I64_A32	= 484,
    ATOMIC_RMW8_U_AND_I64_A32_S	= 485,
    ATOMIC_RMW8_U_AND_I64_A64	= 486,
    ATOMIC_RMW8_U_AND_I64_A64_S	= 487,
    ATOMIC_RMW8_U_CMPXCHG_I32_A32	= 488,
    ATOMIC_RMW8_U_CMPXCHG_I32_A32_S	= 489,
    ATOMIC_RMW8_U_CMPXCHG_I32_A64	= 490,
    ATOMIC_RMW8_U_CMPXCHG_I32_A64_S	= 491,
    ATOMIC_RMW8_U_CMPXCHG_I64_A32	= 492,
    ATOMIC_RMW8_U_CMPXCHG_I64_A32_S	= 493,
    ATOMIC_RMW8_U_CMPXCHG_I64_A64	= 494,
    ATOMIC_RMW8_U_CMPXCHG_I64_A64_S	= 495,
    ATOMIC_RMW8_U_OR_I32_A32	= 496,
    ATOMIC_RMW8_U_OR_I32_A32_S	= 497,
    ATOMIC_RMW8_U_OR_I32_A64	= 498,
    ATOMIC_RMW8_U_OR_I32_A64_S	= 499,
    ATOMIC_RMW8_U_OR_I64_A32	= 500,
    ATOMIC_RMW8_U_OR_I64_A32_S	= 501,
    ATOMIC_RMW8_U_OR_I64_A64	= 502,
    ATOMIC_RMW8_U_OR_I64_A64_S	= 503,
    ATOMIC_RMW8_U_SUB_I32_A32	= 504,
    ATOMIC_RMW8_U_SUB_I32_A32_S	= 505,
    ATOMIC_RMW8_U_SUB_I32_A64	= 506,
    ATOMIC_RMW8_U_SUB_I32_A64_S	= 507,
    ATOMIC_RMW8_U_SUB_I64_A32	= 508,
    ATOMIC_RMW8_U_SUB_I64_A32_S	= 509,
    ATOMIC_RMW8_U_SUB_I64_A64	= 510,
    ATOMIC_RMW8_U_SUB_I64_A64_S	= 511,
    ATOMIC_RMW8_U_XCHG_I32_A32	= 512,
    ATOMIC_RMW8_U_XCHG_I32_A32_S	= 513,
    ATOMIC_RMW8_U_XCHG_I32_A64	= 514,
    ATOMIC_RMW8_U_XCHG_I32_A64_S	= 515,
    ATOMIC_RMW8_U_XCHG_I64_A32	= 516,
    ATOMIC_RMW8_U_XCHG_I64_A32_S	= 517,
    ATOMIC_RMW8_U_XCHG_I64_A64	= 518,
    ATOMIC_RMW8_U_XCHG_I64_A64_S	= 519,
    ATOMIC_RMW8_U_XOR_I32_A32	= 520,
    ATOMIC_RMW8_U_XOR_I32_A32_S	= 521,
    ATOMIC_RMW8_U_XOR_I32_A64	= 522,
    ATOMIC_RMW8_U_XOR_I32_A64_S	= 523,
    ATOMIC_RMW8_U_XOR_I64_A32	= 524,
    ATOMIC_RMW8_U_XOR_I64_A32_S	= 525,
    ATOMIC_RMW8_U_XOR_I64_A64	= 526,
    ATOMIC_RMW8_U_XOR_I64_A64_S	= 527,
    ATOMIC_RMW_ADD_I32_A32	= 528,
    ATOMIC_RMW_ADD_I32_A32_S	= 529,
    ATOMIC_RMW_ADD_I32_A64	= 530,
    ATOMIC_RMW_ADD_I32_A64_S	= 531,
    ATOMIC_RMW_ADD_I64_A32	= 532,
    ATOMIC_RMW_ADD_I64_A32_S	= 533,
    ATOMIC_RMW_ADD_I64_A64	= 534,
    ATOMIC_RMW_ADD_I64_A64_S	= 535,
    ATOMIC_RMW_AND_I32_A32	= 536,
    ATOMIC_RMW_AND_I32_A32_S	= 537,
    ATOMIC_RMW_AND_I32_A64	= 538,
    ATOMIC_RMW_AND_I32_A64_S	= 539,
    ATOMIC_RMW_AND_I64_A32	= 540,
    ATOMIC_RMW_AND_I64_A32_S	= 541,
    ATOMIC_RMW_AND_I64_A64	= 542,
    ATOMIC_RMW_AND_I64_A64_S	= 543,
    ATOMIC_RMW_CMPXCHG_I32_A32	= 544,
    ATOMIC_RMW_CMPXCHG_I32_A32_S	= 545,
    ATOMIC_RMW_CMPXCHG_I32_A64	= 546,
    ATOMIC_RMW_CMPXCHG_I32_A64_S	= 547,
    ATOMIC_RMW_CMPXCHG_I64_A32	= 548,
    ATOMIC_RMW_CMPXCHG_I64_A32_S	= 549,
    ATOMIC_RMW_CMPXCHG_I64_A64	= 550,
    ATOMIC_RMW_CMPXCHG_I64_A64_S	= 551,
    ATOMIC_RMW_OR_I32_A32	= 552,
    ATOMIC_RMW_OR_I32_A32_S	= 553,
    ATOMIC_RMW_OR_I32_A64	= 554,
    ATOMIC_RMW_OR_I32_A64_S	= 555,
    ATOMIC_RMW_OR_I64_A32	= 556,
    ATOMIC_RMW_OR_I64_A32_S	= 557,
    ATOMIC_RMW_OR_I64_A64	= 558,
    ATOMIC_RMW_OR_I64_A64_S	= 559,
    ATOMIC_RMW_SUB_I32_A32	= 560,
    ATOMIC_RMW_SUB_I32_A32_S	= 561,
    ATOMIC_RMW_SUB_I32_A64	= 562,
    ATOMIC_RMW_SUB_I32_A64_S	= 563,
    ATOMIC_RMW_SUB_I64_A32	= 564,
    ATOMIC_RMW_SUB_I64_A32_S	= 565,
    ATOMIC_RMW_SUB_I64_A64	= 566,
    ATOMIC_RMW_SUB_I64_A64_S	= 567,
    ATOMIC_RMW_XCHG_I32_A32	= 568,
    ATOMIC_RMW_XCHG_I32_A32_S	= 569,
    ATOMIC_RMW_XCHG_I32_A64	= 570,
    ATOMIC_RMW_XCHG_I32_A64_S	= 571,
    ATOMIC_RMW_XCHG_I64_A32	= 572,
    ATOMIC_RMW_XCHG_I64_A32_S	= 573,
    ATOMIC_RMW_XCHG_I64_A64	= 574,
    ATOMIC_RMW_XCHG_I64_A64_S	= 575,
    ATOMIC_RMW_XOR_I32_A32	= 576,
    ATOMIC_RMW_XOR_I32_A32_S	= 577,
    ATOMIC_RMW_XOR_I32_A64	= 578,
    ATOMIC_RMW_XOR_I32_A64_S	= 579,
    ATOMIC_RMW_XOR_I64_A32	= 580,
    ATOMIC_RMW_XOR_I64_A32_S	= 581,
    ATOMIC_RMW_XOR_I64_A64	= 582,
    ATOMIC_RMW_XOR_I64_A64_S	= 583,
    ATOMIC_STORE16_I32_A32	= 584,
    ATOMIC_STORE16_I32_A32_S	= 585,
    ATOMIC_STORE16_I32_A64	= 586,
    ATOMIC_STORE16_I32_A64_S	= 587,
    ATOMIC_STORE16_I64_A32	= 588,
    ATOMIC_STORE16_I64_A32_S	= 589,
    ATOMIC_STORE16_I64_A64	= 590,
    ATOMIC_STORE16_I64_A64_S	= 591,
    ATOMIC_STORE32_I64_A32	= 592,
    ATOMIC_STORE32_I64_A32_S	= 593,
    ATOMIC_STORE32_I64_A64	= 594,
    ATOMIC_STORE32_I64_A64_S	= 595,
    ATOMIC_STORE8_I32_A32	= 596,
    ATOMIC_STORE8_I32_A32_S	= 597,
    ATOMIC_STORE8_I32_A64	= 598,
    ATOMIC_STORE8_I32_A64_S	= 599,
    ATOMIC_STORE8_I64_A32	= 600,
    ATOMIC_STORE8_I64_A32_S	= 601,
    ATOMIC_STORE8_I64_A64	= 602,
    ATOMIC_STORE8_I64_A64_S	= 603,
    ATOMIC_STORE_I32_A32	= 604,
    ATOMIC_STORE_I32_A32_S	= 605,
    ATOMIC_STORE_I32_A64	= 606,
    ATOMIC_STORE_I32_A64_S	= 607,
    ATOMIC_STORE_I64_A32	= 608,
    ATOMIC_STORE_I64_A32_S	= 609,
    ATOMIC_STORE_I64_A64	= 610,
    ATOMIC_STORE_I64_A64_S	= 611,
    AVGR_U_I16x8	= 612,
    AVGR_U_I16x8_S	= 613,
    AVGR_U_I8x16	= 614,
    AVGR_U_I8x16_S	= 615,
    BITMASK_I16x8	= 616,
    BITMASK_I16x8_S	= 617,
    BITMASK_I32x4	= 618,
    BITMASK_I32x4_S	= 619,
    BITMASK_I64x2	= 620,
    BITMASK_I64x2_S	= 621,
    BITMASK_I8x16	= 622,
    BITMASK_I8x16_S	= 623,
    BITSELECT	= 624,
    BITSELECT_S	= 625,
    BLOCK	= 626,
    BLOCK_S	= 627,
    BR	= 628,
    BR_IF	= 629,
    BR_IF_S	= 630,
    BR_S	= 631,
    BR_TABLE_I32	= 632,
    BR_TABLE_I32_S	= 633,
    BR_TABLE_I64	= 634,
    BR_TABLE_I64_S	= 635,
    BR_UNLESS	= 636,
    BR_UNLESS_S	= 637,
    CALL	= 638,
    CALL_INDIRECT	= 639,
    CALL_INDIRECT_S	= 640,
    CALL_S	= 641,
    CATCH	= 642,
    CATCH_ALL	= 643,
    CATCH_ALL_S	= 644,
    CATCH_S	= 645,
    CEIL_F32	= 646,
    CEIL_F32_S	= 647,
    CEIL_F32x4	= 648,
    CEIL_F32x4_S	= 649,
    CEIL_F64	= 650,
    CEIL_F64_S	= 651,
    CEIL_F64x2	= 652,
    CEIL_F64x2_S	= 653,
    CLZ_I32	= 654,
    CLZ_I32_S	= 655,
    CLZ_I64	= 656,
    CLZ_I64_S	= 657,
    CONST_F32	= 658,
    CONST_F32_S	= 659,
    CONST_F64	= 660,
    CONST_F64_S	= 661,
    CONST_I32	= 662,
    CONST_I32_S	= 663,
    CONST_I64	= 664,
    CONST_I64_S	= 665,
    CONST_V128_F32x4	= 666,
    CONST_V128_F32x4_S	= 667,
    CONST_V128_F64x2	= 668,
    CONST_V128_F64x2_S	= 669,
    CONST_V128_I16x8	= 670,
    CONST_V128_I16x8_S	= 671,
    CONST_V128_I32x4	= 672,
    CONST_V128_I32x4_S	= 673,
    CONST_V128_I64x2	= 674,
    CONST_V128_I64x2_S	= 675,
    CONST_V128_I8x16	= 676,
    CONST_V128_I8x16_S	= 677,
    COPYSIGN_F32	= 678,
    COPYSIGN_F32_S	= 679,
    COPYSIGN_F64	= 680,
    COPYSIGN_F64_S	= 681,
    COPY_EXTERNREF	= 682,
    COPY_EXTERNREF_S	= 683,
    COPY_F32	= 684,
    COPY_F32_S	= 685,
    COPY_F64	= 686,
    COPY_F64_S	= 687,
    COPY_FUNCREF	= 688,
    COPY_FUNCREF_S	= 689,
    COPY_I32	= 690,
    COPY_I32_S	= 691,
    COPY_I64	= 692,
    COPY_I64_S	= 693,
    COPY_V128	= 694,
    COPY_V128_S	= 695,
    CTZ_I32	= 696,
    CTZ_I32_S	= 697,
    CTZ_I64	= 698,
    CTZ_I64_S	= 699,
    DEBUG_UNREACHABLE	= 700,
    DEBUG_UNREACHABLE_S	= 701,
    DELEGATE	= 702,
    DELEGATE_S	= 703,
    DIV_F32	= 704,
    DIV_F32_S	= 705,
    DIV_F32x4	= 706,
    DIV_F32x4_S	= 707,
    DIV_F64	= 708,
    DIV_F64_S	= 709,
    DIV_F64x2	= 710,
    DIV_F64x2_S	= 711,
    DIV_S_I32	= 712,
    DIV_S_I32_S	= 713,
    DIV_S_I64	= 714,
    DIV_S_I64_S	= 715,
    DIV_U_I32	= 716,
    DIV_U_I32_S	= 717,
    DIV_U_I64	= 718,
    DIV_U_I64_S	= 719,
    DOT	= 720,
    DOT_S	= 721,
    DROP_EXTERNREF	= 722,
    DROP_EXTERNREF_S	= 723,
    DROP_F32	= 724,
    DROP_F32_S	= 725,
    DROP_F64	= 726,
    DROP_F64_S	= 727,
    DROP_FUNCREF	= 728,
    DROP_FUNCREF_S	= 729,
    DROP_I32	= 730,
    DROP_I32_S	= 731,
    DROP_I64	= 732,
    DROP_I64_S	= 733,
    DROP_V128	= 734,
    DROP_V128_S	= 735,
    ELSE	= 736,
    ELSE_S	= 737,
    END	= 738,
    END_BLOCK	= 739,
    END_BLOCK_S	= 740,
    END_FUNCTION	= 741,
    END_FUNCTION_S	= 742,
    END_IF	= 743,
    END_IF_S	= 744,
    END_LOOP	= 745,
    END_LOOP_S	= 746,
    END_S	= 747,
    END_TRY	= 748,
    END_TRY_S	= 749,
    EQZ_I32	= 750,
    EQZ_I32_S	= 751,
    EQZ_I64	= 752,
    EQZ_I64_S	= 753,
    EQ_F32	= 754,
    EQ_F32_S	= 755,
    EQ_F32x4	= 756,
    EQ_F32x4_S	= 757,
    EQ_F64	= 758,
    EQ_F64_S	= 759,
    EQ_F64x2	= 760,
    EQ_F64x2_S	= 761,
    EQ_I16x8	= 762,
    EQ_I16x8_S	= 763,
    EQ_I32	= 764,
    EQ_I32_S	= 765,
    EQ_I32x4	= 766,
    EQ_I32x4_S	= 767,
    EQ_I64	= 768,
    EQ_I64_S	= 769,
    EQ_I64x2	= 770,
    EQ_I64x2_S	= 771,
    EQ_I8x16	= 772,
    EQ_I8x16_S	= 773,
    EXTMUL_HIGH_S_I16x8	= 774,
    EXTMUL_HIGH_S_I16x8_S	= 775,
    EXTMUL_HIGH_S_I32x4	= 776,
    EXTMUL_HIGH_S_I32x4_S	= 777,
    EXTMUL_HIGH_S_I64x2	= 778,
    EXTMUL_HIGH_S_I64x2_S	= 779,
    EXTMUL_HIGH_U_I16x8	= 780,
    EXTMUL_HIGH_U_I16x8_S	= 781,
    EXTMUL_HIGH_U_I32x4	= 782,
    EXTMUL_HIGH_U_I32x4_S	= 783,
    EXTMUL_HIGH_U_I64x2	= 784,
    EXTMUL_HIGH_U_I64x2_S	= 785,
    EXTMUL_LOW_S_I16x8	= 786,
    EXTMUL_LOW_S_I16x8_S	= 787,
    EXTMUL_LOW_S_I32x4	= 788,
    EXTMUL_LOW_S_I32x4_S	= 789,
    EXTMUL_LOW_S_I64x2	= 790,
    EXTMUL_LOW_S_I64x2_S	= 791,
    EXTMUL_LOW_U_I16x8	= 792,
    EXTMUL_LOW_U_I16x8_S	= 793,
    EXTMUL_LOW_U_I32x4	= 794,
    EXTMUL_LOW_U_I32x4_S	= 795,
    EXTMUL_LOW_U_I64x2	= 796,
    EXTMUL_LOW_U_I64x2_S	= 797,
    EXTRACT_LANE_F32x4	= 798,
    EXTRACT_LANE_F32x4_S	= 799,
    EXTRACT_LANE_F64x2	= 800,
    EXTRACT_LANE_F64x2_S	= 801,
    EXTRACT_LANE_I16x8_s	= 802,
    EXTRACT_LANE_I16x8_s_S	= 803,
    EXTRACT_LANE_I16x8_u	= 804,
    EXTRACT_LANE_I16x8_u_S	= 805,
    EXTRACT_LANE_I32x4	= 806,
    EXTRACT_LANE_I32x4_S	= 807,
    EXTRACT_LANE_I64x2	= 808,
    EXTRACT_LANE_I64x2_S	= 809,
    EXTRACT_LANE_I8x16_s	= 810,
    EXTRACT_LANE_I8x16_s_S	= 811,
    EXTRACT_LANE_I8x16_u	= 812,
    EXTRACT_LANE_I8x16_u_S	= 813,
    F32_CONVERT_S_I32	= 814,
    F32_CONVERT_S_I32_S	= 815,
    F32_CONVERT_S_I64	= 816,
    F32_CONVERT_S_I64_S	= 817,
    F32_CONVERT_U_I32	= 818,
    F32_CONVERT_U_I32_S	= 819,
    F32_CONVERT_U_I64	= 820,
    F32_CONVERT_U_I64_S	= 821,
    F32_DEMOTE_F64	= 822,
    F32_DEMOTE_F64_S	= 823,
    F32_REINTERPRET_I32	= 824,
    F32_REINTERPRET_I32_S	= 825,
    F64_CONVERT_S_I32	= 826,
    F64_CONVERT_S_I32_S	= 827,
    F64_CONVERT_S_I64	= 828,
    F64_CONVERT_S_I64_S	= 829,
    F64_CONVERT_U_I32	= 830,
    F64_CONVERT_U_I32_S	= 831,
    F64_CONVERT_U_I64	= 832,
    F64_CONVERT_U_I64_S	= 833,
    F64_PROMOTE_F32	= 834,
    F64_PROMOTE_F32_S	= 835,
    F64_REINTERPRET_I64	= 836,
    F64_REINTERPRET_I64_S	= 837,
    FALLTHROUGH_RETURN	= 838,
    FALLTHROUGH_RETURN_S	= 839,
    FLOOR_F32	= 840,
    FLOOR_F32_S	= 841,
    FLOOR_F32x4	= 842,
    FLOOR_F32x4_S	= 843,
    FLOOR_F64	= 844,
    FLOOR_F64_S	= 845,
    FLOOR_F64x2	= 846,
    FLOOR_F64x2_S	= 847,
    FP_TO_SINT_I32_F32	= 848,
    FP_TO_SINT_I32_F32_S	= 849,
    FP_TO_SINT_I32_F64	= 850,
    FP_TO_SINT_I32_F64_S	= 851,
    FP_TO_SINT_I64_F32	= 852,
    FP_TO_SINT_I64_F32_S	= 853,
    FP_TO_SINT_I64_F64	= 854,
    FP_TO_SINT_I64_F64_S	= 855,
    FP_TO_UINT_I32_F32	= 856,
    FP_TO_UINT_I32_F32_S	= 857,
    FP_TO_UINT_I32_F64	= 858,
    FP_TO_UINT_I32_F64_S	= 859,
    FP_TO_UINT_I64_F32	= 860,
    FP_TO_UINT_I64_F32_S	= 861,
    FP_TO_UINT_I64_F64	= 862,
    FP_TO_UINT_I64_F64_S	= 863,
    GE_F32	= 864,
    GE_F32_S	= 865,
    GE_F32x4	= 866,
    GE_F32x4_S	= 867,
    GE_F64	= 868,
    GE_F64_S	= 869,
    GE_F64x2	= 870,
    GE_F64x2_S	= 871,
    GE_S_I16x8	= 872,
    GE_S_I16x8_S	= 873,
    GE_S_I32	= 874,
    GE_S_I32_S	= 875,
    GE_S_I32x4	= 876,
    GE_S_I32x4_S	= 877,
    GE_S_I64	= 878,
    GE_S_I64_S	= 879,
    GE_S_I64x2	= 880,
    GE_S_I64x2_S	= 881,
    GE_S_I8x16	= 882,
    GE_S_I8x16_S	= 883,
    GE_U_I16x8	= 884,
    GE_U_I16x8_S	= 885,
    GE_U_I32	= 886,
    GE_U_I32_S	= 887,
    GE_U_I32x4	= 888,
    GE_U_I32x4_S	= 889,
    GE_U_I64	= 890,
    GE_U_I64_S	= 891,
    GE_U_I8x16	= 892,
    GE_U_I8x16_S	= 893,
    GLOBAL_GET_EXTERNREF	= 894,
    GLOBAL_GET_EXTERNREF_S	= 895,
    GLOBAL_GET_F32	= 896,
    GLOBAL_GET_F32_S	= 897,
    GLOBAL_GET_F64	= 898,
    GLOBAL_GET_F64_S	= 899,
    GLOBAL_GET_FUNCREF	= 900,
    GLOBAL_GET_FUNCREF_S	= 901,
    GLOBAL_GET_I32	= 902,
    GLOBAL_GET_I32_S	= 903,
    GLOBAL_GET_I64	= 904,
    GLOBAL_GET_I64_S	= 905,
    GLOBAL_GET_V128	= 906,
    GLOBAL_GET_V128_S	= 907,
    GLOBAL_SET_EXTERNREF	= 908,
    GLOBAL_SET_EXTERNREF_S	= 909,
    GLOBAL_SET_F32	= 910,
    GLOBAL_SET_F32_S	= 911,
    GLOBAL_SET_F64	= 912,
    GLOBAL_SET_F64_S	= 913,
    GLOBAL_SET_FUNCREF	= 914,
    GLOBAL_SET_FUNCREF_S	= 915,
    GLOBAL_SET_I32	= 916,
    GLOBAL_SET_I32_S	= 917,
    GLOBAL_SET_I64	= 918,
    GLOBAL_SET_I64_S	= 919,
    GLOBAL_SET_V128	= 920,
    GLOBAL_SET_V128_S	= 921,
    GT_F32	= 922,
    GT_F32_S	= 923,
    GT_F32x4	= 924,
    GT_F32x4_S	= 925,
    GT_F64	= 926,
    GT_F64_S	= 927,
    GT_F64x2	= 928,
    GT_F64x2_S	= 929,
    GT_S_I16x8	= 930,
    GT_S_I16x8_S	= 931,
    GT_S_I32	= 932,
    GT_S_I32_S	= 933,
    GT_S_I32x4	= 934,
    GT_S_I32x4_S	= 935,
    GT_S_I64	= 936,
    GT_S_I64_S	= 937,
    GT_S_I64x2	= 938,
    GT_S_I64x2_S	= 939,
    GT_S_I8x16	= 940,
    GT_S_I8x16_S	= 941,
    GT_U_I16x8	= 942,
    GT_U_I16x8_S	= 943,
    GT_U_I32	= 944,
    GT_U_I32_S	= 945,
    GT_U_I32x4	= 946,
    GT_U_I32x4_S	= 947,
    GT_U_I64	= 948,
    GT_U_I64_S	= 949,
    GT_U_I8x16	= 950,
    GT_U_I8x16_S	= 951,
    I32_EXTEND16_S_I32	= 952,
    I32_EXTEND16_S_I32_S	= 953,
    I32_EXTEND8_S_I32	= 954,
    I32_EXTEND8_S_I32_S	= 955,
    I32_REINTERPRET_F32	= 956,
    I32_REINTERPRET_F32_S	= 957,
    I32_TRUNC_S_F32	= 958,
    I32_TRUNC_S_F32_S	= 959,
    I32_TRUNC_S_F64	= 960,
    I32_TRUNC_S_F64_S	= 961,
    I32_TRUNC_S_SAT_F32	= 962,
    I32_TRUNC_S_SAT_F32_S	= 963,
    I32_TRUNC_S_SAT_F64	= 964,
    I32_TRUNC_S_SAT_F64_S	= 965,
    I32_TRUNC_U_F32	= 966,
    I32_TRUNC_U_F32_S	= 967,
    I32_TRUNC_U_F64	= 968,
    I32_TRUNC_U_F64_S	= 969,
    I32_TRUNC_U_SAT_F32	= 970,
    I32_TRUNC_U_SAT_F32_S	= 971,
    I32_TRUNC_U_SAT_F64	= 972,
    I32_TRUNC_U_SAT_F64_S	= 973,
    I32_WRAP_I64	= 974,
    I32_WRAP_I64_S	= 975,
    I64_EXTEND16_S_I64	= 976,
    I64_EXTEND16_S_I64_S	= 977,
    I64_EXTEND32_S_I64	= 978,
    I64_EXTEND32_S_I64_S	= 979,
    I64_EXTEND8_S_I64	= 980,
    I64_EXTEND8_S_I64_S	= 981,
    I64_EXTEND_S_I32	= 982,
    I64_EXTEND_S_I32_S	= 983,
    I64_EXTEND_U_I32	= 984,
    I64_EXTEND_U_I32_S	= 985,
    I64_REINTERPRET_F64	= 986,
    I64_REINTERPRET_F64_S	= 987,
    I64_TRUNC_S_F32	= 988,
    I64_TRUNC_S_F32_S	= 989,
    I64_TRUNC_S_F64	= 990,
    I64_TRUNC_S_F64_S	= 991,
    I64_TRUNC_S_SAT_F32	= 992,
    I64_TRUNC_S_SAT_F32_S	= 993,
    I64_TRUNC_S_SAT_F64	= 994,
    I64_TRUNC_S_SAT_F64_S	= 995,
    I64_TRUNC_U_F32	= 996,
    I64_TRUNC_U_F32_S	= 997,
    I64_TRUNC_U_F64	= 998,
    I64_TRUNC_U_F64_S	= 999,
    I64_TRUNC_U_SAT_F32	= 1000,
    I64_TRUNC_U_SAT_F32_S	= 1001,
    I64_TRUNC_U_SAT_F64	= 1002,
    I64_TRUNC_U_SAT_F64_S	= 1003,
    IF	= 1004,
    IF_S	= 1005,
    LANESELECT_I16x8	= 1006,
    LANESELECT_I16x8_S	= 1007,
    LANESELECT_I32x4	= 1008,
    LANESELECT_I32x4_S	= 1009,
    LANESELECT_I64x2	= 1010,
    LANESELECT_I64x2_S	= 1011,
    LANESELECT_I8x16	= 1012,
    LANESELECT_I8x16_S	= 1013,
    LE_F32	= 1014,
    LE_F32_S	= 1015,
    LE_F32x4	= 1016,
    LE_F32x4_S	= 1017,
    LE_F64	= 1018,
    LE_F64_S	= 1019,
    LE_F64x2	= 1020,
    LE_F64x2_S	= 1021,
    LE_S_I16x8	= 1022,
    LE_S_I16x8_S	= 1023,
    LE_S_I32	= 1024,
    LE_S_I32_S	= 1025,
    LE_S_I32x4	= 1026,
    LE_S_I32x4_S	= 1027,
    LE_S_I64	= 1028,
    LE_S_I64_S	= 1029,
    LE_S_I64x2	= 1030,
    LE_S_I64x2_S	= 1031,
    LE_S_I8x16	= 1032,
    LE_S_I8x16_S	= 1033,
    LE_U_I16x8	= 1034,
    LE_U_I16x8_S	= 1035,
    LE_U_I32	= 1036,
    LE_U_I32_S	= 1037,
    LE_U_I32x4	= 1038,
    LE_U_I32x4_S	= 1039,
    LE_U_I64	= 1040,
    LE_U_I64_S	= 1041,
    LE_U_I8x16	= 1042,
    LE_U_I8x16_S	= 1043,
    LOAD16_SPLAT_A32	= 1044,
    LOAD16_SPLAT_A32_S	= 1045,
    LOAD16_SPLAT_A64	= 1046,
    LOAD16_SPLAT_A64_S	= 1047,
    LOAD16_S_I32_A32	= 1048,
    LOAD16_S_I32_A32_S	= 1049,
    LOAD16_S_I32_A64	= 1050,
    LOAD16_S_I32_A64_S	= 1051,
    LOAD16_S_I64_A32	= 1052,
    LOAD16_S_I64_A32_S	= 1053,
    LOAD16_S_I64_A64	= 1054,
    LOAD16_S_I64_A64_S	= 1055,
    LOAD16_U_I32_A32	= 1056,
    LOAD16_U_I32_A32_S	= 1057,
    LOAD16_U_I32_A64	= 1058,
    LOAD16_U_I32_A64_S	= 1059,
    LOAD16_U_I64_A32	= 1060,
    LOAD16_U_I64_A32_S	= 1061,
    LOAD16_U_I64_A64	= 1062,
    LOAD16_U_I64_A64_S	= 1063,
    LOAD32_SPLAT_A32	= 1064,
    LOAD32_SPLAT_A32_S	= 1065,
    LOAD32_SPLAT_A64	= 1066,
    LOAD32_SPLAT_A64_S	= 1067,
    LOAD32_S_I64_A32	= 1068,
    LOAD32_S_I64_A32_S	= 1069,
    LOAD32_S_I64_A64	= 1070,
    LOAD32_S_I64_A64_S	= 1071,
    LOAD32_U_I64_A32	= 1072,
    LOAD32_U_I64_A32_S	= 1073,
    LOAD32_U_I64_A64	= 1074,
    LOAD32_U_I64_A64_S	= 1075,
    LOAD64_SPLAT_A32	= 1076,
    LOAD64_SPLAT_A32_S	= 1077,
    LOAD64_SPLAT_A64	= 1078,
    LOAD64_SPLAT_A64_S	= 1079,
    LOAD8_SPLAT_A32	= 1080,
    LOAD8_SPLAT_A32_S	= 1081,
    LOAD8_SPLAT_A64	= 1082,
    LOAD8_SPLAT_A64_S	= 1083,
    LOAD8_S_I32_A32	= 1084,
    LOAD8_S_I32_A32_S	= 1085,
    LOAD8_S_I32_A64	= 1086,
    LOAD8_S_I32_A64_S	= 1087,
    LOAD8_S_I64_A32	= 1088,
    LOAD8_S_I64_A32_S	= 1089,
    LOAD8_S_I64_A64	= 1090,
    LOAD8_S_I64_A64_S	= 1091,
    LOAD8_U_I32_A32	= 1092,
    LOAD8_U_I32_A32_S	= 1093,
    LOAD8_U_I32_A64	= 1094,
    LOAD8_U_I32_A64_S	= 1095,
    LOAD8_U_I64_A32	= 1096,
    LOAD8_U_I64_A32_S	= 1097,
    LOAD8_U_I64_A64	= 1098,
    LOAD8_U_I64_A64_S	= 1099,
    LOAD_EXTEND_S_I16x8_A32	= 1100,
    LOAD_EXTEND_S_I16x8_A32_S	= 1101,
    LOAD_EXTEND_S_I16x8_A64	= 1102,
    LOAD_EXTEND_S_I16x8_A64_S	= 1103,
    LOAD_EXTEND_S_I32x4_A32	= 1104,
    LOAD_EXTEND_S_I32x4_A32_S	= 1105,
    LOAD_EXTEND_S_I32x4_A64	= 1106,
    LOAD_EXTEND_S_I32x4_A64_S	= 1107,
    LOAD_EXTEND_S_I64x2_A32	= 1108,
    LOAD_EXTEND_S_I64x2_A32_S	= 1109,
    LOAD_EXTEND_S_I64x2_A64	= 1110,
    LOAD_EXTEND_S_I64x2_A64_S	= 1111,
    LOAD_EXTEND_U_I16x8_A32	= 1112,
    LOAD_EXTEND_U_I16x8_A32_S	= 1113,
    LOAD_EXTEND_U_I16x8_A64	= 1114,
    LOAD_EXTEND_U_I16x8_A64_S	= 1115,
    LOAD_EXTEND_U_I32x4_A32	= 1116,
    LOAD_EXTEND_U_I32x4_A32_S	= 1117,
    LOAD_EXTEND_U_I32x4_A64	= 1118,
    LOAD_EXTEND_U_I32x4_A64_S	= 1119,
    LOAD_EXTEND_U_I64x2_A32	= 1120,
    LOAD_EXTEND_U_I64x2_A32_S	= 1121,
    LOAD_EXTEND_U_I64x2_A64	= 1122,
    LOAD_EXTEND_U_I64x2_A64_S	= 1123,
    LOAD_F32_A32	= 1124,
    LOAD_F32_A32_S	= 1125,
    LOAD_F32_A64	= 1126,
    LOAD_F32_A64_S	= 1127,
    LOAD_F64_A32	= 1128,
    LOAD_F64_A32_S	= 1129,
    LOAD_F64_A64	= 1130,
    LOAD_F64_A64_S	= 1131,
    LOAD_I32_A32	= 1132,
    LOAD_I32_A32_S	= 1133,
    LOAD_I32_A64	= 1134,
    LOAD_I32_A64_S	= 1135,
    LOAD_I64_A32	= 1136,
    LOAD_I64_A32_S	= 1137,
    LOAD_I64_A64	= 1138,
    LOAD_I64_A64_S	= 1139,
    LOAD_LANE_I16x8_A32	= 1140,
    LOAD_LANE_I16x8_A32_S	= 1141,
    LOAD_LANE_I16x8_A64	= 1142,
    LOAD_LANE_I16x8_A64_S	= 1143,
    LOAD_LANE_I32x4_A32	= 1144,
    LOAD_LANE_I32x4_A32_S	= 1145,
    LOAD_LANE_I32x4_A64	= 1146,
    LOAD_LANE_I32x4_A64_S	= 1147,
    LOAD_LANE_I64x2_A32	= 1148,
    LOAD_LANE_I64x2_A32_S	= 1149,
    LOAD_LANE_I64x2_A64	= 1150,
    LOAD_LANE_I64x2_A64_S	= 1151,
    LOAD_LANE_I8x16_A32	= 1152,
    LOAD_LANE_I8x16_A32_S	= 1153,
    LOAD_LANE_I8x16_A64	= 1154,
    LOAD_LANE_I8x16_A64_S	= 1155,
    LOAD_V128_A32	= 1156,
    LOAD_V128_A32_S	= 1157,
    LOAD_V128_A64	= 1158,
    LOAD_V128_A64_S	= 1159,
    LOAD_ZERO_I32x4_A32	= 1160,
    LOAD_ZERO_I32x4_A32_S	= 1161,
    LOAD_ZERO_I32x4_A64	= 1162,
    LOAD_ZERO_I32x4_A64_S	= 1163,
    LOAD_ZERO_I64x2_A32	= 1164,
    LOAD_ZERO_I64x2_A32_S	= 1165,
    LOAD_ZERO_I64x2_A64	= 1166,
    LOAD_ZERO_I64x2_A64_S	= 1167,
    LOCAL_GET_EXTERNREF	= 1168,
    LOCAL_GET_EXTERNREF_S	= 1169,
    LOCAL_GET_F32	= 1170,
    LOCAL_GET_F32_S	= 1171,
    LOCAL_GET_F64	= 1172,
    LOCAL_GET_F64_S	= 1173,
    LOCAL_GET_FUNCREF	= 1174,
    LOCAL_GET_FUNCREF_S	= 1175,
    LOCAL_GET_I32	= 1176,
    LOCAL_GET_I32_S	= 1177,
    LOCAL_GET_I64	= 1178,
    LOCAL_GET_I64_S	= 1179,
    LOCAL_GET_V128	= 1180,
    LOCAL_GET_V128_S	= 1181,
    LOCAL_SET_EXTERNREF	= 1182,
    LOCAL_SET_EXTERNREF_S	= 1183,
    LOCAL_SET_F32	= 1184,
    LOCAL_SET_F32_S	= 1185,
    LOCAL_SET_F64	= 1186,
    LOCAL_SET_F64_S	= 1187,
    LOCAL_SET_FUNCREF	= 1188,
    LOCAL_SET_FUNCREF_S	= 1189,
    LOCAL_SET_I32	= 1190,
    LOCAL_SET_I32_S	= 1191,
    LOCAL_SET_I64	= 1192,
    LOCAL_SET_I64_S	= 1193,
    LOCAL_SET_V128	= 1194,
    LOCAL_SET_V128_S	= 1195,
    LOCAL_TEE_EXTERNREF	= 1196,
    LOCAL_TEE_EXTERNREF_S	= 1197,
    LOCAL_TEE_F32	= 1198,
    LOCAL_TEE_F32_S	= 1199,
    LOCAL_TEE_F64	= 1200,
    LOCAL_TEE_F64_S	= 1201,
    LOCAL_TEE_FUNCREF	= 1202,
    LOCAL_TEE_FUNCREF_S	= 1203,
    LOCAL_TEE_I32	= 1204,
    LOCAL_TEE_I32_S	= 1205,
    LOCAL_TEE_I64	= 1206,
    LOCAL_TEE_I64_S	= 1207,
    LOCAL_TEE_V128	= 1208,
    LOCAL_TEE_V128_S	= 1209,
    LOOP	= 1210,
    LOOP_S	= 1211,
    LT_F32	= 1212,
    LT_F32_S	= 1213,
    LT_F32x4	= 1214,
    LT_F32x4_S	= 1215,
    LT_F64	= 1216,
    LT_F64_S	= 1217,
    LT_F64x2	= 1218,
    LT_F64x2_S	= 1219,
    LT_S_I16x8	= 1220,
    LT_S_I16x8_S	= 1221,
    LT_S_I32	= 1222,
    LT_S_I32_S	= 1223,
    LT_S_I32x4	= 1224,
    LT_S_I32x4_S	= 1225,
    LT_S_I64	= 1226,
    LT_S_I64_S	= 1227,
    LT_S_I64x2	= 1228,
    LT_S_I64x2_S	= 1229,
    LT_S_I8x16	= 1230,
    LT_S_I8x16_S	= 1231,
    LT_U_I16x8	= 1232,
    LT_U_I16x8_S	= 1233,
    LT_U_I32	= 1234,
    LT_U_I32_S	= 1235,
    LT_U_I32x4	= 1236,
    LT_U_I32x4_S	= 1237,
    LT_U_I64	= 1238,
    LT_U_I64_S	= 1239,
    LT_U_I8x16	= 1240,
    LT_U_I8x16_S	= 1241,
    MADD_F32x4	= 1242,
    MADD_F32x4_S	= 1243,
    MADD_F64x2	= 1244,
    MADD_F64x2_S	= 1245,
    MAX_F32	= 1246,
    MAX_F32_S	= 1247,
    MAX_F32x4	= 1248,
    MAX_F32x4_S	= 1249,
    MAX_F64	= 1250,
    MAX_F64_S	= 1251,
    MAX_F64x2	= 1252,
    MAX_F64x2_S	= 1253,
    MAX_S_I16x8	= 1254,
    MAX_S_I16x8_S	= 1255,
    MAX_S_I32x4	= 1256,
    MAX_S_I32x4_S	= 1257,
    MAX_S_I8x16	= 1258,
    MAX_S_I8x16_S	= 1259,
    MAX_U_I16x8	= 1260,
    MAX_U_I16x8_S	= 1261,
    MAX_U_I32x4	= 1262,
    MAX_U_I32x4_S	= 1263,
    MAX_U_I8x16	= 1264,
    MAX_U_I8x16_S	= 1265,
    MEMORY_ATOMIC_NOTIFY_A32	= 1266,
    MEMORY_ATOMIC_NOTIFY_A32_S	= 1267,
    MEMORY_ATOMIC_NOTIFY_A64	= 1268,
    MEMORY_ATOMIC_NOTIFY_A64_S	= 1269,
    MEMORY_ATOMIC_WAIT32_A32	= 1270,
    MEMORY_ATOMIC_WAIT32_A32_S	= 1271,
    MEMORY_ATOMIC_WAIT32_A64	= 1272,
    MEMORY_ATOMIC_WAIT32_A64_S	= 1273,
    MEMORY_ATOMIC_WAIT64_A32	= 1274,
    MEMORY_ATOMIC_WAIT64_A32_S	= 1275,
    MEMORY_ATOMIC_WAIT64_A64	= 1276,
    MEMORY_ATOMIC_WAIT64_A64_S	= 1277,
    MIN_F32	= 1278,
    MIN_F32_S	= 1279,
    MIN_F32x4	= 1280,
    MIN_F32x4_S	= 1281,
    MIN_F64	= 1282,
    MIN_F64_S	= 1283,
    MIN_F64x2	= 1284,
    MIN_F64x2_S	= 1285,
    MIN_S_I16x8	= 1286,
    MIN_S_I16x8_S	= 1287,
    MIN_S_I32x4	= 1288,
    MIN_S_I32x4_S	= 1289,
    MIN_S_I8x16	= 1290,
    MIN_S_I8x16_S	= 1291,
    MIN_U_I16x8	= 1292,
    MIN_U_I16x8_S	= 1293,
    MIN_U_I32x4	= 1294,
    MIN_U_I32x4_S	= 1295,
    MIN_U_I8x16	= 1296,
    MIN_U_I8x16_S	= 1297,
    MUL_F32	= 1298,
    MUL_F32_S	= 1299,
    MUL_F32x4	= 1300,
    MUL_F32x4_S	= 1301,
    MUL_F64	= 1302,
    MUL_F64_S	= 1303,
    MUL_F64x2	= 1304,
    MUL_F64x2_S	= 1305,
    MUL_I16x8	= 1306,
    MUL_I16x8_S	= 1307,
    MUL_I32	= 1308,
    MUL_I32_S	= 1309,
    MUL_I32x4	= 1310,
    MUL_I32x4_S	= 1311,
    MUL_I64	= 1312,
    MUL_I64_S	= 1313,
    MUL_I64x2	= 1314,
    MUL_I64x2_S	= 1315,
    NARROW_S_I16x8	= 1316,
    NARROW_S_I16x8_S	= 1317,
    NARROW_S_I8x16	= 1318,
    NARROW_S_I8x16_S	= 1319,
    NARROW_U_I16x8	= 1320,
    NARROW_U_I16x8_S	= 1321,
    NARROW_U_I8x16	= 1322,
    NARROW_U_I8x16_S	= 1323,
    NEAREST_F32	= 1324,
    NEAREST_F32_S	= 1325,
    NEAREST_F32x4	= 1326,
    NEAREST_F32x4_S	= 1327,
    NEAREST_F64	= 1328,
    NEAREST_F64_S	= 1329,
    NEAREST_F64x2	= 1330,
    NEAREST_F64x2_S	= 1331,
    NEG_F32	= 1332,
    NEG_F32_S	= 1333,
    NEG_F32x4	= 1334,
    NEG_F32x4_S	= 1335,
    NEG_F64	= 1336,
    NEG_F64_S	= 1337,
    NEG_F64x2	= 1338,
    NEG_F64x2_S	= 1339,
    NEG_I16x8	= 1340,
    NEG_I16x8_S	= 1341,
    NEG_I32x4	= 1342,
    NEG_I32x4_S	= 1343,
    NEG_I64x2	= 1344,
    NEG_I64x2_S	= 1345,
    NEG_I8x16	= 1346,
    NEG_I8x16_S	= 1347,
    NE_F32	= 1348,
    NE_F32_S	= 1349,
    NE_F32x4	= 1350,
    NE_F32x4_S	= 1351,
    NE_F64	= 1352,
    NE_F64_S	= 1353,
    NE_F64x2	= 1354,
    NE_F64x2_S	= 1355,
    NE_I16x8	= 1356,
    NE_I16x8_S	= 1357,
    NE_I32	= 1358,
    NE_I32_S	= 1359,
    NE_I32x4	= 1360,
    NE_I32x4_S	= 1361,
    NE_I64	= 1362,
    NE_I64_S	= 1363,
    NE_I64x2	= 1364,
    NE_I64x2_S	= 1365,
    NE_I8x16	= 1366,
    NE_I8x16_S	= 1367,
    NMADD_F32x4	= 1368,
    NMADD_F32x4_S	= 1369,
    NMADD_F64x2	= 1370,
    NMADD_F64x2_S	= 1371,
    NOP	= 1372,
    NOP_S	= 1373,
    NOT	= 1374,
    NOT_S	= 1375,
    OR	= 1376,
    OR_I32	= 1377,
    OR_I32_S	= 1378,
    OR_I64	= 1379,
    OR_I64_S	= 1380,
    OR_S	= 1381,
    PMAX_F32x4	= 1382,
    PMAX_F32x4_S	= 1383,
    PMAX_F64x2	= 1384,
    PMAX_F64x2_S	= 1385,
    PMIN_F32x4	= 1386,
    PMIN_F32x4_S	= 1387,
    PMIN_F64x2	= 1388,
    PMIN_F64x2_S	= 1389,
    POPCNT_I32	= 1390,
    POPCNT_I32_S	= 1391,
    POPCNT_I64	= 1392,
    POPCNT_I64_S	= 1393,
    POPCNT_I8x16	= 1394,
    POPCNT_I8x16_S	= 1395,
    Q15MULR_SAT_S_I16x8	= 1396,
    Q15MULR_SAT_S_I16x8_S	= 1397,
    REF_IS_NULL_EXTERNREF	= 1398,
    REF_IS_NULL_EXTERNREF_S	= 1399,
    REF_IS_NULL_FUNCREF	= 1400,
    REF_IS_NULL_FUNCREF_S	= 1401,
    REF_NULL_EXTERNREF	= 1402,
    REF_NULL_EXTERNREF_S	= 1403,
    REF_NULL_FUNCREF	= 1404,
    REF_NULL_FUNCREF_S	= 1405,
    RELAXED_DOT	= 1406,
    RELAXED_DOT_ADD	= 1407,
    RELAXED_DOT_ADD_S	= 1408,
    RELAXED_DOT_BFLOAT	= 1409,
    RELAXED_DOT_BFLOAT_S	= 1410,
    RELAXED_DOT_S	= 1411,
    RELAXED_Q15MULR_S_I16x8	= 1412,
    RELAXED_Q15MULR_S_I16x8_S	= 1413,
    RELAXED_SWIZZLE	= 1414,
    RELAXED_SWIZZLE_S	= 1415,
    REM_S_I32	= 1416,
    REM_S_I32_S	= 1417,
    REM_S_I64	= 1418,
    REM_S_I64_S	= 1419,
    REM_U_I32	= 1420,
    REM_U_I32_S	= 1421,
    REM_U_I64	= 1422,
    REM_U_I64_S	= 1423,
    REPLACE_LANE_F32x4	= 1424,
    REPLACE_LANE_F32x4_S	= 1425,
    REPLACE_LANE_F64x2	= 1426,
    REPLACE_LANE_F64x2_S	= 1427,
    REPLACE_LANE_I16x8	= 1428,
    REPLACE_LANE_I16x8_S	= 1429,
    REPLACE_LANE_I32x4	= 1430,
    REPLACE_LANE_I32x4_S	= 1431,
    REPLACE_LANE_I64x2	= 1432,
    REPLACE_LANE_I64x2_S	= 1433,
    REPLACE_LANE_I8x16	= 1434,
    REPLACE_LANE_I8x16_S	= 1435,
    RETHROW	= 1436,
    RETHROW_S	= 1437,
    RETURN	= 1438,
    RETURN_S	= 1439,
    RET_CALL	= 1440,
    RET_CALL_INDIRECT	= 1441,
    RET_CALL_INDIRECT_S	= 1442,
    RET_CALL_S	= 1443,
    ROTL_I32	= 1444,
    ROTL_I32_S	= 1445,
    ROTL_I64	= 1446,
    ROTL_I64_S	= 1447,
    ROTR_I32	= 1448,
    ROTR_I32_S	= 1449,
    ROTR_I64	= 1450,
    ROTR_I64_S	= 1451,
    SELECT_EXTERNREF	= 1452,
    SELECT_EXTERNREF_S	= 1453,
    SELECT_F32	= 1454,
    SELECT_F32_S	= 1455,
    SELECT_F64	= 1456,
    SELECT_F64_S	= 1457,
    SELECT_FUNCREF	= 1458,
    SELECT_FUNCREF_S	= 1459,
    SELECT_I32	= 1460,
    SELECT_I32_S	= 1461,
    SELECT_I64	= 1462,
    SELECT_I64_S	= 1463,
    SELECT_V128	= 1464,
    SELECT_V128_S	= 1465,
    SHL_I16x8	= 1466,
    SHL_I16x8_S	= 1467,
    SHL_I32	= 1468,
    SHL_I32_S	= 1469,
    SHL_I32x4	= 1470,
    SHL_I32x4_S	= 1471,
    SHL_I64	= 1472,
    SHL_I64_S	= 1473,
    SHL_I64x2	= 1474,
    SHL_I64x2_S	= 1475,
    SHL_I8x16	= 1476,
    SHL_I8x16_S	= 1477,
    SHR_S_I16x8	= 1478,
    SHR_S_I16x8_S	= 1479,
    SHR_S_I32	= 1480,
    SHR_S_I32_S	= 1481,
    SHR_S_I32x4	= 1482,
    SHR_S_I32x4_S	= 1483,
    SHR_S_I64	= 1484,
    SHR_S_I64_S	= 1485,
    SHR_S_I64x2	= 1486,
    SHR_S_I64x2_S	= 1487,
    SHR_S_I8x16	= 1488,
    SHR_S_I8x16_S	= 1489,
    SHR_U_I16x8	= 1490,
    SHR_U_I16x8_S	= 1491,
    SHR_U_I32	= 1492,
    SHR_U_I32_S	= 1493,
    SHR_U_I32x4	= 1494,
    SHR_U_I32x4_S	= 1495,
    SHR_U_I64	= 1496,
    SHR_U_I64_S	= 1497,
    SHR_U_I64x2	= 1498,
    SHR_U_I64x2_S	= 1499,
    SHR_U_I8x16	= 1500,
    SHR_U_I8x16_S	= 1501,
    SHUFFLE	= 1502,
    SHUFFLE_S	= 1503,
    SIMD_RELAXED_FMAX_F32x4	= 1504,
    SIMD_RELAXED_FMAX_F32x4_S	= 1505,
    SIMD_RELAXED_FMAX_F64x2	= 1506,
    SIMD_RELAXED_FMAX_F64x2_S	= 1507,
    SIMD_RELAXED_FMIN_F32x4	= 1508,
    SIMD_RELAXED_FMIN_F32x4_S	= 1509,
    SIMD_RELAXED_FMIN_F64x2	= 1510,
    SIMD_RELAXED_FMIN_F64x2_S	= 1511,
    SPLAT_F32x4	= 1512,
    SPLAT_F32x4_S	= 1513,
    SPLAT_F64x2	= 1514,
    SPLAT_F64x2_S	= 1515,
    SPLAT_I16x8	= 1516,
    SPLAT_I16x8_S	= 1517,
    SPLAT_I32x4	= 1518,
    SPLAT_I32x4_S	= 1519,
    SPLAT_I64x2	= 1520,
    SPLAT_I64x2_S	= 1521,
    SPLAT_I8x16	= 1522,
    SPLAT_I8x16_S	= 1523,
    SQRT_F32	= 1524,
    SQRT_F32_S	= 1525,
    SQRT_F32x4	= 1526,
    SQRT_F32x4_S	= 1527,
    SQRT_F64	= 1528,
    SQRT_F64_S	= 1529,
    SQRT_F64x2	= 1530,
    SQRT_F64x2_S	= 1531,
    STORE16_I32_A32	= 1532,
    STORE16_I32_A32_S	= 1533,
    STORE16_I32_A64	= 1534,
    STORE16_I32_A64_S	= 1535,
    STORE16_I64_A32	= 1536,
    STORE16_I64_A32_S	= 1537,
    STORE16_I64_A64	= 1538,
    STORE16_I64_A64_S	= 1539,
    STORE32_I64_A32	= 1540,
    STORE32_I64_A32_S	= 1541,
    STORE32_I64_A64	= 1542,
    STORE32_I64_A64_S	= 1543,
    STORE8_I32_A32	= 1544,
    STORE8_I32_A32_S	= 1545,
    STORE8_I32_A64	= 1546,
    STORE8_I32_A64_S	= 1547,
    STORE8_I64_A32	= 1548,
    STORE8_I64_A32_S	= 1549,
    STORE8_I64_A64	= 1550,
    STORE8_I64_A64_S	= 1551,
    STORE_F32_A32	= 1552,
    STORE_F32_A32_S	= 1553,
    STORE_F32_A64	= 1554,
    STORE_F32_A64_S	= 1555,
    STORE_F64_A32	= 1556,
    STORE_F64_A32_S	= 1557,
    STORE_F64_A64	= 1558,
    STORE_F64_A64_S	= 1559,
    STORE_I32_A32	= 1560,
    STORE_I32_A32_S	= 1561,
    STORE_I32_A64	= 1562,
    STORE_I32_A64_S	= 1563,
    STORE_I64_A32	= 1564,
    STORE_I64_A32_S	= 1565,
    STORE_I64_A64	= 1566,
    STORE_I64_A64_S	= 1567,
    STORE_LANE_I16x8_A32	= 1568,
    STORE_LANE_I16x8_A32_S	= 1569,
    STORE_LANE_I16x8_A64	= 1570,
    STORE_LANE_I16x8_A64_S	= 1571,
    STORE_LANE_I32x4_A32	= 1572,
    STORE_LANE_I32x4_A32_S	= 1573,
    STORE_LANE_I32x4_A64	= 1574,
    STORE_LANE_I32x4_A64_S	= 1575,
    STORE_LANE_I64x2_A32	= 1576,
    STORE_LANE_I64x2_A32_S	= 1577,
    STORE_LANE_I64x2_A64	= 1578,
    STORE_LANE_I64x2_A64_S	= 1579,
    STORE_LANE_I8x16_A32	= 1580,
    STORE_LANE_I8x16_A32_S	= 1581,
    STORE_LANE_I8x16_A64	= 1582,
    STORE_LANE_I8x16_A64_S	= 1583,
    STORE_V128_A32	= 1584,
    STORE_V128_A32_S	= 1585,
    STORE_V128_A64	= 1586,
    STORE_V128_A64_S	= 1587,
    SUB_F32	= 1588,
    SUB_F32_S	= 1589,
    SUB_F32x4	= 1590,
    SUB_F32x4_S	= 1591,
    SUB_F64	= 1592,
    SUB_F64_S	= 1593,
    SUB_F64x2	= 1594,
    SUB_F64x2_S	= 1595,
    SUB_I16x8	= 1596,
    SUB_I16x8_S	= 1597,
    SUB_I32	= 1598,
    SUB_I32_S	= 1599,
    SUB_I32x4	= 1600,
    SUB_I32x4_S	= 1601,
    SUB_I64	= 1602,
    SUB_I64_S	= 1603,
    SUB_I64x2	= 1604,
    SUB_I64x2_S	= 1605,
    SUB_I8x16	= 1606,
    SUB_I8x16_S	= 1607,
    SUB_SAT_S_I16x8	= 1608,
    SUB_SAT_S_I16x8_S	= 1609,
    SUB_SAT_S_I8x16	= 1610,
    SUB_SAT_S_I8x16_S	= 1611,
    SUB_SAT_U_I16x8	= 1612,
    SUB_SAT_U_I16x8_S	= 1613,
    SUB_SAT_U_I8x16	= 1614,
    SUB_SAT_U_I8x16_S	= 1615,
    SWIZZLE	= 1616,
    SWIZZLE_S	= 1617,
    TABLE_COPY	= 1618,
    TABLE_COPY_S	= 1619,
    TABLE_FILL_EXTERNREF	= 1620,
    TABLE_FILL_EXTERNREF_S	= 1621,
    TABLE_FILL_FUNCREF	= 1622,
    TABLE_FILL_FUNCREF_S	= 1623,
    TABLE_GET_EXTERNREF	= 1624,
    TABLE_GET_EXTERNREF_S	= 1625,
    TABLE_GET_FUNCREF	= 1626,
    TABLE_GET_FUNCREF_S	= 1627,
    TABLE_GROW_EXTERNREF	= 1628,
    TABLE_GROW_EXTERNREF_S	= 1629,
    TABLE_GROW_FUNCREF	= 1630,
    TABLE_GROW_FUNCREF_S	= 1631,
    TABLE_SET_EXTERNREF	= 1632,
    TABLE_SET_EXTERNREF_S	= 1633,
    TABLE_SET_FUNCREF	= 1634,
    TABLE_SET_FUNCREF_S	= 1635,
    TABLE_SIZE	= 1636,
    TABLE_SIZE_S	= 1637,
    TEE_EXTERNREF	= 1638,
    TEE_EXTERNREF_S	= 1639,
    TEE_F32	= 1640,
    TEE_F32_S	= 1641,
    TEE_F64	= 1642,
    TEE_F64_S	= 1643,
    TEE_FUNCREF	= 1644,
    TEE_FUNCREF_S	= 1645,
    TEE_I32	= 1646,
    TEE_I32_S	= 1647,
    TEE_I64	= 1648,
    TEE_I64_S	= 1649,
    TEE_V128	= 1650,
    TEE_V128_S	= 1651,
    THROW	= 1652,
    THROW_S	= 1653,
    TRUNC_F32	= 1654,
    TRUNC_F32_S	= 1655,
    TRUNC_F32x4	= 1656,
    TRUNC_F32x4_S	= 1657,
    TRUNC_F64	= 1658,
    TRUNC_F64_S	= 1659,
    TRUNC_F64x2	= 1660,
    TRUNC_F64x2_S	= 1661,
    TRY	= 1662,
    TRY_S	= 1663,
    UNREACHABLE	= 1664,
    UNREACHABLE_S	= 1665,
    XOR	= 1666,
    XOR_I32	= 1667,
    XOR_I32_S	= 1668,
    XOR_I64	= 1669,
    XOR_I64_S	= 1670,
    XOR_S	= 1671,
    anonymous_7070MEMORY_GROW_A32	= 1672,
    anonymous_7070MEMORY_GROW_A32_S	= 1673,
    anonymous_7070MEMORY_SIZE_A32	= 1674,
    anonymous_7070MEMORY_SIZE_A32_S	= 1675,
    anonymous_7071MEMORY_GROW_A64	= 1676,
    anonymous_7071MEMORY_GROW_A64_S	= 1677,
    anonymous_7071MEMORY_SIZE_A64	= 1678,
    anonymous_7071MEMORY_SIZE_A64_S	= 1679,
    anonymous_7752DATA_DROP	= 1680,
    anonymous_7752DATA_DROP_S	= 1681,
    anonymous_7752MEMORY_COPY_A32	= 1682,
    anonymous_7752MEMORY_COPY_A32_S	= 1683,
    anonymous_7752MEMORY_FILL_A32	= 1684,
    anonymous_7752MEMORY_FILL_A32_S	= 1685,
    anonymous_7752MEMORY_INIT_A32	= 1686,
    anonymous_7752MEMORY_INIT_A32_S	= 1687,
    anonymous_7753DATA_DROP	= 1688,
    anonymous_7753DATA_DROP_S	= 1689,
    anonymous_7753MEMORY_COPY_A64	= 1690,
    anonymous_7753MEMORY_COPY_A64_S	= 1691,
    anonymous_7753MEMORY_FILL_A64	= 1692,
    anonymous_7753MEMORY_FILL_A64_S	= 1693,
    anonymous_7753MEMORY_INIT_A64	= 1694,
    anonymous_7753MEMORY_INIT_A64_S	= 1695,
    convert_low_s_F64x2	= 1696,
    convert_low_s_F64x2_S	= 1697,
    convert_low_u_F64x2	= 1698,
    convert_low_u_F64x2_S	= 1699,
    demote_zero_F32x4	= 1700,
    demote_zero_F32x4_S	= 1701,
    extend_high_s_I16x8	= 1702,
    extend_high_s_I16x8_S	= 1703,
    extend_high_s_I32x4	= 1704,
    extend_high_s_I32x4_S	= 1705,
    extend_high_s_I64x2	= 1706,
    extend_high_s_I64x2_S	= 1707,
    extend_high_u_I16x8	= 1708,
    extend_high_u_I16x8_S	= 1709,
    extend_high_u_I32x4	= 1710,
    extend_high_u_I32x4_S	= 1711,
    extend_high_u_I64x2	= 1712,
    extend_high_u_I64x2_S	= 1713,
    extend_low_s_I16x8	= 1714,
    extend_low_s_I16x8_S	= 1715,
    extend_low_s_I32x4	= 1716,
    extend_low_s_I32x4_S	= 1717,
    extend_low_s_I64x2	= 1718,
    extend_low_s_I64x2_S	= 1719,
    extend_low_u_I16x8	= 1720,
    extend_low_u_I16x8_S	= 1721,
    extend_low_u_I32x4	= 1722,
    extend_low_u_I32x4_S	= 1723,
    extend_low_u_I64x2	= 1724,
    extend_low_u_I64x2_S	= 1725,
    fp_to_sint_I32x4	= 1726,
    fp_to_sint_I32x4_S	= 1727,
    fp_to_uint_I32x4	= 1728,
    fp_to_uint_I32x4_S	= 1729,
    int_wasm_extadd_pairwise_signed_I16x8	= 1730,
    int_wasm_extadd_pairwise_signed_I16x8_S	= 1731,
    int_wasm_extadd_pairwise_signed_I32x4	= 1732,
    int_wasm_extadd_pairwise_signed_I32x4_S	= 1733,
    int_wasm_extadd_pairwise_unsigned_I16x8	= 1734,
    int_wasm_extadd_pairwise_unsigned_I16x8_S	= 1735,
    int_wasm_extadd_pairwise_unsigned_I32x4	= 1736,
    int_wasm_extadd_pairwise_unsigned_I32x4_S	= 1737,
    int_wasm_relaxed_trunc_signed_I32x4	= 1738,
    int_wasm_relaxed_trunc_signed_I32x4_S	= 1739,
    int_wasm_relaxed_trunc_signed_zero_I32x4	= 1740,
    int_wasm_relaxed_trunc_signed_zero_I32x4_S	= 1741,
    int_wasm_relaxed_trunc_unsigned_I32x4	= 1742,
    int_wasm_relaxed_trunc_unsigned_I32x4_S	= 1743,
    int_wasm_relaxed_trunc_unsigned_zero_I32x4	= 1744,
    int_wasm_relaxed_trunc_unsigned_zero_I32x4_S	= 1745,
    promote_low_F64x2	= 1746,
    promote_low_F64x2_S	= 1747,
    sint_to_fp_F32x4	= 1748,
    sint_to_fp_F32x4_S	= 1749,
    trunc_sat_zero_s_I32x4	= 1750,
    trunc_sat_zero_s_I32x4_S	= 1751,
    trunc_sat_zero_u_I32x4	= 1752,
    trunc_sat_zero_u_I32x4_S	= 1753,
    uint_to_fp_F32x4	= 1754,
    uint_to_fp_F32x4_S	= 1755,
    INSTRUCTION_LIST_END = 1756
  };

} // end namespace WebAssembly
} // end namespace llvm
#endif // GET_INSTRINFO_ENUM

#ifdef GET_INSTRINFO_SCHED_ENUM
#undef GET_INSTRINFO_SCHED_ENUM
namespace llvm {

namespace WebAssembly {
namespace Sched {
  enum {
    NoInstrModel	= 0,
    SCHED_LIST_END = 1
  };
} // end namespace Sched
} // end namespace WebAssembly
} // end namespace llvm
#endif // GET_INSTRINFO_SCHED_ENUM

#if defined(GET_INSTRINFO_MC_DESC) || defined(GET_INSTRINFO_CTOR_DTOR)
namespace llvm {

struct WebAssemblyInstrTable {
  MCInstrDesc Insts[1756];
  static_assert(alignof(MCInstrDesc) >= alignof(MCOperandInfo), "Unwanted padding between Insts and OperandInfo");
  MCOperandInfo OperandInfo[753];
  static_assert(alignof(MCOperandInfo) >= alignof(MCPhysReg), "Unwanted padding between OperandInfo and ImplicitOps");
  MCPhysReg ImplicitOps[10];
};

} // end namespace llvm
#endif // defined(GET_INSTRINFO_MC_DESC) || defined(GET_INSTRINFO_CTOR_DTOR)

#ifdef GET_INSTRINFO_MC_DESC
#undef GET_INSTRINFO_MC_DESC
namespace llvm {

static_assert(sizeof(MCOperandInfo) % sizeof(MCPhysReg) == 0);
static constexpr unsigned WebAssemblyImpOpBase = sizeof WebAssemblyInstrTable::OperandInfo / (sizeof(MCPhysReg));

extern const WebAssemblyInstrTable WebAssemblyDescs = {
  {
    { 1755,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1755 = uint_to_fp_F32x4_S
    { 1754,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1754 = uint_to_fp_F32x4
    { 1753,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1753 = trunc_sat_zero_u_I32x4_S
    { 1752,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1752 = trunc_sat_zero_u_I32x4
    { 1751,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1751 = trunc_sat_zero_s_I32x4_S
    { 1750,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1750 = trunc_sat_zero_s_I32x4
    { 1749,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1749 = sint_to_fp_F32x4_S
    { 1748,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1748 = sint_to_fp_F32x4
    { 1747,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1747 = promote_low_F64x2_S
    { 1746,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1746 = promote_low_F64x2
    { 1745,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1745 = int_wasm_relaxed_trunc_unsigned_zero_I32x4_S
    { 1744,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1744 = int_wasm_relaxed_trunc_unsigned_zero_I32x4
    { 1743,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1743 = int_wasm_relaxed_trunc_unsigned_I32x4_S
    { 1742,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1742 = int_wasm_relaxed_trunc_unsigned_I32x4
    { 1741,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1741 = int_wasm_relaxed_trunc_signed_zero_I32x4_S
    { 1740,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1740 = int_wasm_relaxed_trunc_signed_zero_I32x4
    { 1739,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1739 = int_wasm_relaxed_trunc_signed_I32x4_S
    { 1738,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1738 = int_wasm_relaxed_trunc_signed_I32x4
    { 1737,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1737 = int_wasm_extadd_pairwise_unsigned_I32x4_S
    { 1736,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1736 = int_wasm_extadd_pairwise_unsigned_I32x4
    { 1735,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1735 = int_wasm_extadd_pairwise_unsigned_I16x8_S
    { 1734,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1734 = int_wasm_extadd_pairwise_unsigned_I16x8
    { 1733,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1733 = int_wasm_extadd_pairwise_signed_I32x4_S
    { 1732,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1732 = int_wasm_extadd_pairwise_signed_I32x4
    { 1731,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1731 = int_wasm_extadd_pairwise_signed_I16x8_S
    { 1730,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1730 = int_wasm_extadd_pairwise_signed_I16x8
    { 1729,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1729 = fp_to_uint_I32x4_S
    { 1728,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1728 = fp_to_uint_I32x4
    { 1727,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1727 = fp_to_sint_I32x4_S
    { 1726,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1726 = fp_to_sint_I32x4
    { 1725,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1725 = extend_low_u_I64x2_S
    { 1724,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1724 = extend_low_u_I64x2
    { 1723,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1723 = extend_low_u_I32x4_S
    { 1722,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1722 = extend_low_u_I32x4
    { 1721,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1721 = extend_low_u_I16x8_S
    { 1720,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1720 = extend_low_u_I16x8
    { 1719,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1719 = extend_low_s_I64x2_S
    { 1718,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1718 = extend_low_s_I64x2
    { 1717,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1717 = extend_low_s_I32x4_S
    { 1716,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1716 = extend_low_s_I32x4
    { 1715,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1715 = extend_low_s_I16x8_S
    { 1714,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1714 = extend_low_s_I16x8
    { 1713,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1713 = extend_high_u_I64x2_S
    { 1712,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1712 = extend_high_u_I64x2
    { 1711,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1711 = extend_high_u_I32x4_S
    { 1710,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1710 = extend_high_u_I32x4
    { 1709,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1709 = extend_high_u_I16x8_S
    { 1708,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1708 = extend_high_u_I16x8
    { 1707,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1707 = extend_high_s_I64x2_S
    { 1706,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1706 = extend_high_s_I64x2
    { 1705,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1705 = extend_high_s_I32x4_S
    { 1704,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1704 = extend_high_s_I32x4
    { 1703,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1703 = extend_high_s_I16x8_S
    { 1702,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1702 = extend_high_s_I16x8
    { 1701,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1701 = demote_zero_F32x4_S
    { 1700,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1700 = demote_zero_F32x4
    { 1699,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1699 = convert_low_u_F64x2_S
    { 1698,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1698 = convert_low_u_F64x2
    { 1697,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1697 = convert_low_s_F64x2_S
    { 1696,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1696 = convert_low_s_F64x2
    { 1695,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	733,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1695 = anonymous_7753MEMORY_INIT_A64_S
    { 1694,	5,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	748,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1694 = anonymous_7753MEMORY_INIT_A64
    { 1693,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	282,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1693 = anonymous_7753MEMORY_FILL_A64_S
    { 1692,	4,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	744,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1692 = anonymous_7753MEMORY_FILL_A64
    { 1691,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	733,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1691 = anonymous_7753MEMORY_COPY_A64_S
    { 1690,	5,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	739,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1690 = anonymous_7753MEMORY_COPY_A64
    { 1689,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	282,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1689 = anonymous_7753DATA_DROP_S
    { 1688,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	282,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1688 = anonymous_7753DATA_DROP
    { 1687,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	733,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1687 = anonymous_7752MEMORY_INIT_A32_S
    { 1686,	5,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	728,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1686 = anonymous_7752MEMORY_INIT_A32
    { 1685,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	282,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1685 = anonymous_7752MEMORY_FILL_A32_S
    { 1684,	4,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	735,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1684 = anonymous_7752MEMORY_FILL_A32
    { 1683,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	733,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1683 = anonymous_7752MEMORY_COPY_A32_S
    { 1682,	5,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	728,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1682 = anonymous_7752MEMORY_COPY_A32
    { 1681,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	282,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1681 = anonymous_7752DATA_DROP_S
    { 1680,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	282,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1680 = anonymous_7752DATA_DROP
    { 1679,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1679 = anonymous_7071MEMORY_SIZE_A64_S
    { 1678,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	172,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1678 = anonymous_7071MEMORY_SIZE_A64
    { 1677,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1677 = anonymous_7071MEMORY_GROW_A64_S
    { 1676,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	725,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1676 = anonymous_7071MEMORY_GROW_A64
    { 1675,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1675 = anonymous_7070MEMORY_SIZE_A32_S
    { 1674,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	170,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1674 = anonymous_7070MEMORY_SIZE_A32
    { 1673,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1673 = anonymous_7070MEMORY_GROW_A32_S
    { 1672,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	722,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1672 = anonymous_7070MEMORY_GROW_A32
    { 1671,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1671 = XOR_S
    { 1670,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1670 = XOR_I64_S
    { 1669,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	157,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1669 = XOR_I64
    { 1668,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1668 = XOR_I32_S
    { 1667,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	154,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1667 = XOR_I32
    { 1666,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1666 = XOR
    { 1665,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Trap)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1665 = UNREACHABLE_S
    { 1664,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Trap)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1664 = UNREACHABLE
    { 1663,	1,	0,	0,	0,	1,	1,	WebAssemblyImpOpBase + 8,	260,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1663 = TRY_S
    { 1662,	1,	0,	0,	0,	1,	1,	WebAssemblyImpOpBase + 8,	260,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1662 = TRY
    { 1661,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1661 = TRUNC_F64x2_S
    { 1660,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1660 = TRUNC_F64x2
    { 1659,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1659 = TRUNC_F64_S
    { 1658,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	143,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1658 = TRUNC_F64
    { 1657,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1657 = TRUNC_F32x4_S
    { 1656,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1656 = TRUNC_F32x4
    { 1655,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1655 = TRUNC_F32_S
    { 1654,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	139,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1654 = TRUNC_F32
    { 1653,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	269,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1653 = THROW_S
    { 1652,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	269,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1652 = THROW
    { 1651,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1651 = TEE_V128_S
    { 1650,	3,	2,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1650 = TEE_V128
    { 1649,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1649 = TEE_I64_S
    { 1648,	3,	2,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	157,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1648 = TEE_I64
    { 1647,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1647 = TEE_I32_S
    { 1646,	3,	2,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	154,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1646 = TEE_I32
    { 1645,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1645 = TEE_FUNCREF_S
    { 1644,	3,	2,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	719,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1644 = TEE_FUNCREF
    { 1643,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1643 = TEE_F64_S
    { 1642,	3,	2,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	151,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1642 = TEE_F64
    { 1641,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1641 = TEE_F32_S
    { 1640,	3,	2,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	145,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1640 = TEE_F32
    { 1639,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1639 = TEE_EXTERNREF_S
    { 1638,	3,	2,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	716,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1638 = TEE_EXTERNREF
    { 1637,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	689,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1637 = TABLE_SIZE_S
    { 1636,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	714,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1636 = TABLE_SIZE
    { 1635,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	689,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1635 = TABLE_SET_FUNCREF_S
    { 1634,	3,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	711,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1634 = TABLE_SET_FUNCREF
    { 1633,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	689,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1633 = TABLE_SET_EXTERNREF_S
    { 1632,	3,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	708,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1632 = TABLE_SET_EXTERNREF
    { 1631,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	689,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1631 = TABLE_GROW_FUNCREF_S
    { 1630,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	704,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1630 = TABLE_GROW_FUNCREF
    { 1629,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	689,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1629 = TABLE_GROW_EXTERNREF_S
    { 1628,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	700,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1628 = TABLE_GROW_EXTERNREF
    { 1627,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	689,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1627 = TABLE_GET_FUNCREF_S
    { 1626,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	697,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1626 = TABLE_GET_FUNCREF
    { 1625,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	689,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1625 = TABLE_GET_EXTERNREF_S
    { 1624,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	694,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1624 = TABLE_GET_EXTERNREF
    { 1623,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	689,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1623 = TABLE_FILL_FUNCREF_S
    { 1622,	4,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	690,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1622 = TABLE_FILL_FUNCREF
    { 1621,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	689,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1621 = TABLE_FILL_EXTERNREF_S
    { 1620,	4,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	685,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1620 = TABLE_FILL_EXTERNREF
    { 1619,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	683,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1619 = TABLE_COPY_S
    { 1618,	5,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	678,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1618 = TABLE_COPY
    { 1617,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1617 = SWIZZLE_S
    { 1616,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1616 = SWIZZLE
    { 1615,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1615 = SUB_SAT_U_I8x16_S
    { 1614,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1614 = SUB_SAT_U_I8x16
    { 1613,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1613 = SUB_SAT_U_I16x8_S
    { 1612,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1612 = SUB_SAT_U_I16x8
    { 1611,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1611 = SUB_SAT_S_I8x16_S
    { 1610,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1610 = SUB_SAT_S_I8x16
    { 1609,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1609 = SUB_SAT_S_I16x8_S
    { 1608,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1608 = SUB_SAT_S_I16x8
    { 1607,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1607 = SUB_I8x16_S
    { 1606,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1606 = SUB_I8x16
    { 1605,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1605 = SUB_I64x2_S
    { 1604,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1604 = SUB_I64x2
    { 1603,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1603 = SUB_I64_S
    { 1602,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	157,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1602 = SUB_I64
    { 1601,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1601 = SUB_I32x4_S
    { 1600,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1600 = SUB_I32x4
    { 1599,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1599 = SUB_I32_S
    { 1598,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	154,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1598 = SUB_I32
    { 1597,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1597 = SUB_I16x8_S
    { 1596,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1596 = SUB_I16x8
    { 1595,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1595 = SUB_F64x2_S
    { 1594,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1594 = SUB_F64x2
    { 1593,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1593 = SUB_F64_S
    { 1592,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	151,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1592 = SUB_F64
    { 1591,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1591 = SUB_F32x4_S
    { 1590,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1590 = SUB_F32x4
    { 1589,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1589 = SUB_F32_S
    { 1588,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	145,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1588 = SUB_F32
    { 1587,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1587 = STORE_V128_A64_S
    { 1586,	4,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	674,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1586 = STORE_V128_A64
    { 1585,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1585 = STORE_V128_A32_S
    { 1584,	4,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	670,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1584 = STORE_V128_A32
    { 1583,	3,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	489,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1583 = STORE_LANE_I8x16_A64_S
    { 1582,	5,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	665,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1582 = STORE_LANE_I8x16_A64
    { 1581,	3,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	480,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1581 = STORE_LANE_I8x16_A32_S
    { 1580,	5,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	660,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1580 = STORE_LANE_I8x16_A32
    { 1579,	3,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	489,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1579 = STORE_LANE_I64x2_A64_S
    { 1578,	5,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	665,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1578 = STORE_LANE_I64x2_A64
    { 1577,	3,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	480,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1577 = STORE_LANE_I64x2_A32_S
    { 1576,	5,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	660,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1576 = STORE_LANE_I64x2_A32
    { 1575,	3,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	489,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1575 = STORE_LANE_I32x4_A64_S
    { 1574,	5,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	665,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1574 = STORE_LANE_I32x4_A64
    { 1573,	3,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	480,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1573 = STORE_LANE_I32x4_A32_S
    { 1572,	5,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	660,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1572 = STORE_LANE_I32x4_A32
    { 1571,	3,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	489,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1571 = STORE_LANE_I16x8_A64_S
    { 1570,	5,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	665,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1570 = STORE_LANE_I16x8_A64
    { 1569,	3,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	480,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1569 = STORE_LANE_I16x8_A32_S
    { 1568,	5,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	660,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1568 = STORE_LANE_I16x8_A32
    { 1567,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1567 = STORE_I64_A64_S
    { 1566,	4,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	252,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1566 = STORE_I64_A64
    { 1565,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1565 = STORE_I64_A32_S
    { 1564,	4,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	248,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1564 = STORE_I64_A32
    { 1563,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1563 = STORE_I32_A64_S
    { 1562,	4,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	244,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1562 = STORE_I32_A64
    { 1561,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1561 = STORE_I32_A32_S
    { 1560,	4,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	240,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1560 = STORE_I32_A32
    { 1559,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1559 = STORE_F64_A64_S
    { 1558,	4,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	656,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1558 = STORE_F64_A64
    { 1557,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1557 = STORE_F64_A32_S
    { 1556,	4,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	652,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1556 = STORE_F64_A32
    { 1555,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1555 = STORE_F32_A64_S
    { 1554,	4,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	648,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1554 = STORE_F32_A64
    { 1553,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1553 = STORE_F32_A32_S
    { 1552,	4,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	644,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1552 = STORE_F32_A32
    { 1551,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1551 = STORE8_I64_A64_S
    { 1550,	4,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	252,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1550 = STORE8_I64_A64
    { 1549,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1549 = STORE8_I64_A32_S
    { 1548,	4,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	248,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1548 = STORE8_I64_A32
    { 1547,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1547 = STORE8_I32_A64_S
    { 1546,	4,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	244,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1546 = STORE8_I32_A64
    { 1545,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1545 = STORE8_I32_A32_S
    { 1544,	4,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	240,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1544 = STORE8_I32_A32
    { 1543,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1543 = STORE32_I64_A64_S
    { 1542,	4,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	252,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1542 = STORE32_I64_A64
    { 1541,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1541 = STORE32_I64_A32_S
    { 1540,	4,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	248,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1540 = STORE32_I64_A32
    { 1539,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1539 = STORE16_I64_A64_S
    { 1538,	4,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	252,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1538 = STORE16_I64_A64
    { 1537,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1537 = STORE16_I64_A32_S
    { 1536,	4,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	248,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1536 = STORE16_I64_A32
    { 1535,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1535 = STORE16_I32_A64_S
    { 1534,	4,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	244,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1534 = STORE16_I32_A64
    { 1533,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1533 = STORE16_I32_A32_S
    { 1532,	4,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	240,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1532 = STORE16_I32_A32
    { 1531,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1531 = SQRT_F64x2_S
    { 1530,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1530 = SQRT_F64x2
    { 1529,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1529 = SQRT_F64_S
    { 1528,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	143,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1528 = SQRT_F64
    { 1527,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1527 = SQRT_F32x4_S
    { 1526,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1526 = SQRT_F32x4
    { 1525,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1525 = SQRT_F32_S
    { 1524,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	139,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1524 = SQRT_F32
    { 1523,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1523 = SPLAT_I8x16_S
    { 1522,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	640,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1522 = SPLAT_I8x16
    { 1521,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1521 = SPLAT_I64x2_S
    { 1520,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	642,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1520 = SPLAT_I64x2
    { 1519,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1519 = SPLAT_I32x4_S
    { 1518,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	640,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1518 = SPLAT_I32x4
    { 1517,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1517 = SPLAT_I16x8_S
    { 1516,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	640,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1516 = SPLAT_I16x8
    { 1515,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1515 = SPLAT_F64x2_S
    { 1514,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	638,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1514 = SPLAT_F64x2
    { 1513,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1513 = SPLAT_F32x4_S
    { 1512,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	636,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1512 = SPLAT_F32x4
    { 1511,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1511 = SIMD_RELAXED_FMIN_F64x2_S
    { 1510,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1510 = SIMD_RELAXED_FMIN_F64x2
    { 1509,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1509 = SIMD_RELAXED_FMIN_F32x4_S
    { 1508,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1508 = SIMD_RELAXED_FMIN_F32x4
    { 1507,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1507 = SIMD_RELAXED_FMAX_F64x2_S
    { 1506,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1506 = SIMD_RELAXED_FMAX_F64x2
    { 1505,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1505 = SIMD_RELAXED_FMAX_F32x4_S
    { 1504,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1504 = SIMD_RELAXED_FMAX_F32x4
    { 1503,	16,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	348,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1503 = SHUFFLE_S
    { 1502,	19,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	617,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1502 = SHUFFLE
    { 1501,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1501 = SHR_U_I8x16_S
    { 1500,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	614,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1500 = SHR_U_I8x16
    { 1499,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1499 = SHR_U_I64x2_S
    { 1498,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	614,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1498 = SHR_U_I64x2
    { 1497,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1497 = SHR_U_I64_S
    { 1496,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	157,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1496 = SHR_U_I64
    { 1495,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1495 = SHR_U_I32x4_S
    { 1494,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	614,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1494 = SHR_U_I32x4
    { 1493,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1493 = SHR_U_I32_S
    { 1492,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	154,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1492 = SHR_U_I32
    { 1491,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1491 = SHR_U_I16x8_S
    { 1490,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	614,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1490 = SHR_U_I16x8
    { 1489,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1489 = SHR_S_I8x16_S
    { 1488,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	614,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1488 = SHR_S_I8x16
    { 1487,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1487 = SHR_S_I64x2_S
    { 1486,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	614,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1486 = SHR_S_I64x2
    { 1485,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1485 = SHR_S_I64_S
    { 1484,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	157,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1484 = SHR_S_I64
    { 1483,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1483 = SHR_S_I32x4_S
    { 1482,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	614,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1482 = SHR_S_I32x4
    { 1481,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1481 = SHR_S_I32_S
    { 1480,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	154,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1480 = SHR_S_I32
    { 1479,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1479 = SHR_S_I16x8_S
    { 1478,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	614,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1478 = SHR_S_I16x8
    { 1477,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1477 = SHL_I8x16_S
    { 1476,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	614,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1476 = SHL_I8x16
    { 1475,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1475 = SHL_I64x2_S
    { 1474,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	614,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1474 = SHL_I64x2
    { 1473,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1473 = SHL_I64_S
    { 1472,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	157,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1472 = SHL_I64
    { 1471,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1471 = SHL_I32x4_S
    { 1470,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	614,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1470 = SHL_I32x4
    { 1469,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1469 = SHL_I32_S
    { 1468,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	154,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1468 = SHL_I32
    { 1467,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1467 = SHL_I16x8_S
    { 1466,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	614,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1466 = SHL_I16x8
    { 1465,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1465 = SELECT_V128_S
    { 1464,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	610,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1464 = SELECT_V128
    { 1463,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1463 = SELECT_I64_S
    { 1462,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	606,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1462 = SELECT_I64
    { 1461,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1461 = SELECT_I32_S
    { 1460,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	602,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1460 = SELECT_I32
    { 1459,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1459 = SELECT_FUNCREF_S
    { 1458,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	598,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1458 = SELECT_FUNCREF
    { 1457,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1457 = SELECT_F64_S
    { 1456,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	594,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1456 = SELECT_F64
    { 1455,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1455 = SELECT_F32_S
    { 1454,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	590,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1454 = SELECT_F32
    { 1453,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1453 = SELECT_EXTERNREF_S
    { 1452,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	586,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1452 = SELECT_EXTERNREF
    { 1451,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1451 = ROTR_I64_S
    { 1450,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	157,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1450 = ROTR_I64
    { 1449,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1449 = ROTR_I32_S
    { 1448,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	154,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1448 = ROTR_I32
    { 1447,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1447 = ROTL_I64_S
    { 1446,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	157,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1446 = ROTL_I64
    { 1445,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1445 = ROTL_I32_S
    { 1444,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	154,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1444 = ROTL_I32
    { 1443,	1,	0,	0,	0,	2,	1,	WebAssemblyImpOpBase + 0,	136,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1443 = RET_CALL_S
    { 1442,	2,	0,	0,	0,	2,	1,	WebAssemblyImpOpBase + 0,	267,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1442 = RET_CALL_INDIRECT_S
    { 1441,	2,	0,	0,	0,	2,	1,	WebAssemblyImpOpBase + 0,	267,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1441 = RET_CALL_INDIRECT
    { 1440,	1,	0,	0,	0,	2,	1,	WebAssemblyImpOpBase + 0,	136,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1440 = RET_CALL
    { 1439,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1439 = RETURN_S
    { 1438,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1438 = RETURN
    { 1437,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1437 = RETHROW_S
    { 1436,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1436 = RETHROW
    { 1435,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	387,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1435 = REPLACE_LANE_I8x16_S
    { 1434,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	578,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1434 = REPLACE_LANE_I8x16
    { 1433,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	387,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1433 = REPLACE_LANE_I64x2_S
    { 1432,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	582,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1432 = REPLACE_LANE_I64x2
    { 1431,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	387,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1431 = REPLACE_LANE_I32x4_S
    { 1430,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	578,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1430 = REPLACE_LANE_I32x4
    { 1429,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	387,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1429 = REPLACE_LANE_I16x8_S
    { 1428,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	578,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1428 = REPLACE_LANE_I16x8
    { 1427,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	387,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1427 = REPLACE_LANE_F64x2_S
    { 1426,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	574,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1426 = REPLACE_LANE_F64x2
    { 1425,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	387,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1425 = REPLACE_LANE_F32x4_S
    { 1424,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	570,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1424 = REPLACE_LANE_F32x4
    { 1423,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1423 = REM_U_I64_S
    { 1422,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	157,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1422 = REM_U_I64
    { 1421,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1421 = REM_U_I32_S
    { 1420,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	154,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1420 = REM_U_I32
    { 1419,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1419 = REM_S_I64_S
    { 1418,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	157,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1418 = REM_S_I64
    { 1417,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1417 = REM_S_I32_S
    { 1416,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	154,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1416 = REM_S_I32
    { 1415,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1415 = RELAXED_SWIZZLE_S
    { 1414,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1414 = RELAXED_SWIZZLE
    { 1413,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1413 = RELAXED_Q15MULR_S_I16x8_S
    { 1412,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1412 = RELAXED_Q15MULR_S_I16x8
    { 1411,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1411 = RELAXED_DOT_S
    { 1410,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1410 = RELAXED_DOT_BFLOAT_S
    { 1409,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	256,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1409 = RELAXED_DOT_BFLOAT
    { 1408,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1408 = RELAXED_DOT_ADD_S
    { 1407,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	256,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1407 = RELAXED_DOT_ADD
    { 1406,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1406 = RELAXED_DOT
    { 1405,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1405 = REF_NULL_FUNCREF_S
    { 1404,	1,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	371,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1404 = REF_NULL_FUNCREF
    { 1403,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1403 = REF_NULL_EXTERNREF_S
    { 1402,	1,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	368,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1402 = REF_NULL_EXTERNREF
    { 1401,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1401 = REF_IS_NULL_FUNCREF_S
    { 1400,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	568,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1400 = REF_IS_NULL_FUNCREF
    { 1399,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1399 = REF_IS_NULL_EXTERNREF_S
    { 1398,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	566,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1398 = REF_IS_NULL_EXTERNREF
    { 1397,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1397 = Q15MULR_SAT_S_I16x8_S
    { 1396,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1396 = Q15MULR_SAT_S_I16x8
    { 1395,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1395 = POPCNT_I8x16_S
    { 1394,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1394 = POPCNT_I8x16
    { 1393,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1393 = POPCNT_I64_S
    { 1392,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	272,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1392 = POPCNT_I64
    { 1391,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1391 = POPCNT_I32_S
    { 1390,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	270,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1390 = POPCNT_I32
    { 1389,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1389 = PMIN_F64x2_S
    { 1388,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1388 = PMIN_F64x2
    { 1387,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1387 = PMIN_F32x4_S
    { 1386,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1386 = PMIN_F32x4
    { 1385,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1385 = PMAX_F64x2_S
    { 1384,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1384 = PMAX_F64x2
    { 1383,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1383 = PMAX_F32x4_S
    { 1382,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1382 = PMAX_F32x4
    { 1381,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1381 = OR_S
    { 1380,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1380 = OR_I64_S
    { 1379,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	157,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1379 = OR_I64
    { 1378,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1378 = OR_I32_S
    { 1377,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	154,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1377 = OR_I32
    { 1376,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1376 = OR
    { 1375,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1375 = NOT_S
    { 1374,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1374 = NOT
    { 1373,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1373 = NOP_S
    { 1372,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1372 = NOP
    { 1371,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1371 = NMADD_F64x2_S
    { 1370,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	256,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1370 = NMADD_F64x2
    { 1369,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1369 = NMADD_F32x4_S
    { 1368,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	256,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1368 = NMADD_F32x4
    { 1367,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1367 = NE_I8x16_S
    { 1366,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1366 = NE_I8x16
    { 1365,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1365 = NE_I64x2_S
    { 1364,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1364 = NE_I64x2
    { 1363,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1363 = NE_I64_S
    { 1362,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	381,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1362 = NE_I64
    { 1361,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1361 = NE_I32x4_S
    { 1360,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1360 = NE_I32x4
    { 1359,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1359 = NE_I32_S
    { 1358,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	154,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1358 = NE_I32
    { 1357,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1357 = NE_I16x8_S
    { 1356,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1356 = NE_I16x8
    { 1355,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1355 = NE_F64x2_S
    { 1354,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1354 = NE_F64x2
    { 1353,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1353 = NE_F64_S
    { 1352,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	378,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1352 = NE_F64
    { 1351,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1351 = NE_F32x4_S
    { 1350,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1350 = NE_F32x4
    { 1349,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1349 = NE_F32_S
    { 1348,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	375,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1348 = NE_F32
    { 1347,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1347 = NEG_I8x16_S
    { 1346,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1346 = NEG_I8x16
    { 1345,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1345 = NEG_I64x2_S
    { 1344,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1344 = NEG_I64x2
    { 1343,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1343 = NEG_I32x4_S
    { 1342,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1342 = NEG_I32x4
    { 1341,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1341 = NEG_I16x8_S
    { 1340,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1340 = NEG_I16x8
    { 1339,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1339 = NEG_F64x2_S
    { 1338,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1338 = NEG_F64x2
    { 1337,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1337 = NEG_F64_S
    { 1336,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	143,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1336 = NEG_F64
    { 1335,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1335 = NEG_F32x4_S
    { 1334,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1334 = NEG_F32x4
    { 1333,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1333 = NEG_F32_S
    { 1332,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	139,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1332 = NEG_F32
    { 1331,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1331 = NEAREST_F64x2_S
    { 1330,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1330 = NEAREST_F64x2
    { 1329,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1329 = NEAREST_F64_S
    { 1328,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	143,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1328 = NEAREST_F64
    { 1327,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1327 = NEAREST_F32x4_S
    { 1326,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1326 = NEAREST_F32x4
    { 1325,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1325 = NEAREST_F32_S
    { 1324,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	139,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1324 = NEAREST_F32
    { 1323,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1323 = NARROW_U_I8x16_S
    { 1322,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1322 = NARROW_U_I8x16
    { 1321,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1321 = NARROW_U_I16x8_S
    { 1320,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1320 = NARROW_U_I16x8
    { 1319,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1319 = NARROW_S_I8x16_S
    { 1318,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1318 = NARROW_S_I8x16
    { 1317,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1317 = NARROW_S_I16x8_S
    { 1316,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1316 = NARROW_S_I16x8
    { 1315,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1315 = MUL_I64x2_S
    { 1314,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1314 = MUL_I64x2
    { 1313,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1313 = MUL_I64_S
    { 1312,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	157,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1312 = MUL_I64
    { 1311,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1311 = MUL_I32x4_S
    { 1310,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1310 = MUL_I32x4
    { 1309,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1309 = MUL_I32_S
    { 1308,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	154,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1308 = MUL_I32
    { 1307,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1307 = MUL_I16x8_S
    { 1306,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1306 = MUL_I16x8
    { 1305,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1305 = MUL_F64x2_S
    { 1304,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1304 = MUL_F64x2
    { 1303,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1303 = MUL_F64_S
    { 1302,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	151,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1302 = MUL_F64
    { 1301,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1301 = MUL_F32x4_S
    { 1300,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1300 = MUL_F32x4
    { 1299,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1299 = MUL_F32_S
    { 1298,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	145,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1298 = MUL_F32
    { 1297,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1297 = MIN_U_I8x16_S
    { 1296,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1296 = MIN_U_I8x16
    { 1295,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1295 = MIN_U_I32x4_S
    { 1294,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1294 = MIN_U_I32x4
    { 1293,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1293 = MIN_U_I16x8_S
    { 1292,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1292 = MIN_U_I16x8
    { 1291,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1291 = MIN_S_I8x16_S
    { 1290,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1290 = MIN_S_I8x16
    { 1289,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1289 = MIN_S_I32x4_S
    { 1288,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1288 = MIN_S_I32x4
    { 1287,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1287 = MIN_S_I16x8_S
    { 1286,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1286 = MIN_S_I16x8
    { 1285,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1285 = MIN_F64x2_S
    { 1284,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1284 = MIN_F64x2
    { 1283,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1283 = MIN_F64_S
    { 1282,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	151,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1282 = MIN_F64
    { 1281,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1281 = MIN_F32x4_S
    { 1280,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1280 = MIN_F32x4
    { 1279,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1279 = MIN_F32_S
    { 1278,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	145,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1278 = MIN_F32
    { 1277,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1277 = MEMORY_ATOMIC_WAIT64_A64_S
    { 1276,	6,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	560,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1276 = MEMORY_ATOMIC_WAIT64_A64
    { 1275,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1275 = MEMORY_ATOMIC_WAIT64_A32_S
    { 1274,	6,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	554,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1274 = MEMORY_ATOMIC_WAIT64_A32
    { 1273,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1273 = MEMORY_ATOMIC_WAIT32_A64_S
    { 1272,	6,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	548,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1272 = MEMORY_ATOMIC_WAIT32_A64
    { 1271,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1271 = MEMORY_ATOMIC_WAIT32_A32_S
    { 1270,	6,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	542,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1270 = MEMORY_ATOMIC_WAIT32_A32
    { 1269,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1269 = MEMORY_ATOMIC_NOTIFY_A64_S
    { 1268,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	201,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1268 = MEMORY_ATOMIC_NOTIFY_A64
    { 1267,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1267 = MEMORY_ATOMIC_NOTIFY_A32_S
    { 1266,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	196,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1266 = MEMORY_ATOMIC_NOTIFY_A32
    { 1265,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1265 = MAX_U_I8x16_S
    { 1264,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1264 = MAX_U_I8x16
    { 1263,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1263 = MAX_U_I32x4_S
    { 1262,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1262 = MAX_U_I32x4
    { 1261,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1261 = MAX_U_I16x8_S
    { 1260,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1260 = MAX_U_I16x8
    { 1259,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1259 = MAX_S_I8x16_S
    { 1258,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1258 = MAX_S_I8x16
    { 1257,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1257 = MAX_S_I32x4_S
    { 1256,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1256 = MAX_S_I32x4
    { 1255,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1255 = MAX_S_I16x8_S
    { 1254,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1254 = MAX_S_I16x8
    { 1253,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1253 = MAX_F64x2_S
    { 1252,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1252 = MAX_F64x2
    { 1251,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1251 = MAX_F64_S
    { 1250,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	151,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1250 = MAX_F64
    { 1249,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1249 = MAX_F32x4_S
    { 1248,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1248 = MAX_F32x4
    { 1247,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1247 = MAX_F32_S
    { 1246,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	145,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1246 = MAX_F32
    { 1245,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1245 = MADD_F64x2_S
    { 1244,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	256,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1244 = MADD_F64x2
    { 1243,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1243 = MADD_F32x4_S
    { 1242,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	256,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1242 = MADD_F32x4
    { 1241,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1241 = LT_U_I8x16_S
    { 1240,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1240 = LT_U_I8x16
    { 1239,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1239 = LT_U_I64_S
    { 1238,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	381,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1238 = LT_U_I64
    { 1237,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1237 = LT_U_I32x4_S
    { 1236,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1236 = LT_U_I32x4
    { 1235,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1235 = LT_U_I32_S
    { 1234,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	154,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1234 = LT_U_I32
    { 1233,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1233 = LT_U_I16x8_S
    { 1232,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1232 = LT_U_I16x8
    { 1231,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1231 = LT_S_I8x16_S
    { 1230,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1230 = LT_S_I8x16
    { 1229,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1229 = LT_S_I64x2_S
    { 1228,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1228 = LT_S_I64x2
    { 1227,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1227 = LT_S_I64_S
    { 1226,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	381,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1226 = LT_S_I64
    { 1225,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1225 = LT_S_I32x4_S
    { 1224,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1224 = LT_S_I32x4
    { 1223,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1223 = LT_S_I32_S
    { 1222,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	154,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1222 = LT_S_I32
    { 1221,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1221 = LT_S_I16x8_S
    { 1220,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1220 = LT_S_I16x8
    { 1219,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1219 = LT_F64x2_S
    { 1218,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1218 = LT_F64x2
    { 1217,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1217 = LT_F64_S
    { 1216,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	378,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1216 = LT_F64
    { 1215,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1215 = LT_F32x4_S
    { 1214,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1214 = LT_F32x4
    { 1213,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1213 = LT_F32_S
    { 1212,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	375,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1212 = LT_F32
    { 1211,	1,	0,	0,	0,	1,	1,	WebAssemblyImpOpBase + 8,	260,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1211 = LOOP_S
    { 1210,	1,	0,	0,	0,	1,	1,	WebAssemblyImpOpBase + 8,	260,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1210 = LOOP
    { 1209,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	494,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1209 = LOCAL_TEE_V128_S
    { 1208,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	539,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1208 = LOCAL_TEE_V128
    { 1207,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	494,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1207 = LOCAL_TEE_I64_S
    { 1206,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	536,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1206 = LOCAL_TEE_I64
    { 1205,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	494,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1205 = LOCAL_TEE_I32_S
    { 1204,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	533,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1204 = LOCAL_TEE_I32
    { 1203,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	494,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1203 = LOCAL_TEE_FUNCREF_S
    { 1202,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	530,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1202 = LOCAL_TEE_FUNCREF
    { 1201,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	494,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1201 = LOCAL_TEE_F64_S
    { 1200,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	527,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1200 = LOCAL_TEE_F64
    { 1199,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	494,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1199 = LOCAL_TEE_F32_S
    { 1198,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	524,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1198 = LOCAL_TEE_F32
    { 1197,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	494,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1197 = LOCAL_TEE_EXTERNREF_S
    { 1196,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	521,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1196 = LOCAL_TEE_EXTERNREF
    { 1195,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	494,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1195 = LOCAL_SET_V128_S
    { 1194,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	519,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1194 = LOCAL_SET_V128
    { 1193,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	494,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1193 = LOCAL_SET_I64_S
    { 1192,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	517,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1192 = LOCAL_SET_I64
    { 1191,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	494,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1191 = LOCAL_SET_I32_S
    { 1190,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	515,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1190 = LOCAL_SET_I32
    { 1189,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	494,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1189 = LOCAL_SET_FUNCREF_S
    { 1188,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	513,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1188 = LOCAL_SET_FUNCREF
    { 1187,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	494,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1187 = LOCAL_SET_F64_S
    { 1186,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	511,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1186 = LOCAL_SET_F64
    { 1185,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	494,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1185 = LOCAL_SET_F32_S
    { 1184,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	509,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1184 = LOCAL_SET_F32
    { 1183,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	494,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1183 = LOCAL_SET_EXTERNREF_S
    { 1182,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	507,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1182 = LOCAL_SET_EXTERNREF
    { 1181,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	494,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1181 = LOCAL_GET_V128_S
    { 1180,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	505,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1180 = LOCAL_GET_V128
    { 1179,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	494,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1179 = LOCAL_GET_I64_S
    { 1178,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	503,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1178 = LOCAL_GET_I64
    { 1177,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	494,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1177 = LOCAL_GET_I32_S
    { 1176,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	501,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1176 = LOCAL_GET_I32
    { 1175,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	494,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1175 = LOCAL_GET_FUNCREF_S
    { 1174,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	499,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1174 = LOCAL_GET_FUNCREF
    { 1173,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	494,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1173 = LOCAL_GET_F64_S
    { 1172,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	497,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1172 = LOCAL_GET_F64
    { 1171,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	494,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1171 = LOCAL_GET_F32_S
    { 1170,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	495,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1170 = LOCAL_GET_F32
    { 1169,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	494,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1169 = LOCAL_GET_EXTERNREF_S
    { 1168,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	492,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1168 = LOCAL_GET_EXTERNREF
    { 1167,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1167 = LOAD_ZERO_I64x2_A64_S
    { 1166,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	454,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1166 = LOAD_ZERO_I64x2_A64
    { 1165,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1165 = LOAD_ZERO_I64x2_A32_S
    { 1164,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	450,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1164 = LOAD_ZERO_I64x2_A32
    { 1163,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1163 = LOAD_ZERO_I32x4_A64_S
    { 1162,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	454,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1162 = LOAD_ZERO_I32x4_A64
    { 1161,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1161 = LOAD_ZERO_I32x4_A32_S
    { 1160,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	450,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1160 = LOAD_ZERO_I32x4_A32
    { 1159,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1159 = LOAD_V128_A64_S
    { 1158,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	454,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1158 = LOAD_V128_A64
    { 1157,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1157 = LOAD_V128_A32_S
    { 1156,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	450,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1156 = LOAD_V128_A32
    { 1155,	3,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	489,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1155 = LOAD_LANE_I8x16_A64_S
    { 1154,	6,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	483,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1154 = LOAD_LANE_I8x16_A64
    { 1153,	3,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	480,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1153 = LOAD_LANE_I8x16_A32_S
    { 1152,	6,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	474,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1152 = LOAD_LANE_I8x16_A32
    { 1151,	3,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	489,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1151 = LOAD_LANE_I64x2_A64_S
    { 1150,	6,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	483,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1150 = LOAD_LANE_I64x2_A64
    { 1149,	3,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	480,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1149 = LOAD_LANE_I64x2_A32_S
    { 1148,	6,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	474,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1148 = LOAD_LANE_I64x2_A32
    { 1147,	3,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	489,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1147 = LOAD_LANE_I32x4_A64_S
    { 1146,	6,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	483,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1146 = LOAD_LANE_I32x4_A64
    { 1145,	3,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	480,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1145 = LOAD_LANE_I32x4_A32_S
    { 1144,	6,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	474,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1144 = LOAD_LANE_I32x4_A32
    { 1143,	3,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	489,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1143 = LOAD_LANE_I16x8_A64_S
    { 1142,	6,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	483,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1142 = LOAD_LANE_I16x8_A64
    { 1141,	3,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	480,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1141 = LOAD_LANE_I16x8_A32_S
    { 1140,	6,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	474,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1140 = LOAD_LANE_I16x8_A32
    { 1139,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1139 = LOAD_I64_A64_S
    { 1138,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	192,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1138 = LOAD_I64_A64
    { 1137,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1137 = LOAD_I64_A32_S
    { 1136,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	188,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1136 = LOAD_I64_A32
    { 1135,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1135 = LOAD_I32_A64_S
    { 1134,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	182,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1134 = LOAD_I32_A64
    { 1133,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1133 = LOAD_I32_A32_S
    { 1132,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	176,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1132 = LOAD_I32_A32
    { 1131,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1131 = LOAD_F64_A64_S
    { 1130,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	470,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1130 = LOAD_F64_A64
    { 1129,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1129 = LOAD_F64_A32_S
    { 1128,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	466,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1128 = LOAD_F64_A32
    { 1127,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1127 = LOAD_F32_A64_S
    { 1126,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	462,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1126 = LOAD_F32_A64
    { 1125,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1125 = LOAD_F32_A32_S
    { 1124,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	458,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1124 = LOAD_F32_A32
    { 1123,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1123 = LOAD_EXTEND_U_I64x2_A64_S
    { 1122,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	454,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1122 = LOAD_EXTEND_U_I64x2_A64
    { 1121,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1121 = LOAD_EXTEND_U_I64x2_A32_S
    { 1120,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	450,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1120 = LOAD_EXTEND_U_I64x2_A32
    { 1119,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1119 = LOAD_EXTEND_U_I32x4_A64_S
    { 1118,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	454,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1118 = LOAD_EXTEND_U_I32x4_A64
    { 1117,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1117 = LOAD_EXTEND_U_I32x4_A32_S
    { 1116,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	450,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1116 = LOAD_EXTEND_U_I32x4_A32
    { 1115,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1115 = LOAD_EXTEND_U_I16x8_A64_S
    { 1114,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	454,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1114 = LOAD_EXTEND_U_I16x8_A64
    { 1113,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1113 = LOAD_EXTEND_U_I16x8_A32_S
    { 1112,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	450,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1112 = LOAD_EXTEND_U_I16x8_A32
    { 1111,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1111 = LOAD_EXTEND_S_I64x2_A64_S
    { 1110,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	454,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1110 = LOAD_EXTEND_S_I64x2_A64
    { 1109,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1109 = LOAD_EXTEND_S_I64x2_A32_S
    { 1108,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	450,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1108 = LOAD_EXTEND_S_I64x2_A32
    { 1107,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1107 = LOAD_EXTEND_S_I32x4_A64_S
    { 1106,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	454,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1106 = LOAD_EXTEND_S_I32x4_A64
    { 1105,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1105 = LOAD_EXTEND_S_I32x4_A32_S
    { 1104,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	450,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1104 = LOAD_EXTEND_S_I32x4_A32
    { 1103,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1103 = LOAD_EXTEND_S_I16x8_A64_S
    { 1102,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	454,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1102 = LOAD_EXTEND_S_I16x8_A64
    { 1101,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1101 = LOAD_EXTEND_S_I16x8_A32_S
    { 1100,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	450,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1100 = LOAD_EXTEND_S_I16x8_A32
    { 1099,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1099 = LOAD8_U_I64_A64_S
    { 1098,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	192,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1098 = LOAD8_U_I64_A64
    { 1097,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1097 = LOAD8_U_I64_A32_S
    { 1096,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	188,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1096 = LOAD8_U_I64_A32
    { 1095,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1095 = LOAD8_U_I32_A64_S
    { 1094,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	182,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1094 = LOAD8_U_I32_A64
    { 1093,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1093 = LOAD8_U_I32_A32_S
    { 1092,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	176,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1092 = LOAD8_U_I32_A32
    { 1091,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1091 = LOAD8_S_I64_A64_S
    { 1090,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	192,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1090 = LOAD8_S_I64_A64
    { 1089,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1089 = LOAD8_S_I64_A32_S
    { 1088,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	188,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1088 = LOAD8_S_I64_A32
    { 1087,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1087 = LOAD8_S_I32_A64_S
    { 1086,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	182,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1086 = LOAD8_S_I32_A64
    { 1085,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1085 = LOAD8_S_I32_A32_S
    { 1084,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	176,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1084 = LOAD8_S_I32_A32
    { 1083,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1083 = LOAD8_SPLAT_A64_S
    { 1082,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	454,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1082 = LOAD8_SPLAT_A64
    { 1081,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1081 = LOAD8_SPLAT_A32_S
    { 1080,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	450,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1080 = LOAD8_SPLAT_A32
    { 1079,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1079 = LOAD64_SPLAT_A64_S
    { 1078,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	454,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1078 = LOAD64_SPLAT_A64
    { 1077,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1077 = LOAD64_SPLAT_A32_S
    { 1076,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	450,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1076 = LOAD64_SPLAT_A32
    { 1075,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1075 = LOAD32_U_I64_A64_S
    { 1074,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	192,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1074 = LOAD32_U_I64_A64
    { 1073,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1073 = LOAD32_U_I64_A32_S
    { 1072,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	188,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1072 = LOAD32_U_I64_A32
    { 1071,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1071 = LOAD32_S_I64_A64_S
    { 1070,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	192,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1070 = LOAD32_S_I64_A64
    { 1069,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1069 = LOAD32_S_I64_A32_S
    { 1068,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	188,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1068 = LOAD32_S_I64_A32
    { 1067,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1067 = LOAD32_SPLAT_A64_S
    { 1066,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	454,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1066 = LOAD32_SPLAT_A64
    { 1065,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1065 = LOAD32_SPLAT_A32_S
    { 1064,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	450,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1064 = LOAD32_SPLAT_A32
    { 1063,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1063 = LOAD16_U_I64_A64_S
    { 1062,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	192,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1062 = LOAD16_U_I64_A64
    { 1061,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1061 = LOAD16_U_I64_A32_S
    { 1060,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	188,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1060 = LOAD16_U_I64_A32
    { 1059,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1059 = LOAD16_U_I32_A64_S
    { 1058,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	182,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1058 = LOAD16_U_I32_A64
    { 1057,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1057 = LOAD16_U_I32_A32_S
    { 1056,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	176,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1056 = LOAD16_U_I32_A32
    { 1055,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1055 = LOAD16_S_I64_A64_S
    { 1054,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	192,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1054 = LOAD16_S_I64_A64
    { 1053,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1053 = LOAD16_S_I64_A32_S
    { 1052,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	188,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1052 = LOAD16_S_I64_A32
    { 1051,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1051 = LOAD16_S_I32_A64_S
    { 1050,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	182,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1050 = LOAD16_S_I32_A64
    { 1049,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1049 = LOAD16_S_I32_A32_S
    { 1048,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	176,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1048 = LOAD16_S_I32_A32
    { 1047,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1047 = LOAD16_SPLAT_A64_S
    { 1046,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	454,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1046 = LOAD16_SPLAT_A64
    { 1045,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1045 = LOAD16_SPLAT_A32_S
    { 1044,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	450,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1044 = LOAD16_SPLAT_A32
    { 1043,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1043 = LE_U_I8x16_S
    { 1042,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1042 = LE_U_I8x16
    { 1041,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1041 = LE_U_I64_S
    { 1040,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	381,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1040 = LE_U_I64
    { 1039,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1039 = LE_U_I32x4_S
    { 1038,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1038 = LE_U_I32x4
    { 1037,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1037 = LE_U_I32_S
    { 1036,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	154,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1036 = LE_U_I32
    { 1035,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1035 = LE_U_I16x8_S
    { 1034,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1034 = LE_U_I16x8
    { 1033,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1033 = LE_S_I8x16_S
    { 1032,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1032 = LE_S_I8x16
    { 1031,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1031 = LE_S_I64x2_S
    { 1030,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1030 = LE_S_I64x2
    { 1029,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1029 = LE_S_I64_S
    { 1028,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	381,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1028 = LE_S_I64
    { 1027,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1027 = LE_S_I32x4_S
    { 1026,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1026 = LE_S_I32x4
    { 1025,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1025 = LE_S_I32_S
    { 1024,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	154,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1024 = LE_S_I32
    { 1023,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1023 = LE_S_I16x8_S
    { 1022,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1022 = LE_S_I16x8
    { 1021,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1021 = LE_F64x2_S
    { 1020,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1020 = LE_F64x2
    { 1019,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1019 = LE_F64_S
    { 1018,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	378,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1018 = LE_F64
    { 1017,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1017 = LE_F32x4_S
    { 1016,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1016 = LE_F32x4
    { 1015,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1015 = LE_F32_S
    { 1014,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	375,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1014 = LE_F32
    { 1013,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1013 = LANESELECT_I8x16_S
    { 1012,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	256,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1012 = LANESELECT_I8x16
    { 1011,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1011 = LANESELECT_I64x2_S
    { 1010,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	256,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1010 = LANESELECT_I64x2
    { 1009,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1009 = LANESELECT_I32x4_S
    { 1008,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	256,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1008 = LANESELECT_I32x4
    { 1007,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1007 = LANESELECT_I16x8_S
    { 1006,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	256,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1006 = LANESELECT_I16x8
    { 1005,	1,	0,	0,	0,	1,	1,	WebAssemblyImpOpBase + 8,	260,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1005 = IF_S
    { 1004,	2,	0,	0,	0,	1,	1,	WebAssemblyImpOpBase + 8,	448,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1004 = IF
    { 1003,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1003 = I64_TRUNC_U_SAT_F64_S
    { 1002,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	415,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1002 = I64_TRUNC_U_SAT_F64
    { 1001,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1001 = I64_TRUNC_U_SAT_F32_S
    { 1000,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	413,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1000 = I64_TRUNC_U_SAT_F32
    { 999,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #999 = I64_TRUNC_U_F64_S
    { 998,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	415,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #998 = I64_TRUNC_U_F64
    { 997,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #997 = I64_TRUNC_U_F32_S
    { 996,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	413,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #996 = I64_TRUNC_U_F32
    { 995,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #995 = I64_TRUNC_S_SAT_F64_S
    { 994,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	415,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #994 = I64_TRUNC_S_SAT_F64
    { 993,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #993 = I64_TRUNC_S_SAT_F32_S
    { 992,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	413,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #992 = I64_TRUNC_S_SAT_F32
    { 991,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #991 = I64_TRUNC_S_F64_S
    { 990,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	415,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #990 = I64_TRUNC_S_F64
    { 989,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #989 = I64_TRUNC_S_F32_S
    { 988,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	413,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #988 = I64_TRUNC_S_F32
    { 987,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #987 = I64_REINTERPRET_F64_S
    { 986,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	415,	0|(1ULL<<MCID::Bitcast)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #986 = I64_REINTERPRET_F64
    { 985,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #985 = I64_EXTEND_U_I32_S
    { 984,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	446,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #984 = I64_EXTEND_U_I32
    { 983,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #983 = I64_EXTEND_S_I32_S
    { 982,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	446,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #982 = I64_EXTEND_S_I32
    { 981,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #981 = I64_EXTEND8_S_I64_S
    { 980,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	272,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #980 = I64_EXTEND8_S_I64
    { 979,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #979 = I64_EXTEND32_S_I64_S
    { 978,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	272,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #978 = I64_EXTEND32_S_I64
    { 977,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #977 = I64_EXTEND16_S_I64_S
    { 976,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	272,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #976 = I64_EXTEND16_S_I64
    { 975,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #975 = I32_WRAP_I64_S
    { 974,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	373,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #974 = I32_WRAP_I64
    { 973,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #973 = I32_TRUNC_U_SAT_F64_S
    { 972,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	411,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #972 = I32_TRUNC_U_SAT_F64
    { 971,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #971 = I32_TRUNC_U_SAT_F32_S
    { 970,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	409,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #970 = I32_TRUNC_U_SAT_F32
    { 969,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #969 = I32_TRUNC_U_F64_S
    { 968,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	411,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #968 = I32_TRUNC_U_F64
    { 967,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #967 = I32_TRUNC_U_F32_S
    { 966,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	409,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #966 = I32_TRUNC_U_F32
    { 965,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #965 = I32_TRUNC_S_SAT_F64_S
    { 964,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	411,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #964 = I32_TRUNC_S_SAT_F64
    { 963,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #963 = I32_TRUNC_S_SAT_F32_S
    { 962,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	409,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #962 = I32_TRUNC_S_SAT_F32
    { 961,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #961 = I32_TRUNC_S_F64_S
    { 960,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	411,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #960 = I32_TRUNC_S_F64
    { 959,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #959 = I32_TRUNC_S_F32_S
    { 958,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	409,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #958 = I32_TRUNC_S_F32
    { 957,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #957 = I32_REINTERPRET_F32_S
    { 956,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	409,	0|(1ULL<<MCID::Bitcast)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #956 = I32_REINTERPRET_F32
    { 955,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #955 = I32_EXTEND8_S_I32_S
    { 954,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	270,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #954 = I32_EXTEND8_S_I32
    { 953,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #953 = I32_EXTEND16_S_I32_S
    { 952,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	270,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #952 = I32_EXTEND16_S_I32
    { 951,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #951 = GT_U_I8x16_S
    { 950,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #950 = GT_U_I8x16
    { 949,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #949 = GT_U_I64_S
    { 948,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	381,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #948 = GT_U_I64
    { 947,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #947 = GT_U_I32x4_S
    { 946,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #946 = GT_U_I32x4
    { 945,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #945 = GT_U_I32_S
    { 944,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	154,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #944 = GT_U_I32
    { 943,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #943 = GT_U_I16x8_S
    { 942,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #942 = GT_U_I16x8
    { 941,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #941 = GT_S_I8x16_S
    { 940,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #940 = GT_S_I8x16
    { 939,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #939 = GT_S_I64x2_S
    { 938,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #938 = GT_S_I64x2
    { 937,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #937 = GT_S_I64_S
    { 936,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	381,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #936 = GT_S_I64
    { 935,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #935 = GT_S_I32x4_S
    { 934,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #934 = GT_S_I32x4
    { 933,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #933 = GT_S_I32_S
    { 932,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	154,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #932 = GT_S_I32
    { 931,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #931 = GT_S_I16x8_S
    { 930,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #930 = GT_S_I16x8
    { 929,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #929 = GT_F64x2_S
    { 928,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #928 = GT_F64x2
    { 927,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #927 = GT_F64_S
    { 926,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	378,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #926 = GT_F64
    { 925,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #925 = GT_F32x4_S
    { 924,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #924 = GT_F32x4
    { 923,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #923 = GT_F32_S
    { 922,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	375,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #922 = GT_F32
    { 921,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	419,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #921 = GLOBAL_SET_V128_S
    { 920,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	444,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #920 = GLOBAL_SET_V128
    { 919,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	419,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #919 = GLOBAL_SET_I64_S
    { 918,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	442,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #918 = GLOBAL_SET_I64
    { 917,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	419,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #917 = GLOBAL_SET_I32_S
    { 916,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	440,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #916 = GLOBAL_SET_I32
    { 915,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	419,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #915 = GLOBAL_SET_FUNCREF_S
    { 914,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	438,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #914 = GLOBAL_SET_FUNCREF
    { 913,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	419,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #913 = GLOBAL_SET_F64_S
    { 912,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	436,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #912 = GLOBAL_SET_F64
    { 911,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	419,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #911 = GLOBAL_SET_F32_S
    { 910,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	434,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #910 = GLOBAL_SET_F32
    { 909,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	419,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #909 = GLOBAL_SET_EXTERNREF_S
    { 908,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	432,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #908 = GLOBAL_SET_EXTERNREF
    { 907,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	419,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #907 = GLOBAL_GET_V128_S
    { 906,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	430,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #906 = GLOBAL_GET_V128
    { 905,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	419,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #905 = GLOBAL_GET_I64_S
    { 904,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	428,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #904 = GLOBAL_GET_I64
    { 903,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	419,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #903 = GLOBAL_GET_I32_S
    { 902,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	426,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #902 = GLOBAL_GET_I32
    { 901,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	419,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #901 = GLOBAL_GET_FUNCREF_S
    { 900,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	424,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #900 = GLOBAL_GET_FUNCREF
    { 899,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	419,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #899 = GLOBAL_GET_F64_S
    { 898,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	422,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #898 = GLOBAL_GET_F64
    { 897,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	419,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #897 = GLOBAL_GET_F32_S
    { 896,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	420,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #896 = GLOBAL_GET_F32
    { 895,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	419,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #895 = GLOBAL_GET_EXTERNREF_S
    { 894,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	417,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #894 = GLOBAL_GET_EXTERNREF
    { 893,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #893 = GE_U_I8x16_S
    { 892,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #892 = GE_U_I8x16
    { 891,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #891 = GE_U_I64_S
    { 890,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	381,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #890 = GE_U_I64
    { 889,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #889 = GE_U_I32x4_S
    { 888,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #888 = GE_U_I32x4
    { 887,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #887 = GE_U_I32_S
    { 886,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	154,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #886 = GE_U_I32
    { 885,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #885 = GE_U_I16x8_S
    { 884,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #884 = GE_U_I16x8
    { 883,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #883 = GE_S_I8x16_S
    { 882,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #882 = GE_S_I8x16
    { 881,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #881 = GE_S_I64x2_S
    { 880,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #880 = GE_S_I64x2
    { 879,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #879 = GE_S_I64_S
    { 878,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	381,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #878 = GE_S_I64
    { 877,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #877 = GE_S_I32x4_S
    { 876,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #876 = GE_S_I32x4
    { 875,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #875 = GE_S_I32_S
    { 874,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	154,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #874 = GE_S_I32
    { 873,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #873 = GE_S_I16x8_S
    { 872,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #872 = GE_S_I16x8
    { 871,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #871 = GE_F64x2_S
    { 870,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #870 = GE_F64x2
    { 869,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #869 = GE_F64_S
    { 868,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	378,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #868 = GE_F64
    { 867,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #867 = GE_F32x4_S
    { 866,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #866 = GE_F32x4
    { 865,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #865 = GE_F32_S
    { 864,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	375,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #864 = GE_F32
    { 863,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #863 = FP_TO_UINT_I64_F64_S
    { 862,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	415,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #862 = FP_TO_UINT_I64_F64
    { 861,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #861 = FP_TO_UINT_I64_F32_S
    { 860,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	413,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #860 = FP_TO_UINT_I64_F32
    { 859,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #859 = FP_TO_UINT_I32_F64_S
    { 858,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	411,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #858 = FP_TO_UINT_I32_F64
    { 857,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #857 = FP_TO_UINT_I32_F32_S
    { 856,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	409,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #856 = FP_TO_UINT_I32_F32
    { 855,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #855 = FP_TO_SINT_I64_F64_S
    { 854,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	415,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #854 = FP_TO_SINT_I64_F64
    { 853,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #853 = FP_TO_SINT_I64_F32_S
    { 852,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	413,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #852 = FP_TO_SINT_I64_F32
    { 851,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #851 = FP_TO_SINT_I32_F64_S
    { 850,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	411,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #850 = FP_TO_SINT_I32_F64
    { 849,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #849 = FP_TO_SINT_I32_F32_S
    { 848,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	409,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #848 = FP_TO_SINT_I32_F32
    { 847,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #847 = FLOOR_F64x2_S
    { 846,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #846 = FLOOR_F64x2
    { 845,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #845 = FLOOR_F64_S
    { 844,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	143,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #844 = FLOOR_F64
    { 843,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #843 = FLOOR_F32x4_S
    { 842,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #842 = FLOOR_F32x4
    { 841,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #841 = FLOOR_F32_S
    { 840,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	139,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #840 = FLOOR_F32
    { 839,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #839 = FALLTHROUGH_RETURN_S
    { 838,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #838 = FALLTHROUGH_RETURN
    { 837,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #837 = F64_REINTERPRET_I64_S
    { 836,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	405,	0|(1ULL<<MCID::Bitcast)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #836 = F64_REINTERPRET_I64
    { 835,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #835 = F64_PROMOTE_F32_S
    { 834,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	407,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #834 = F64_PROMOTE_F32
    { 833,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #833 = F64_CONVERT_U_I64_S
    { 832,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	405,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #832 = F64_CONVERT_U_I64
    { 831,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #831 = F64_CONVERT_U_I32_S
    { 830,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	403,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #830 = F64_CONVERT_U_I32
    { 829,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #829 = F64_CONVERT_S_I64_S
    { 828,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	405,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #828 = F64_CONVERT_S_I64
    { 827,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #827 = F64_CONVERT_S_I32_S
    { 826,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	403,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #826 = F64_CONVERT_S_I32
    { 825,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #825 = F32_REINTERPRET_I32_S
    { 824,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	397,	0|(1ULL<<MCID::Bitcast)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #824 = F32_REINTERPRET_I32
    { 823,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #823 = F32_DEMOTE_F64_S
    { 822,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	401,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #822 = F32_DEMOTE_F64
    { 821,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #821 = F32_CONVERT_U_I64_S
    { 820,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	399,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #820 = F32_CONVERT_U_I64
    { 819,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #819 = F32_CONVERT_U_I32_S
    { 818,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	397,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #818 = F32_CONVERT_U_I32
    { 817,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #817 = F32_CONVERT_S_I64_S
    { 816,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	399,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #816 = F32_CONVERT_S_I64
    { 815,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #815 = F32_CONVERT_S_I32_S
    { 814,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	397,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #814 = F32_CONVERT_S_I32
    { 813,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	387,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #813 = EXTRACT_LANE_I8x16_u_S
    { 812,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	391,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #812 = EXTRACT_LANE_I8x16_u
    { 811,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	387,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #811 = EXTRACT_LANE_I8x16_s_S
    { 810,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	391,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #810 = EXTRACT_LANE_I8x16_s
    { 809,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	387,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #809 = EXTRACT_LANE_I64x2_S
    { 808,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	394,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #808 = EXTRACT_LANE_I64x2
    { 807,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	387,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #807 = EXTRACT_LANE_I32x4_S
    { 806,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	391,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #806 = EXTRACT_LANE_I32x4
    { 805,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	387,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #805 = EXTRACT_LANE_I16x8_u_S
    { 804,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	391,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #804 = EXTRACT_LANE_I16x8_u
    { 803,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	387,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #803 = EXTRACT_LANE_I16x8_s_S
    { 802,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	391,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #802 = EXTRACT_LANE_I16x8_s
    { 801,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	387,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #801 = EXTRACT_LANE_F64x2_S
    { 800,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	388,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #800 = EXTRACT_LANE_F64x2
    { 799,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	387,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #799 = EXTRACT_LANE_F32x4_S
    { 798,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	384,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #798 = EXTRACT_LANE_F32x4
    { 797,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #797 = EXTMUL_LOW_U_I64x2_S
    { 796,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #796 = EXTMUL_LOW_U_I64x2
    { 795,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #795 = EXTMUL_LOW_U_I32x4_S
    { 794,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #794 = EXTMUL_LOW_U_I32x4
    { 793,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #793 = EXTMUL_LOW_U_I16x8_S
    { 792,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #792 = EXTMUL_LOW_U_I16x8
    { 791,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #791 = EXTMUL_LOW_S_I64x2_S
    { 790,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #790 = EXTMUL_LOW_S_I64x2
    { 789,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #789 = EXTMUL_LOW_S_I32x4_S
    { 788,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #788 = EXTMUL_LOW_S_I32x4
    { 787,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #787 = EXTMUL_LOW_S_I16x8_S
    { 786,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #786 = EXTMUL_LOW_S_I16x8
    { 785,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #785 = EXTMUL_HIGH_U_I64x2_S
    { 784,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #784 = EXTMUL_HIGH_U_I64x2
    { 783,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #783 = EXTMUL_HIGH_U_I32x4_S
    { 782,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #782 = EXTMUL_HIGH_U_I32x4
    { 781,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #781 = EXTMUL_HIGH_U_I16x8_S
    { 780,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #780 = EXTMUL_HIGH_U_I16x8
    { 779,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #779 = EXTMUL_HIGH_S_I64x2_S
    { 778,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #778 = EXTMUL_HIGH_S_I64x2
    { 777,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #777 = EXTMUL_HIGH_S_I32x4_S
    { 776,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #776 = EXTMUL_HIGH_S_I32x4
    { 775,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #775 = EXTMUL_HIGH_S_I16x8_S
    { 774,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #774 = EXTMUL_HIGH_S_I16x8
    { 773,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #773 = EQ_I8x16_S
    { 772,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #772 = EQ_I8x16
    { 771,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #771 = EQ_I64x2_S
    { 770,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #770 = EQ_I64x2
    { 769,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #769 = EQ_I64_S
    { 768,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	381,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #768 = EQ_I64
    { 767,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #767 = EQ_I32x4_S
    { 766,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #766 = EQ_I32x4
    { 765,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #765 = EQ_I32_S
    { 764,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	154,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #764 = EQ_I32
    { 763,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #763 = EQ_I16x8_S
    { 762,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #762 = EQ_I16x8
    { 761,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #761 = EQ_F64x2_S
    { 760,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #760 = EQ_F64x2
    { 759,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #759 = EQ_F64_S
    { 758,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	378,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #758 = EQ_F64
    { 757,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #757 = EQ_F32x4_S
    { 756,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #756 = EQ_F32x4
    { 755,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #755 = EQ_F32_S
    { 754,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	375,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #754 = EQ_F32
    { 753,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #753 = EQZ_I64_S
    { 752,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	373,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #752 = EQZ_I64
    { 751,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #751 = EQZ_I32_S
    { 750,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	270,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #750 = EQZ_I32
    { 749,	0,	0,	0,	0,	1,	1,	WebAssemblyImpOpBase + 8,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #749 = END_TRY_S
    { 748,	0,	0,	0,	0,	1,	1,	WebAssemblyImpOpBase + 8,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #748 = END_TRY
    { 747,	0,	0,	0,	0,	1,	1,	WebAssemblyImpOpBase + 8,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #747 = END_S
    { 746,	0,	0,	0,	0,	1,	1,	WebAssemblyImpOpBase + 8,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #746 = END_LOOP_S
    { 745,	0,	0,	0,	0,	1,	1,	WebAssemblyImpOpBase + 8,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #745 = END_LOOP
    { 744,	0,	0,	0,	0,	1,	1,	WebAssemblyImpOpBase + 8,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #744 = END_IF_S
    { 743,	0,	0,	0,	0,	1,	1,	WebAssemblyImpOpBase + 8,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #743 = END_IF
    { 742,	0,	0,	0,	0,	1,	1,	WebAssemblyImpOpBase + 8,	1,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #742 = END_FUNCTION_S
    { 741,	0,	0,	0,	0,	1,	1,	WebAssemblyImpOpBase + 8,	1,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #741 = END_FUNCTION
    { 740,	0,	0,	0,	0,	1,	1,	WebAssemblyImpOpBase + 8,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #740 = END_BLOCK_S
    { 739,	0,	0,	0,	0,	1,	1,	WebAssemblyImpOpBase + 8,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #739 = END_BLOCK
    { 738,	0,	0,	0,	0,	1,	1,	WebAssemblyImpOpBase + 8,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #738 = END
    { 737,	0,	0,	0,	0,	1,	1,	WebAssemblyImpOpBase + 8,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #737 = ELSE_S
    { 736,	0,	0,	0,	0,	1,	1,	WebAssemblyImpOpBase + 8,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #736 = ELSE
    { 735,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #735 = DROP_V128_S
    { 734,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	372,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #734 = DROP_V128
    { 733,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #733 = DROP_I64_S
    { 732,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	266,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #732 = DROP_I64
    { 731,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #731 = DROP_I32_S
    { 730,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	264,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #730 = DROP_I32
    { 729,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #729 = DROP_FUNCREF_S
    { 728,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	371,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #728 = DROP_FUNCREF
    { 727,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #727 = DROP_F64_S
    { 726,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	370,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #726 = DROP_F64
    { 725,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #725 = DROP_F32_S
    { 724,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	369,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #724 = DROP_F32
    { 723,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #723 = DROP_EXTERNREF_S
    { 722,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	368,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #722 = DROP_EXTERNREF
    { 721,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #721 = DOT_S
    { 720,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #720 = DOT
    { 719,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #719 = DIV_U_I64_S
    { 718,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	157,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #718 = DIV_U_I64
    { 717,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #717 = DIV_U_I32_S
    { 716,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	154,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #716 = DIV_U_I32
    { 715,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #715 = DIV_S_I64_S
    { 714,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	157,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #714 = DIV_S_I64
    { 713,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #713 = DIV_S_I32_S
    { 712,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	154,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #712 = DIV_S_I32
    { 711,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #711 = DIV_F64x2_S
    { 710,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #710 = DIV_F64x2
    { 709,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #709 = DIV_F64_S
    { 708,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	151,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #708 = DIV_F64
    { 707,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #707 = DIV_F32x4_S
    { 706,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #706 = DIV_F32x4
    { 705,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #705 = DIV_F32_S
    { 704,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	145,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #704 = DIV_F32
    { 703,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	261,	0|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #703 = DELEGATE_S
    { 702,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	261,	0|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #702 = DELEGATE
    { 701,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Trap)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #701 = DEBUG_UNREACHABLE_S
    { 700,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Trap)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #700 = DEBUG_UNREACHABLE
    { 699,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #699 = CTZ_I64_S
    { 698,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	272,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #698 = CTZ_I64
    { 697,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #697 = CTZ_I32_S
    { 696,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	270,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #696 = CTZ_I32
    { 695,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #695 = COPY_V128_S
    { 694,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #694 = COPY_V128
    { 693,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #693 = COPY_I64_S
    { 692,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	272,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #692 = COPY_I64
    { 691,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #691 = COPY_I32_S
    { 690,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	270,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #690 = COPY_I32
    { 689,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #689 = COPY_FUNCREF_S
    { 688,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	366,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #688 = COPY_FUNCREF
    { 687,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #687 = COPY_F64_S
    { 686,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	143,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #686 = COPY_F64
    { 685,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #685 = COPY_F32_S
    { 684,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	139,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #684 = COPY_F32
    { 683,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #683 = COPY_EXTERNREF_S
    { 682,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	364,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #682 = COPY_EXTERNREF
    { 681,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #681 = COPYSIGN_F64_S
    { 680,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	151,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #680 = COPYSIGN_F64
    { 679,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #679 = COPYSIGN_F32_S
    { 678,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	145,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #678 = COPYSIGN_F32
    { 677,	16,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	348,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #677 = CONST_V128_I8x16_S
    { 676,	17,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	331,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #676 = CONST_V128_I8x16
    { 675,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	329,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #675 = CONST_V128_I64x2_S
    { 674,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	326,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #674 = CONST_V128_I64x2
    { 673,	4,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	322,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #673 = CONST_V128_I32x4_S
    { 672,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	317,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #672 = CONST_V128_I32x4
    { 671,	8,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	309,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #671 = CONST_V128_I16x8_S
    { 670,	9,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	300,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #670 = CONST_V128_I16x8
    { 669,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	298,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #669 = CONST_V128_F64x2_S
    { 668,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	295,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #668 = CONST_V128_F64x2
    { 667,	4,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	291,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #667 = CONST_V128_F32x4_S
    { 666,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	286,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #666 = CONST_V128_F32x4
    { 665,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	285,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #665 = CONST_I64_S
    { 664,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	283,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #664 = CONST_I64
    { 663,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	282,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #663 = CONST_I32_S
    { 662,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	280,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #662 = CONST_I32
    { 661,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	279,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #661 = CONST_F64_S
    { 660,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	277,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #660 = CONST_F64
    { 659,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	276,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #659 = CONST_F32_S
    { 658,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	274,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #658 = CONST_F32
    { 657,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #657 = CLZ_I64_S
    { 656,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	272,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #656 = CLZ_I64
    { 655,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #655 = CLZ_I32_S
    { 654,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	270,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #654 = CLZ_I32
    { 653,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #653 = CEIL_F64x2_S
    { 652,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #652 = CEIL_F64x2
    { 651,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #651 = CEIL_F64_S
    { 650,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	143,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #650 = CEIL_F64
    { 649,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #649 = CEIL_F32x4_S
    { 648,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #648 = CEIL_F32x4
    { 647,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #647 = CEIL_F32_S
    { 646,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	139,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #646 = CEIL_F32
    { 645,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	269,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::VariadicOpsAreDefs), 0x0ULL },  // Inst #645 = CATCH_S
    { 644,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #644 = CATCH_ALL_S
    { 643,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #643 = CATCH_ALL
    { 642,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	269,	0|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::VariadicOpsAreDefs), 0x0ULL },  // Inst #642 = CATCH
    { 641,	1,	0,	0,	0,	2,	1,	WebAssemblyImpOpBase + 0,	136,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::VariadicOpsAreDefs), 0x0ULL },  // Inst #641 = CALL_S
    { 640,	2,	0,	0,	0,	2,	1,	WebAssemblyImpOpBase + 0,	267,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::VariadicOpsAreDefs), 0x0ULL },  // Inst #640 = CALL_INDIRECT_S
    { 639,	2,	0,	0,	0,	2,	1,	WebAssemblyImpOpBase + 0,	267,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::VariadicOpsAreDefs), 0x0ULL },  // Inst #639 = CALL_INDIRECT
    { 638,	1,	0,	0,	0,	2,	1,	WebAssemblyImpOpBase + 0,	136,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::VariadicOpsAreDefs), 0x0ULL },  // Inst #638 = CALL
    { 637,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	261,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #637 = BR_UNLESS_S
    { 636,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	262,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #636 = BR_UNLESS
    { 635,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	265,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #635 = BR_TABLE_I64_S
    { 634,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	266,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #634 = BR_TABLE_I64
    { 633,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	265,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #633 = BR_TABLE_I32_S
    { 632,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	264,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #632 = BR_TABLE_I32
    { 631,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	261,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #631 = BR_S
    { 630,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	261,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #630 = BR_IF_S
    { 629,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	262,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #629 = BR_IF
    { 628,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	261,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #628 = BR
    { 627,	1,	0,	0,	0,	1,	1,	WebAssemblyImpOpBase + 8,	260,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #627 = BLOCK_S
    { 626,	1,	0,	0,	0,	1,	1,	WebAssemblyImpOpBase + 8,	260,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #626 = BLOCK
    { 625,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #625 = BITSELECT_S
    { 624,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	256,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #624 = BITSELECT
    { 623,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #623 = BITMASK_I8x16_S
    { 622,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	160,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #622 = BITMASK_I8x16
    { 621,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #621 = BITMASK_I64x2_S
    { 620,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	160,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #620 = BITMASK_I64x2
    { 619,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #619 = BITMASK_I32x4_S
    { 618,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	160,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #618 = BITMASK_I32x4
    { 617,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #617 = BITMASK_I16x8_S
    { 616,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	160,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #616 = BITMASK_I16x8
    { 615,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #615 = AVGR_U_I8x16_S
    { 614,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #614 = AVGR_U_I8x16
    { 613,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #613 = AVGR_U_I16x8_S
    { 612,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #612 = AVGR_U_I16x8
    { 611,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #611 = ATOMIC_STORE_I64_A64_S
    { 610,	4,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	252,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #610 = ATOMIC_STORE_I64_A64
    { 609,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #609 = ATOMIC_STORE_I64_A32_S
    { 608,	4,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	248,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #608 = ATOMIC_STORE_I64_A32
    { 607,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #607 = ATOMIC_STORE_I32_A64_S
    { 606,	4,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	244,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #606 = ATOMIC_STORE_I32_A64
    { 605,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #605 = ATOMIC_STORE_I32_A32_S
    { 604,	4,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	240,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #604 = ATOMIC_STORE_I32_A32
    { 603,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #603 = ATOMIC_STORE8_I64_A64_S
    { 602,	4,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	252,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #602 = ATOMIC_STORE8_I64_A64
    { 601,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #601 = ATOMIC_STORE8_I64_A32_S
    { 600,	4,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	248,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #600 = ATOMIC_STORE8_I64_A32
    { 599,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #599 = ATOMIC_STORE8_I32_A64_S
    { 598,	4,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	244,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #598 = ATOMIC_STORE8_I32_A64
    { 597,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #597 = ATOMIC_STORE8_I32_A32_S
    { 596,	4,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	240,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #596 = ATOMIC_STORE8_I32_A32
    { 595,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #595 = ATOMIC_STORE32_I64_A64_S
    { 594,	4,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	252,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #594 = ATOMIC_STORE32_I64_A64
    { 593,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #593 = ATOMIC_STORE32_I64_A32_S
    { 592,	4,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	248,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #592 = ATOMIC_STORE32_I64_A32
    { 591,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #591 = ATOMIC_STORE16_I64_A64_S
    { 590,	4,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	252,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #590 = ATOMIC_STORE16_I64_A64
    { 589,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #589 = ATOMIC_STORE16_I64_A32_S
    { 588,	4,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	248,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #588 = ATOMIC_STORE16_I64_A32
    { 587,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #587 = ATOMIC_STORE16_I32_A64_S
    { 586,	4,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	244,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #586 = ATOMIC_STORE16_I32_A64
    { 585,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #585 = ATOMIC_STORE16_I32_A32_S
    { 584,	4,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	240,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #584 = ATOMIC_STORE16_I32_A32
    { 583,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #583 = ATOMIC_RMW_XOR_I64_A64_S
    { 582,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	211,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #582 = ATOMIC_RMW_XOR_I64_A64
    { 581,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #581 = ATOMIC_RMW_XOR_I64_A32_S
    { 580,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	206,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #580 = ATOMIC_RMW_XOR_I64_A32
    { 579,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #579 = ATOMIC_RMW_XOR_I32_A64_S
    { 578,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	201,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #578 = ATOMIC_RMW_XOR_I32_A64
    { 577,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #577 = ATOMIC_RMW_XOR_I32_A32_S
    { 576,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	196,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #576 = ATOMIC_RMW_XOR_I32_A32
    { 575,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #575 = ATOMIC_RMW_XCHG_I64_A64_S
    { 574,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	211,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #574 = ATOMIC_RMW_XCHG_I64_A64
    { 573,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #573 = ATOMIC_RMW_XCHG_I64_A32_S
    { 572,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	206,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #572 = ATOMIC_RMW_XCHG_I64_A32
    { 571,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #571 = ATOMIC_RMW_XCHG_I32_A64_S
    { 570,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	201,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #570 = ATOMIC_RMW_XCHG_I32_A64
    { 569,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #569 = ATOMIC_RMW_XCHG_I32_A32_S
    { 568,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	196,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #568 = ATOMIC_RMW_XCHG_I32_A32
    { 567,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #567 = ATOMIC_RMW_SUB_I64_A64_S
    { 566,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	211,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #566 = ATOMIC_RMW_SUB_I64_A64
    { 565,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #565 = ATOMIC_RMW_SUB_I64_A32_S
    { 564,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	206,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #564 = ATOMIC_RMW_SUB_I64_A32
    { 563,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #563 = ATOMIC_RMW_SUB_I32_A64_S
    { 562,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	201,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #562 = ATOMIC_RMW_SUB_I32_A64
    { 561,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #561 = ATOMIC_RMW_SUB_I32_A32_S
    { 560,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	196,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #560 = ATOMIC_RMW_SUB_I32_A32
    { 559,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #559 = ATOMIC_RMW_OR_I64_A64_S
    { 558,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	211,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #558 = ATOMIC_RMW_OR_I64_A64
    { 557,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #557 = ATOMIC_RMW_OR_I64_A32_S
    { 556,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	206,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #556 = ATOMIC_RMW_OR_I64_A32
    { 555,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #555 = ATOMIC_RMW_OR_I32_A64_S
    { 554,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	201,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #554 = ATOMIC_RMW_OR_I32_A64
    { 553,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #553 = ATOMIC_RMW_OR_I32_A32_S
    { 552,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	196,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #552 = ATOMIC_RMW_OR_I32_A32
    { 551,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #551 = ATOMIC_RMW_CMPXCHG_I64_A64_S
    { 550,	6,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	234,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #550 = ATOMIC_RMW_CMPXCHG_I64_A64
    { 549,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #549 = ATOMIC_RMW_CMPXCHG_I64_A32_S
    { 548,	6,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	228,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #548 = ATOMIC_RMW_CMPXCHG_I64_A32
    { 547,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #547 = ATOMIC_RMW_CMPXCHG_I32_A64_S
    { 546,	6,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	222,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #546 = ATOMIC_RMW_CMPXCHG_I32_A64
    { 545,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #545 = ATOMIC_RMW_CMPXCHG_I32_A32_S
    { 544,	6,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	216,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #544 = ATOMIC_RMW_CMPXCHG_I32_A32
    { 543,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #543 = ATOMIC_RMW_AND_I64_A64_S
    { 542,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	211,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #542 = ATOMIC_RMW_AND_I64_A64
    { 541,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #541 = ATOMIC_RMW_AND_I64_A32_S
    { 540,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	206,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #540 = ATOMIC_RMW_AND_I64_A32
    { 539,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #539 = ATOMIC_RMW_AND_I32_A64_S
    { 538,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	201,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #538 = ATOMIC_RMW_AND_I32_A64
    { 537,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #537 = ATOMIC_RMW_AND_I32_A32_S
    { 536,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	196,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #536 = ATOMIC_RMW_AND_I32_A32
    { 535,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #535 = ATOMIC_RMW_ADD_I64_A64_S
    { 534,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	211,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #534 = ATOMIC_RMW_ADD_I64_A64
    { 533,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #533 = ATOMIC_RMW_ADD_I64_A32_S
    { 532,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	206,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #532 = ATOMIC_RMW_ADD_I64_A32
    { 531,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #531 = ATOMIC_RMW_ADD_I32_A64_S
    { 530,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	201,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #530 = ATOMIC_RMW_ADD_I32_A64
    { 529,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #529 = ATOMIC_RMW_ADD_I32_A32_S
    { 528,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	196,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #528 = ATOMIC_RMW_ADD_I32_A32
    { 527,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #527 = ATOMIC_RMW8_U_XOR_I64_A64_S
    { 526,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	211,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #526 = ATOMIC_RMW8_U_XOR_I64_A64
    { 525,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #525 = ATOMIC_RMW8_U_XOR_I64_A32_S
    { 524,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	206,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #524 = ATOMIC_RMW8_U_XOR_I64_A32
    { 523,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #523 = ATOMIC_RMW8_U_XOR_I32_A64_S
    { 522,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	201,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #522 = ATOMIC_RMW8_U_XOR_I32_A64
    { 521,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #521 = ATOMIC_RMW8_U_XOR_I32_A32_S
    { 520,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	196,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #520 = ATOMIC_RMW8_U_XOR_I32_A32
    { 519,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #519 = ATOMIC_RMW8_U_XCHG_I64_A64_S
    { 518,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	211,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #518 = ATOMIC_RMW8_U_XCHG_I64_A64
    { 517,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #517 = ATOMIC_RMW8_U_XCHG_I64_A32_S
    { 516,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	206,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #516 = ATOMIC_RMW8_U_XCHG_I64_A32
    { 515,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #515 = ATOMIC_RMW8_U_XCHG_I32_A64_S
    { 514,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	201,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #514 = ATOMIC_RMW8_U_XCHG_I32_A64
    { 513,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #513 = ATOMIC_RMW8_U_XCHG_I32_A32_S
    { 512,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	196,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #512 = ATOMIC_RMW8_U_XCHG_I32_A32
    { 511,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #511 = ATOMIC_RMW8_U_SUB_I64_A64_S
    { 510,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	211,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #510 = ATOMIC_RMW8_U_SUB_I64_A64
    { 509,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #509 = ATOMIC_RMW8_U_SUB_I64_A32_S
    { 508,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	206,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #508 = ATOMIC_RMW8_U_SUB_I64_A32
    { 507,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #507 = ATOMIC_RMW8_U_SUB_I32_A64_S
    { 506,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	201,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #506 = ATOMIC_RMW8_U_SUB_I32_A64
    { 505,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #505 = ATOMIC_RMW8_U_SUB_I32_A32_S
    { 504,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	196,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #504 = ATOMIC_RMW8_U_SUB_I32_A32
    { 503,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #503 = ATOMIC_RMW8_U_OR_I64_A64_S
    { 502,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	211,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #502 = ATOMIC_RMW8_U_OR_I64_A64
    { 501,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #501 = ATOMIC_RMW8_U_OR_I64_A32_S
    { 500,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	206,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #500 = ATOMIC_RMW8_U_OR_I64_A32
    { 499,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #499 = ATOMIC_RMW8_U_OR_I32_A64_S
    { 498,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	201,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #498 = ATOMIC_RMW8_U_OR_I32_A64
    { 497,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #497 = ATOMIC_RMW8_U_OR_I32_A32_S
    { 496,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	196,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #496 = ATOMIC_RMW8_U_OR_I32_A32
    { 495,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #495 = ATOMIC_RMW8_U_CMPXCHG_I64_A64_S
    { 494,	6,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	234,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #494 = ATOMIC_RMW8_U_CMPXCHG_I64_A64
    { 493,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #493 = ATOMIC_RMW8_U_CMPXCHG_I64_A32_S
    { 492,	6,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	228,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #492 = ATOMIC_RMW8_U_CMPXCHG_I64_A32
    { 491,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #491 = ATOMIC_RMW8_U_CMPXCHG_I32_A64_S
    { 490,	6,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	222,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #490 = ATOMIC_RMW8_U_CMPXCHG_I32_A64
    { 489,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #489 = ATOMIC_RMW8_U_CMPXCHG_I32_A32_S
    { 488,	6,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	216,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #488 = ATOMIC_RMW8_U_CMPXCHG_I32_A32
    { 487,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #487 = ATOMIC_RMW8_U_AND_I64_A64_S
    { 486,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	211,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #486 = ATOMIC_RMW8_U_AND_I64_A64
    { 485,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #485 = ATOMIC_RMW8_U_AND_I64_A32_S
    { 484,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	206,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #484 = ATOMIC_RMW8_U_AND_I64_A32
    { 483,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #483 = ATOMIC_RMW8_U_AND_I32_A64_S
    { 482,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	201,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #482 = ATOMIC_RMW8_U_AND_I32_A64
    { 481,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #481 = ATOMIC_RMW8_U_AND_I32_A32_S
    { 480,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	196,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #480 = ATOMIC_RMW8_U_AND_I32_A32
    { 479,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #479 = ATOMIC_RMW8_U_ADD_I64_A64_S
    { 478,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	211,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #478 = ATOMIC_RMW8_U_ADD_I64_A64
    { 477,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #477 = ATOMIC_RMW8_U_ADD_I64_A32_S
    { 476,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	206,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #476 = ATOMIC_RMW8_U_ADD_I64_A32
    { 475,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #475 = ATOMIC_RMW8_U_ADD_I32_A64_S
    { 474,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	201,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #474 = ATOMIC_RMW8_U_ADD_I32_A64
    { 473,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #473 = ATOMIC_RMW8_U_ADD_I32_A32_S
    { 472,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	196,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #472 = ATOMIC_RMW8_U_ADD_I32_A32
    { 471,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #471 = ATOMIC_RMW32_U_XOR_I64_A64_S
    { 470,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	211,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #470 = ATOMIC_RMW32_U_XOR_I64_A64
    { 469,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #469 = ATOMIC_RMW32_U_XOR_I64_A32_S
    { 468,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	206,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #468 = ATOMIC_RMW32_U_XOR_I64_A32
    { 467,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #467 = ATOMIC_RMW32_U_XCHG_I64_A64_S
    { 466,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	211,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #466 = ATOMIC_RMW32_U_XCHG_I64_A64
    { 465,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #465 = ATOMIC_RMW32_U_XCHG_I64_A32_S
    { 464,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	206,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #464 = ATOMIC_RMW32_U_XCHG_I64_A32
    { 463,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #463 = ATOMIC_RMW32_U_SUB_I64_A64_S
    { 462,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	211,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #462 = ATOMIC_RMW32_U_SUB_I64_A64
    { 461,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #461 = ATOMIC_RMW32_U_SUB_I64_A32_S
    { 460,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	206,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #460 = ATOMIC_RMW32_U_SUB_I64_A32
    { 459,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #459 = ATOMIC_RMW32_U_OR_I64_A64_S
    { 458,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	211,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #458 = ATOMIC_RMW32_U_OR_I64_A64
    { 457,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #457 = ATOMIC_RMW32_U_OR_I64_A32_S
    { 456,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	206,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #456 = ATOMIC_RMW32_U_OR_I64_A32
    { 455,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #455 = ATOMIC_RMW32_U_CMPXCHG_I64_A64_S
    { 454,	6,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	234,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #454 = ATOMIC_RMW32_U_CMPXCHG_I64_A64
    { 453,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #453 = ATOMIC_RMW32_U_CMPXCHG_I64_A32_S
    { 452,	6,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	228,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #452 = ATOMIC_RMW32_U_CMPXCHG_I64_A32
    { 451,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #451 = ATOMIC_RMW32_U_AND_I64_A64_S
    { 450,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	211,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #450 = ATOMIC_RMW32_U_AND_I64_A64
    { 449,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #449 = ATOMIC_RMW32_U_AND_I64_A32_S
    { 448,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	206,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #448 = ATOMIC_RMW32_U_AND_I64_A32
    { 447,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #447 = ATOMIC_RMW32_U_ADD_I64_A64_S
    { 446,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	211,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #446 = ATOMIC_RMW32_U_ADD_I64_A64
    { 445,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #445 = ATOMIC_RMW32_U_ADD_I64_A32_S
    { 444,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	206,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #444 = ATOMIC_RMW32_U_ADD_I64_A32
    { 443,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #443 = ATOMIC_RMW16_U_XOR_I64_A64_S
    { 442,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	211,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #442 = ATOMIC_RMW16_U_XOR_I64_A64
    { 441,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #441 = ATOMIC_RMW16_U_XOR_I64_A32_S
    { 440,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	206,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #440 = ATOMIC_RMW16_U_XOR_I64_A32
    { 439,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #439 = ATOMIC_RMW16_U_XOR_I32_A64_S
    { 438,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	201,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #438 = ATOMIC_RMW16_U_XOR_I32_A64
    { 437,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #437 = ATOMIC_RMW16_U_XOR_I32_A32_S
    { 436,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	196,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #436 = ATOMIC_RMW16_U_XOR_I32_A32
    { 435,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #435 = ATOMIC_RMW16_U_XCHG_I64_A64_S
    { 434,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	211,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #434 = ATOMIC_RMW16_U_XCHG_I64_A64
    { 433,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #433 = ATOMIC_RMW16_U_XCHG_I64_A32_S
    { 432,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	206,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #432 = ATOMIC_RMW16_U_XCHG_I64_A32
    { 431,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #431 = ATOMIC_RMW16_U_XCHG_I32_A64_S
    { 430,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	201,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #430 = ATOMIC_RMW16_U_XCHG_I32_A64
    { 429,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #429 = ATOMIC_RMW16_U_XCHG_I32_A32_S
    { 428,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	196,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #428 = ATOMIC_RMW16_U_XCHG_I32_A32
    { 427,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #427 = ATOMIC_RMW16_U_SUB_I64_A64_S
    { 426,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	211,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #426 = ATOMIC_RMW16_U_SUB_I64_A64
    { 425,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #425 = ATOMIC_RMW16_U_SUB_I64_A32_S
    { 424,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	206,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #424 = ATOMIC_RMW16_U_SUB_I64_A32
    { 423,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #423 = ATOMIC_RMW16_U_SUB_I32_A64_S
    { 422,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	201,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #422 = ATOMIC_RMW16_U_SUB_I32_A64
    { 421,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #421 = ATOMIC_RMW16_U_SUB_I32_A32_S
    { 420,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	196,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #420 = ATOMIC_RMW16_U_SUB_I32_A32
    { 419,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #419 = ATOMIC_RMW16_U_OR_I64_A64_S
    { 418,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	211,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #418 = ATOMIC_RMW16_U_OR_I64_A64
    { 417,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #417 = ATOMIC_RMW16_U_OR_I64_A32_S
    { 416,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	206,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #416 = ATOMIC_RMW16_U_OR_I64_A32
    { 415,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #415 = ATOMIC_RMW16_U_OR_I32_A64_S
    { 414,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	201,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #414 = ATOMIC_RMW16_U_OR_I32_A64
    { 413,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #413 = ATOMIC_RMW16_U_OR_I32_A32_S
    { 412,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	196,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #412 = ATOMIC_RMW16_U_OR_I32_A32
    { 411,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #411 = ATOMIC_RMW16_U_CMPXCHG_I64_A64_S
    { 410,	6,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	234,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #410 = ATOMIC_RMW16_U_CMPXCHG_I64_A64
    { 409,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #409 = ATOMIC_RMW16_U_CMPXCHG_I64_A32_S
    { 408,	6,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	228,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #408 = ATOMIC_RMW16_U_CMPXCHG_I64_A32
    { 407,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #407 = ATOMIC_RMW16_U_CMPXCHG_I32_A64_S
    { 406,	6,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	222,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #406 = ATOMIC_RMW16_U_CMPXCHG_I32_A64
    { 405,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #405 = ATOMIC_RMW16_U_CMPXCHG_I32_A32_S
    { 404,	6,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	216,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #404 = ATOMIC_RMW16_U_CMPXCHG_I32_A32
    { 403,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #403 = ATOMIC_RMW16_U_AND_I64_A64_S
    { 402,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	211,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #402 = ATOMIC_RMW16_U_AND_I64_A64
    { 401,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #401 = ATOMIC_RMW16_U_AND_I64_A32_S
    { 400,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	206,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #400 = ATOMIC_RMW16_U_AND_I64_A32
    { 399,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #399 = ATOMIC_RMW16_U_AND_I32_A64_S
    { 398,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	201,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #398 = ATOMIC_RMW16_U_AND_I32_A64
    { 397,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #397 = ATOMIC_RMW16_U_AND_I32_A32_S
    { 396,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	196,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #396 = ATOMIC_RMW16_U_AND_I32_A32
    { 395,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #395 = ATOMIC_RMW16_U_ADD_I64_A64_S
    { 394,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	211,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #394 = ATOMIC_RMW16_U_ADD_I64_A64
    { 393,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #393 = ATOMIC_RMW16_U_ADD_I64_A32_S
    { 392,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	206,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #392 = ATOMIC_RMW16_U_ADD_I64_A32
    { 391,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #391 = ATOMIC_RMW16_U_ADD_I32_A64_S
    { 390,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	201,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #390 = ATOMIC_RMW16_U_ADD_I32_A64
    { 389,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #389 = ATOMIC_RMW16_U_ADD_I32_A32_S
    { 388,	5,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	196,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #388 = ATOMIC_RMW16_U_ADD_I32_A32
    { 387,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #387 = ATOMIC_LOAD_I64_A64_S
    { 386,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	192,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #386 = ATOMIC_LOAD_I64_A64
    { 385,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #385 = ATOMIC_LOAD_I64_A32_S
    { 384,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	188,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #384 = ATOMIC_LOAD_I64_A32
    { 383,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #383 = ATOMIC_LOAD_I32_A64_S
    { 382,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	182,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #382 = ATOMIC_LOAD_I32_A64
    { 381,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #381 = ATOMIC_LOAD_I32_A32_S
    { 380,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	176,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #380 = ATOMIC_LOAD_I32_A32
    { 379,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #379 = ATOMIC_LOAD8_U_I64_A64_S
    { 378,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	192,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #378 = ATOMIC_LOAD8_U_I64_A64
    { 377,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #377 = ATOMIC_LOAD8_U_I64_A32_S
    { 376,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	188,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #376 = ATOMIC_LOAD8_U_I64_A32
    { 375,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #375 = ATOMIC_LOAD8_U_I32_A64_S
    { 374,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	182,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #374 = ATOMIC_LOAD8_U_I32_A64
    { 373,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #373 = ATOMIC_LOAD8_U_I32_A32_S
    { 372,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	176,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #372 = ATOMIC_LOAD8_U_I32_A32
    { 371,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #371 = ATOMIC_LOAD32_U_I64_A64_S
    { 370,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	192,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #370 = ATOMIC_LOAD32_U_I64_A64
    { 369,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #369 = ATOMIC_LOAD32_U_I64_A32_S
    { 368,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	188,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #368 = ATOMIC_LOAD32_U_I64_A32
    { 367,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #367 = ATOMIC_LOAD16_U_I64_A64_S
    { 366,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	192,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #366 = ATOMIC_LOAD16_U_I64_A64
    { 365,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #365 = ATOMIC_LOAD16_U_I64_A32_S
    { 364,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	188,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #364 = ATOMIC_LOAD16_U_I64_A32
    { 363,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	186,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #363 = ATOMIC_LOAD16_U_I32_A64_S
    { 362,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	182,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #362 = ATOMIC_LOAD16_U_I32_A64
    { 361,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	180,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #361 = ATOMIC_LOAD16_U_I32_A32_S
    { 360,	4,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	176,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #360 = ATOMIC_LOAD16_U_I32_A32
    { 359,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #359 = ATOMIC_FENCE_S
    { 358,	1,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #358 = ATOMIC_FENCE
    { 357,	1,	0,	0,	0,	1,	0,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #357 = ARGUMENT_v8i16_S
    { 356,	2,	1,	0,	0,	1,	0,	WebAssemblyImpOpBase + 3,	174,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #356 = ARGUMENT_v8i16
    { 355,	1,	0,	0,	0,	1,	0,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #355 = ARGUMENT_v4i32_S
    { 354,	2,	1,	0,	0,	1,	0,	WebAssemblyImpOpBase + 3,	174,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #354 = ARGUMENT_v4i32
    { 353,	1,	0,	0,	0,	1,	0,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #353 = ARGUMENT_v4f32_S
    { 352,	2,	1,	0,	0,	1,	0,	WebAssemblyImpOpBase + 3,	174,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #352 = ARGUMENT_v4f32
    { 351,	1,	0,	0,	0,	1,	0,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #351 = ARGUMENT_v2i64_S
    { 350,	2,	1,	0,	0,	1,	0,	WebAssemblyImpOpBase + 3,	174,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #350 = ARGUMENT_v2i64
    { 349,	1,	0,	0,	0,	1,	0,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #349 = ARGUMENT_v2f64_S
    { 348,	2,	1,	0,	0,	1,	0,	WebAssemblyImpOpBase + 3,	174,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #348 = ARGUMENT_v2f64
    { 347,	1,	0,	0,	0,	1,	0,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #347 = ARGUMENT_v16i8_S
    { 346,	2,	1,	0,	0,	1,	0,	WebAssemblyImpOpBase + 3,	174,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #346 = ARGUMENT_v16i8
    { 345,	1,	0,	0,	0,	1,	0,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #345 = ARGUMENT_i64_S
    { 344,	2,	1,	0,	0,	1,	0,	WebAssemblyImpOpBase + 3,	172,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #344 = ARGUMENT_i64
    { 343,	1,	0,	0,	0,	1,	0,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #343 = ARGUMENT_i32_S
    { 342,	2,	1,	0,	0,	1,	0,	WebAssemblyImpOpBase + 3,	170,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #342 = ARGUMENT_i32
    { 341,	1,	0,	0,	0,	1,	0,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #341 = ARGUMENT_funcref_S
    { 340,	2,	1,	0,	0,	1,	0,	WebAssemblyImpOpBase + 3,	168,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #340 = ARGUMENT_funcref
    { 339,	1,	0,	0,	0,	1,	0,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #339 = ARGUMENT_f64_S
    { 338,	2,	1,	0,	0,	1,	0,	WebAssemblyImpOpBase + 3,	166,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #338 = ARGUMENT_f64
    { 337,	1,	0,	0,	0,	1,	0,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #337 = ARGUMENT_f32_S
    { 336,	2,	1,	0,	0,	1,	0,	WebAssemblyImpOpBase + 3,	164,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #336 = ARGUMENT_f32
    { 335,	1,	0,	0,	0,	1,	0,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #335 = ARGUMENT_externref_S
    { 334,	2,	1,	0,	0,	1,	0,	WebAssemblyImpOpBase + 3,	162,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #334 = ARGUMENT_externref
    { 333,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #333 = ANYTRUE_S
    { 332,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	160,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #332 = ANYTRUE
    { 331,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #331 = AND_S
    { 330,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #330 = AND_I64_S
    { 329,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	157,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #329 = AND_I64
    { 328,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #328 = AND_I32_S
    { 327,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	154,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #327 = AND_I32
    { 326,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #326 = ANDNOT_S
    { 325,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #325 = ANDNOT
    { 324,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #324 = AND
    { 323,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #323 = ALLTRUE_I8x16_S
    { 322,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	160,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #322 = ALLTRUE_I8x16
    { 321,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #321 = ALLTRUE_I64x2_S
    { 320,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	160,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #320 = ALLTRUE_I64x2
    { 319,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #319 = ALLTRUE_I32x4_S
    { 318,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	160,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #318 = ALLTRUE_I32x4
    { 317,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #317 = ALLTRUE_I16x8_S
    { 316,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	160,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #316 = ALLTRUE_I16x8
    { 315,	2,	0,	0,	0,	2,	2,	WebAssemblyImpOpBase + 4,	21,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #315 = ADJCALLSTACKUP_S
    { 314,	2,	0,	0,	0,	2,	2,	WebAssemblyImpOpBase + 4,	21,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #314 = ADJCALLSTACKUP
    { 313,	2,	0,	0,	0,	2,	2,	WebAssemblyImpOpBase + 4,	21,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #313 = ADJCALLSTACKDOWN_S
    { 312,	2,	0,	0,	0,	2,	2,	WebAssemblyImpOpBase + 4,	21,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #312 = ADJCALLSTACKDOWN
    { 311,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #311 = ADD_SAT_U_I8x16_S
    { 310,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #310 = ADD_SAT_U_I8x16
    { 309,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #309 = ADD_SAT_U_I16x8_S
    { 308,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #308 = ADD_SAT_U_I16x8
    { 307,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #307 = ADD_SAT_S_I8x16_S
    { 306,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #306 = ADD_SAT_S_I8x16
    { 305,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #305 = ADD_SAT_S_I16x8_S
    { 304,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #304 = ADD_SAT_S_I16x8
    { 303,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #303 = ADD_I8x16_S
    { 302,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #302 = ADD_I8x16
    { 301,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #301 = ADD_I64x2_S
    { 300,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #300 = ADD_I64x2
    { 299,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #299 = ADD_I64_S
    { 298,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	157,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #298 = ADD_I64
    { 297,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #297 = ADD_I32x4_S
    { 296,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #296 = ADD_I32x4
    { 295,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #295 = ADD_I32_S
    { 294,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	154,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #294 = ADD_I32
    { 293,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #293 = ADD_I16x8_S
    { 292,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #292 = ADD_I16x8
    { 291,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #291 = ADD_F64x2_S
    { 290,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #290 = ADD_F64x2
    { 289,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #289 = ADD_F64_S
    { 288,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	151,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #288 = ADD_F64
    { 287,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #287 = ADD_F32x4_S
    { 286,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	148,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #286 = ADD_F32x4
    { 285,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #285 = ADD_F32_S
    { 284,	3,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	145,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #284 = ADD_F32
    { 283,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #283 = ABS_I8x16_S
    { 282,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #282 = ABS_I8x16
    { 281,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #281 = ABS_I64x2_S
    { 280,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #280 = ABS_I64x2
    { 279,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #279 = ABS_I32x4_S
    { 278,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #278 = ABS_I32x4
    { 277,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #277 = ABS_I16x8_S
    { 276,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #276 = ABS_I16x8
    { 275,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #275 = ABS_F64x2_S
    { 274,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #274 = ABS_F64x2
    { 273,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #273 = ABS_F64_S
    { 272,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	143,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #272 = ABS_F64
    { 271,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #271 = ABS_F32x4_S
    { 270,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	141,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #270 = ABS_F32x4
    { 269,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #269 = ABS_F32_S
    { 268,	2,	1,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	139,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #268 = ABS_F32
    { 267,	0,	0,	0,	0,	2,	1,	WebAssemblyImpOpBase + 0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::VariadicOpsAreDefs), 0x0ULL },  // Inst #267 = RET_CALL_RESULTS_S
    { 266,	0,	0,	0,	0,	2,	1,	WebAssemblyImpOpBase + 0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::VariadicOpsAreDefs), 0x0ULL },  // Inst #266 = RET_CALL_RESULTS
    { 265,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #265 = COMPILER_FENCE_S
    { 264,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #264 = COMPILER_FENCE
    { 263,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::EHScopeReturn)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #263 = CLEANUPRET_S
    { 262,	0,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::EHScopeReturn)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #262 = CLEANUPRET
    { 261,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	137,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::EHScopeReturn)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #261 = CATCHRET_S
    { 260,	2,	0,	0,	0,	0,	1,	WebAssemblyImpOpBase + 3,	137,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::EHScopeReturn)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #260 = CATCHRET
    { 259,	0,	0,	0,	0,	2,	1,	WebAssemblyImpOpBase + 0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::VariadicOpsAreDefs), 0x0ULL },  // Inst #259 = CALL_RESULTS_S
    { 258,	0,	0,	0,	0,	2,	1,	WebAssemblyImpOpBase + 0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::VariadicOpsAreDefs), 0x0ULL },  // Inst #258 = CALL_RESULTS
    { 257,	1,	0,	0,	0,	2,	1,	WebAssemblyImpOpBase + 0,	136,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #257 = CALL_PARAMS_S
    { 256,	1,	0,	0,	0,	2,	1,	WebAssemblyImpOpBase + 0,	136,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #256 = CALL_PARAMS
    { 255,	4,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	132,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #255 = G_UBFX
    { 254,	4,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	132,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #254 = G_SBFX
    { 253,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	56,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #253 = G_VECREDUCE_UMIN
    { 252,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	56,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #252 = G_VECREDUCE_UMAX
    { 251,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	56,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #251 = G_VECREDUCE_SMIN
    { 250,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	56,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #250 = G_VECREDUCE_SMAX
    { 249,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	56,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #249 = G_VECREDUCE_XOR
    { 248,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	56,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #248 = G_VECREDUCE_OR
    { 247,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	56,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #247 = G_VECREDUCE_AND
    { 246,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	56,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #246 = G_VECREDUCE_MUL
    { 245,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	56,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #245 = G_VECREDUCE_ADD
    { 244,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	56,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #244 = G_VECREDUCE_FMIN
    { 243,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	56,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #243 = G_VECREDUCE_FMAX
    { 242,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	56,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #242 = G_VECREDUCE_FMUL
    { 241,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	56,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #241 = G_VECREDUCE_FADD
    { 240,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	119,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #240 = G_VECREDUCE_SEQ_FMUL
    { 239,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	119,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #239 = G_VECREDUCE_SEQ_FADD
    { 238,	3,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	53,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #238 = G_BZERO
    { 237,	4,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	128,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #237 = G_MEMSET
    { 236,	4,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	128,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #236 = G_MEMMOVE
    { 235,	3,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	119,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #235 = G_MEMCPY_INLINE
    { 234,	4,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	128,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #234 = G_MEMCPY
    { 233,	2,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	126,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::Convergent), 0x0ULL },  // Inst #233 = G_WRITE_REGISTER
    { 232,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	51,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::Convergent), 0x0ULL },  // Inst #232 = G_READ_REGISTER
    { 231,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	92,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #231 = G_STRICT_FLDEXP
    { 230,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	62,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #230 = G_STRICT_FSQRT
    { 229,	4,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	46,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #229 = G_STRICT_FMA
    { 228,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	43,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #228 = G_STRICT_FREM
    { 227,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	43,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #227 = G_STRICT_FDIV
    { 226,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	43,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #226 = G_STRICT_FMUL
    { 225,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	43,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #225 = G_STRICT_FSUB
    { 224,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	43,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #224 = G_STRICT_FADD
    { 223,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	64,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #223 = G_DYN_STACKALLOC
    { 222,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	51,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #222 = G_JUMP_TABLE
    { 221,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	51,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #221 = G_BLOCK_ADDR
    { 220,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	56,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #220 = G_ADDRSPACE_CAST
    { 219,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	62,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #219 = G_FNEARBYINT
    { 218,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	62,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #218 = G_FRINT
    { 217,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	62,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #217 = G_FFLOOR
    { 216,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	62,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #216 = G_FSQRT
    { 215,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	62,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #215 = G_FSIN
    { 214,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	62,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #214 = G_FCOS
    { 213,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	62,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #213 = G_FCEIL
    { 212,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	62,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #212 = G_BITREVERSE
    { 211,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	62,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #211 = G_BSWAP
    { 210,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	56,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #210 = G_CTPOP
    { 209,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	56,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #209 = G_CTLZ_ZERO_UNDEF
    { 208,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	56,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #208 = G_CTLZ
    { 207,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	56,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #207 = G_CTTZ_ZERO_UNDEF
    { 206,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	56,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #206 = G_CTTZ
    { 205,	4,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	122,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #205 = G_SHUFFLE_VECTOR
    { 204,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	119,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #204 = G_EXTRACT_VECTOR_ELT
    { 203,	4,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	115,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #203 = G_INSERT_VECTOR_ELT
    { 202,	3,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	112,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #202 = G_BRJT
    { 201,	1,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #201 = G_BR
    { 200,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	56,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #200 = G_LLROUND
    { 199,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	56,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #199 = G_LROUND
    { 198,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	62,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #198 = G_ABS
    { 197,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	43,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #197 = G_UMAX
    { 196,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	43,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #196 = G_UMIN
    { 195,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	43,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #195 = G_SMAX
    { 194,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	43,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #194 = G_SMIN
    { 193,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	92,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #193 = G_PTRMASK
    { 192,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	92,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #192 = G_PTR_ADD
    { 191,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	43,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #191 = G_FMAXIMUM
    { 190,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	43,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #190 = G_FMINIMUM
    { 189,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	43,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #189 = G_FMAXNUM_IEEE
    { 188,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	43,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #188 = G_FMINNUM_IEEE
    { 187,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	43,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #187 = G_FMAXNUM
    { 186,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	43,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #186 = G_FMINNUM
    { 185,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	62,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #185 = G_FCANONICALIZE
    { 184,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	89,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #184 = G_IS_FPCLASS
    { 183,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	92,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #183 = G_FCOPYSIGN
    { 182,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	62,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #182 = G_FABS
    { 181,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	56,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #181 = G_UITOFP
    { 180,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	56,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #180 = G_SITOFP
    { 179,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	56,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #179 = G_FPTOUI
    { 178,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	56,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #178 = G_FPTOSI
    { 177,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	56,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #177 = G_FPTRUNC
    { 176,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	56,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #176 = G_FPEXT
    { 175,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	62,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #175 = G_FNEG
    { 174,	3,	2,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	86,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #174 = G_FFREXP
    { 173,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	92,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #173 = G_FLDEXP
    { 172,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	62,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #172 = G_FLOG10
    { 171,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	62,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #171 = G_FLOG2
    { 170,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	62,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #170 = G_FLOG
    { 169,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	62,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #169 = G_FEXP2
    { 168,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	62,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #168 = G_FEXP
    { 167,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	92,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #167 = G_FPOWI
    { 166,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	43,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #166 = G_FPOW
    { 165,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	43,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #165 = G_FREM
    { 164,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	43,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #164 = G_FDIV
    { 163,	4,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	46,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #163 = G_FMAD
    { 162,	4,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	46,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #162 = G_FMA
    { 161,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	43,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #161 = G_FMUL
    { 160,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	43,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #160 = G_FSUB
    { 159,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	43,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #159 = G_FADD
    { 158,	4,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	108,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #158 = G_UDIVFIXSAT
    { 157,	4,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	108,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #157 = G_SDIVFIXSAT
    { 156,	4,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	108,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #156 = G_UDIVFIX
    { 155,	4,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	108,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #155 = G_SDIVFIX
    { 154,	4,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	108,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #154 = G_UMULFIXSAT
    { 153,	4,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	108,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #153 = G_SMULFIXSAT
    { 152,	4,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	108,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #152 = G_UMULFIX
    { 151,	4,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	108,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #151 = G_SMULFIX
    { 150,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	92,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #150 = G_SSHLSAT
    { 149,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	92,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #149 = G_USHLSAT
    { 148,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	43,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #148 = G_SSUBSAT
    { 147,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	43,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #147 = G_USUBSAT
    { 146,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	43,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #146 = G_SADDSAT
    { 145,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	43,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #145 = G_UADDSAT
    { 144,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	43,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #144 = G_SMULH
    { 143,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	43,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #143 = G_UMULH
    { 142,	4,	2,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	82,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #142 = G_SMULO
    { 141,	4,	2,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	82,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #141 = G_UMULO
    { 140,	5,	2,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	103,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #140 = G_SSUBE
    { 139,	4,	2,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	82,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #139 = G_SSUBO
    { 138,	5,	2,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	103,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #138 = G_SADDE
    { 137,	4,	2,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	82,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #137 = G_SADDO
    { 136,	5,	2,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	103,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #136 = G_USUBE
    { 135,	4,	2,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	82,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #135 = G_USUBO
    { 134,	5,	2,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	103,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #134 = G_UADDE
    { 133,	4,	2,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	82,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #133 = G_UADDO
    { 132,	4,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	82,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #132 = G_SELECT
    { 131,	4,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	99,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #131 = G_FCMP
    { 130,	4,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	99,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #130 = G_ICMP
    { 129,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	92,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #129 = G_ROTL
    { 128,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	92,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #128 = G_ROTR
    { 127,	4,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	95,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #127 = G_FSHR
    { 126,	4,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	95,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #126 = G_FSHL
    { 125,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	92,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #125 = G_ASHR
    { 124,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	92,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #124 = G_LSHR
    { 123,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	92,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #123 = G_SHL
    { 122,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	56,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #122 = G_ZEXT
    { 121,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	40,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #121 = G_SEXT_INREG
    { 120,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	56,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #120 = G_SEXT
    { 119,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	89,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #119 = G_VAARG
    { 118,	1,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	50,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #118 = G_VASTART
    { 117,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	51,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #117 = G_FCONSTANT
    { 116,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	51,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #116 = G_CONSTANT
    { 115,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	56,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #115 = G_TRUNC
    { 114,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	56,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #114 = G_ANYEXT
    { 113,	1,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::Convergent), 0x0ULL },  // Inst #113 = G_INTRINSIC_W_SIDE_EFFECTS
    { 112,	1,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::Convergent), 0x0ULL },  // Inst #112 = G_INTRINSIC
    { 111,	0,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	1,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #111 = G_INVOKE_REGION_START
    { 110,	1,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	50,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #110 = G_BRINDIRECT
    { 109,	2,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	51,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #109 = G_BRCOND
    { 108,	2,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	21,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #108 = G_FENCE
    { 107,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	86,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #107 = G_ATOMICRMW_UDEC_WRAP
    { 106,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	86,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #106 = G_ATOMICRMW_UINC_WRAP
    { 105,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	86,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #105 = G_ATOMICRMW_FMIN
    { 104,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	86,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #104 = G_ATOMICRMW_FMAX
    { 103,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	86,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #103 = G_ATOMICRMW_FSUB
    { 102,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	86,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #102 = G_ATOMICRMW_FADD
    { 101,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	86,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #101 = G_ATOMICRMW_UMIN
    { 100,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	86,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #100 = G_ATOMICRMW_UMAX
    { 99,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	86,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #99 = G_ATOMICRMW_MIN
    { 98,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	86,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #98 = G_ATOMICRMW_MAX
    { 97,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	86,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #97 = G_ATOMICRMW_XOR
    { 96,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	86,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #96 = G_ATOMICRMW_OR
    { 95,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	86,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #95 = G_ATOMICRMW_NAND
    { 94,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	86,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #94 = G_ATOMICRMW_AND
    { 93,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	86,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #93 = G_ATOMICRMW_SUB
    { 92,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	86,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #92 = G_ATOMICRMW_ADD
    { 91,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	86,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #91 = G_ATOMICRMW_XCHG
    { 90,	4,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	82,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #90 = G_ATOMIC_CMPXCHG
    { 89,	5,	2,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	77,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #89 = G_ATOMIC_CMPXCHG_WITH_SUCCESS
    { 88,	5,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	72,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #88 = G_INDEXED_STORE
    { 87,	2,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	56,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #87 = G_STORE
    { 86,	5,	2,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	67,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #86 = G_INDEXED_ZEXTLOAD
    { 85,	5,	2,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	67,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #85 = G_INDEXED_SEXTLOAD
    { 84,	5,	2,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	67,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #84 = G_INDEXED_LOAD
    { 83,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	56,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #83 = G_ZEXTLOAD
    { 82,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	56,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #82 = G_SEXTLOAD
    { 81,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	56,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #81 = G_LOAD
    { 80,	1,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	50,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #80 = G_READCYCLECOUNTER
    { 79,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	62,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #79 = G_INTRINSIC_ROUNDEVEN
    { 78,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	56,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #78 = G_INTRINSIC_LRINT
    { 77,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	62,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #77 = G_INTRINSIC_ROUND
    { 76,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	62,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #76 = G_INTRINSIC_TRUNC
    { 75,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	64,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #75 = G_INTRINSIC_FPTRUNC_ROUND
    { 74,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	62,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #74 = G_CONSTANT_FOLD_BARRIER
    { 73,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	62,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #73 = G_FREEZE
    { 72,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	56,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #72 = G_BITCAST
    { 71,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	56,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #71 = G_INTTOPTR
    { 70,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	56,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #70 = G_PTRTOINT
    { 69,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	56,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #69 = G_CONCAT_VECTORS
    { 68,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	56,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #68 = G_BUILD_VECTOR_TRUNC
    { 67,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	56,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #67 = G_BUILD_VECTOR
    { 66,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	56,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #66 = G_MERGE_VALUES
    { 65,	4,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	58,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #65 = G_INSERT
    { 64,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	56,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #64 = G_UNMERGE_VALUES
    { 63,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	53,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #63 = G_EXTRACT
    { 62,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	51,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #62 = G_CONSTANT_POOL
    { 61,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	51,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #61 = G_GLOBAL_VALUE
    { 60,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	51,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #60 = G_FRAME_INDEX
    { 59,	1,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	50,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #59 = G_PHI
    { 58,	1,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	50,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #58 = G_IMPLICIT_DEF
    { 57,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	43,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #57 = G_XOR
    { 56,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	43,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #56 = G_OR
    { 55,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	43,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #55 = G_AND
    { 54,	4,	2,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	46,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #54 = G_UDIVREM
    { 53,	4,	2,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	46,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #53 = G_SDIVREM
    { 52,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	43,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #52 = G_UREM
    { 51,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	43,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #51 = G_SREM
    { 50,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	43,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #50 = G_UDIV
    { 49,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	43,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #49 = G_SDIV
    { 48,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	43,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #48 = G_MUL
    { 47,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	43,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #47 = G_SUB
    { 46,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	43,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #46 = G_ADD
    { 45,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	40,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #45 = G_ASSERT_ALIGN
    { 44,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	40,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #44 = G_ASSERT_ZEXT
    { 43,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	40,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #43 = G_ASSERT_SEXT
    { 42,	0,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #42 = MEMBARRIER
    { 41,	0,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #41 = ICALL_BRANCH_FUNNEL
    { 40,	3,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	37,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #40 = PATCHABLE_TYPED_EVENT_CALL
    { 39,	2,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	35,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #39 = PATCHABLE_EVENT_CALL
    { 38,	0,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #38 = PATCHABLE_TAIL_CALL
    { 37,	0,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #37 = PATCHABLE_FUNCTION_EXIT
    { 36,	0,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #36 = PATCHABLE_RET
    { 35,	0,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #35 = PATCHABLE_FUNCTION_ENTER
    { 34,	0,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #34 = PATCHABLE_OP
    { 33,	1,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #33 = FAULTING_OP
    { 32,	2,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	33,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #32 = LOCAL_ESCAPE
    { 31,	0,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #31 = STATEPOINT
    { 30,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	30,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #30 = PREALLOCATED_ARG
    { 29,	1,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #29 = PREALLOCATED_SETUP
    { 28,	1,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	29,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #28 = LOAD_STACK_GUARD
    { 27,	6,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	23,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #27 = PATCHPOINT
    { 26,	0,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #26 = FENTRY_CALL
    { 25,	2,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	21,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #25 = STACKMAP
    { 24,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	19,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #24 = ARITH_FENCE
    { 23,	4,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	15,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #23 = PSEUDO_PROBE
    { 22,	1,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #22 = LIFETIME_END
    { 21,	1,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #21 = LIFETIME_START
    { 20,	0,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #20 = BUNDLE
    { 19,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	13,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #19 = COPY
    { 18,	2,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	13,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #18 = REG_SEQUENCE
    { 17,	1,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #17 = DBG_LABEL
    { 16,	0,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #16 = DBG_PHI
    { 15,	0,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #15 = DBG_INSTR_REF
    { 14,	0,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #14 = DBG_VALUE_LIST
    { 13,	0,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #13 = DBG_VALUE
    { 12,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	2,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #12 = COPY_TO_REGCLASS
    { 11,	4,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	9,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #11 = SUBREG_TO_REG
    { 10,	1,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #10 = IMPLICIT_DEF
    { 9,	4,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	5,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #9 = INSERT_SUBREG
    { 8,	3,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	2,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #8 = EXTRACT_SUBREG
    { 7,	0,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #7 = KILL
    { 6,	1,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #6 = ANNOTATION_LABEL
    { 5,	1,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #5 = GC_LABEL
    { 4,	1,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #4 = EH_LABEL
    { 3,	1,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #3 = CFI_INSTRUCTION
    { 2,	0,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #2 = INLINEASM_BR
    { 1,	0,	0,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #1 = INLINEASM
    { 0,	1,	1,	0,	0,	0,	0,	WebAssemblyImpOpBase + 0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL },  // Inst #0 = PHI
  }, {
    /* 0 */ { -1, 0, MCOI::OPERAND_UNKNOWN, 0 },
    /* 1 */
    /* 1 */ { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 },
    /* 2 */ { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 },
    /* 5 */ { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 },
    /* 9 */ { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 },
    /* 13 */ { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 },
    /* 15 */ { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 },
    /* 19 */ { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, MCOI_TIED_TO(0) },
    /* 21 */ { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 },
    /* 23 */ { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 },
    /* 29 */ { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 },
    /* 30 */ { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 },
    /* 33 */ { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 },
    /* 35 */ { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 },
    /* 37 */ { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 },
    /* 40 */ { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_IMM_0, 0 },
    /* 43 */ { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 },
    /* 46 */ { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 },
    /* 50 */ { -1, 0, MCOI::OPERAND_GENERIC_0, 0 },
    /* 51 */ { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 },
    /* 53 */ { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_IMM_0, 0 },
    /* 56 */ { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 },
    /* 58 */ { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_IMM_0, 0 },
    /* 62 */ { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 },
    /* 64 */ { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 },
    /* 67 */ { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 },
    /* 72 */ { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 },
    /* 77 */ { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 },
    /* 82 */ { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 },
    /* 86 */ { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 },
    /* 89 */ { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 },
    /* 92 */ { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 },
    /* 95 */ { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 },
    /* 99 */ { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 },
    /* 103 */ { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 },
    /* 108 */ { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_IMM_0, 0 },
    /* 112 */ { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 },
    /* 115 */ { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 },
    /* 119 */ { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 },
    /* 122 */ { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 },
    /* 126 */ { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 },
    /* 128 */ { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_IMM_0, 0 },
    /* 132 */ { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 },
    /* 136 */ { -1, 0, WebAssembly::OPERAND_FUNCTION32, 0 },
    /* 137 */ { -1, 0, WebAssembly::OPERAND_BASIC_BLOCK, 0 }, { -1, 0, WebAssembly::OPERAND_BASIC_BLOCK, 0 },
    /* 139 */ { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 141 */ { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 143 */ { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 145 */ { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 148 */ { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 151 */ { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 154 */ { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 157 */ { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 160 */ { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 162 */ { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 },
    /* 164 */ { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 },
    /* 166 */ { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 },
    /* 168 */ { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 },
    /* 170 */ { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 },
    /* 172 */ { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 },
    /* 174 */ { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 },
    /* 176 */ { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 180 */ { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 },
    /* 182 */ { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 186 */ { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 },
    /* 188 */ { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 192 */ { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 196 */ { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 201 */ { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 206 */ { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 211 */ { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 216 */ { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 222 */ { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 228 */ { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 234 */ { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 240 */ { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 244 */ { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 248 */ { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 252 */ { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 256 */ { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 260 */ { -1, 0, WebAssembly::OPERAND_SIGNATURE, 0 },
    /* 261 */ { -1, 0, WebAssembly::OPERAND_BASIC_BLOCK, 0 },
    /* 262 */ { -1, 0, WebAssembly::OPERAND_BASIC_BLOCK, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 264 */ { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 265 */ { -1, 0, WebAssembly::OPERAND_BRLIST, 0 },
    /* 266 */ { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 267 */ { -1, 0, WebAssembly::OPERAND_TYPEINDEX, 0 }, { -1, 0, WebAssembly::OPERAND_TABLE, 0 },
    /* 269 */ { -1, 0, WebAssembly::OPERAND_TAG, 0 },
    /* 270 */ { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 272 */ { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 274 */ { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_F32IMM, 0 },
    /* 276 */ { -1, 0, WebAssembly::OPERAND_F32IMM, 0 },
    /* 277 */ { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_F64IMM, 0 },
    /* 279 */ { -1, 0, WebAssembly::OPERAND_F64IMM, 0 },
    /* 280 */ { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_I32IMM, 0 },
    /* 282 */ { -1, 0, WebAssembly::OPERAND_I32IMM, 0 },
    /* 283 */ { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_I64IMM, 0 },
    /* 285 */ { -1, 0, WebAssembly::OPERAND_I64IMM, 0 },
    /* 286 */ { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_F32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_F32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_F32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_F32IMM, 0 },
    /* 291 */ { -1, 0, WebAssembly::OPERAND_F32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_F32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_F32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_F32IMM, 0 },
    /* 295 */ { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_F64IMM, 0 }, { -1, 0, WebAssembly::OPERAND_F64IMM, 0 },
    /* 298 */ { -1, 0, WebAssembly::OPERAND_F64IMM, 0 }, { -1, 0, WebAssembly::OPERAND_F64IMM, 0 },
    /* 300 */ { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 },
    /* 309 */ { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 },
    /* 317 */ { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I32IMM, 0 },
    /* 322 */ { -1, 0, WebAssembly::OPERAND_VEC_I32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I32IMM, 0 },
    /* 326 */ { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I64IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I64IMM, 0 },
    /* 329 */ { -1, 0, WebAssembly::OPERAND_VEC_I64IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I64IMM, 0 },
    /* 331 */ { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 },
    /* 348 */ { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 },
    /* 364 */ { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 366 */ { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 368 */ { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 369 */ { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 370 */ { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 371 */ { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 372 */ { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 373 */ { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 375 */ { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 378 */ { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 381 */ { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 384 */ { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 },
    /* 387 */ { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 },
    /* 388 */ { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 },
    /* 391 */ { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 },
    /* 394 */ { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 },
    /* 397 */ { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 399 */ { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 401 */ { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 403 */ { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 405 */ { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 407 */ { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 409 */ { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 411 */ { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 413 */ { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 415 */ { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 417 */ { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 },
    /* 419 */ { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 },
    /* 420 */ { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 },
    /* 422 */ { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 },
    /* 424 */ { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 },
    /* 426 */ { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 },
    /* 428 */ { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 },
    /* 430 */ { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 },
    /* 432 */ { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 434 */ { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 436 */ { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 438 */ { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 440 */ { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 442 */ { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 444 */ { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 446 */ { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 448 */ { -1, 0, WebAssembly::OPERAND_SIGNATURE, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 450 */ { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 454 */ { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 458 */ { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 462 */ { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 466 */ { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 470 */ { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 474 */ { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 480 */ { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 },
    /* 483 */ { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 489 */ { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 },
    /* 492 */ { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 },
    /* 494 */ { -1, 0, WebAssembly::OPERAND_LOCAL, 0 },
    /* 495 */ { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 },
    /* 497 */ { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 },
    /* 499 */ { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 },
    /* 501 */ { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 },
    /* 503 */ { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 },
    /* 505 */ { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 },
    /* 507 */ { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 509 */ { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 511 */ { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 513 */ { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 515 */ { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 517 */ { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 519 */ { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 521 */ { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 524 */ { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 527 */ { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 530 */ { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 533 */ { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 536 */ { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 539 */ { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 542 */ { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 548 */ { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 554 */ { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 560 */ { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 566 */ { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 568 */ { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 570 */ { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 574 */ { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 578 */ { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 582 */ { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 586 */ { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 590 */ { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 594 */ { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 598 */ { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 602 */ { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 606 */ { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 610 */ { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 614 */ { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 617 */ { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 },
    /* 636 */ { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 638 */ { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 640 */ { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 642 */ { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 644 */ { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 648 */ { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 652 */ { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 656 */ { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 660 */ { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 665 */ { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 670 */ { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 674 */ { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 678 */ { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 683 */ { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, { -1, 0, WebAssembly::OPERAND_TABLE, 0 },
    /* 685 */ { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 689 */ { -1, 0, WebAssembly::OPERAND_TABLE, 0 },
    /* 690 */ { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 694 */ { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 697 */ { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 700 */ { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 704 */ { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 708 */ { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 711 */ { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 714 */ { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_TABLE, 0 },
    /* 716 */ { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 719 */ { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 722 */ { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 725 */ { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 728 */ { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 733 */ { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_I32IMM, 0 },
    /* 735 */ { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 739 */ { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 744 */ { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
    /* 748 */ { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 },
  }, {
    /* 0 */
    /* 0 */ WebAssembly::SP32, WebAssembly::SP64, WebAssembly::ARGUMENTS,
    /* 3 */ WebAssembly::ARGUMENTS,
    /* 4 */ WebAssembly::SP32, WebAssembly::SP64, WebAssembly::SP32, WebAssembly::SP64,
    /* 8 */ WebAssembly::VALUE_STACK, WebAssembly::VALUE_STACK,
  }
};

extern const char WebAssemblyInstrNameData[] = {
  /* 0 */ 'G', '_', 'F', 'L', 'O', 'G', '1', '0', 0,
  /* 9 */ 'L', 'O', 'A', 'D', '_', 'F', '3', '2', '_', 'A', '3', '2', 0,
  /* 22 */ 'S', 'T', 'O', 'R', 'E', '_', 'F', '3', '2', '_', 'A', '3', '2', 0,
  /* 36 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'T', 'O', 'R', 'E', '1', '6', '_', 'I', '3', '2', '_', 'A', '3', '2', 0,
  /* 59 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'T', 'O', 'R', 'E', '8', '_', 'I', '3', '2', '_', 'A', '3', '2', 0,
  /* 81 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'S', 'U', 'B', '_', 'I', '3', '2', '_', 'A', '3', '2', 0,
  /* 108 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'S', 'U', 'B', '_', 'I', '3', '2', '_', 'A', '3', '2', 0,
  /* 134 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'S', 'U', 'B', '_', 'I', '3', '2', '_', 'A', '3', '2', 0,
  /* 157 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'I', '3', '2', '_', 'A', '3', '2', 0,
  /* 177 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'A', 'D', 'D', '_', 'I', '3', '2', '_', 'A', '3', '2', 0,
  /* 204 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'A', 'D', 'D', '_', 'I', '3', '2', '_', 'A', '3', '2', 0,
  /* 230 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'A', 'D', 'D', '_', 'I', '3', '2', '_', 'A', '3', '2', 0,
  /* 253 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'A', 'N', 'D', '_', 'I', '3', '2', '_', 'A', '3', '2', 0,
  /* 280 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'A', 'N', 'D', '_', 'I', '3', '2', '_', 'A', '3', '2', 0,
  /* 306 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'A', 'N', 'D', '_', 'I', '3', '2', '_', 'A', '3', '2', 0,
  /* 329 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'T', 'O', 'R', 'E', '_', 'I', '3', '2', '_', 'A', '3', '2', 0,
  /* 350 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '_', 'I', '3', '2', '_', 'A', '3', '2', 0,
  /* 381 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '_', 'I', '3', '2', '_', 'A', '3', '2', 0,
  /* 411 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '_', 'I', '3', '2', '_', 'A', '3', '2', 0,
  /* 438 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'X', 'C', 'H', 'G', '_', 'I', '3', '2', '_', 'A', '3', '2', 0,
  /* 466 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'X', 'C', 'H', 'G', '_', 'I', '3', '2', '_', 'A', '3', '2', 0,
  /* 493 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'X', 'C', 'H', 'G', '_', 'I', '3', '2', '_', 'A', '3', '2', 0,
  /* 517 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'X', 'O', 'R', '_', 'I', '3', '2', '_', 'A', '3', '2', 0,
  /* 544 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'X', 'O', 'R', '_', 'I', '3', '2', '_', 'A', '3', '2', 0,
  /* 570 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'X', 'O', 'R', '_', 'I', '3', '2', '_', 'A', '3', '2', 0,
  /* 593 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'O', 'R', '_', 'I', '3', '2', '_', 'A', '3', '2', 0,
  /* 619 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'O', 'R', '_', 'I', '3', '2', '_', 'A', '3', '2', 0,
  /* 644 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'O', 'R', '_', 'I', '3', '2', '_', 'A', '3', '2', 0,
  /* 666 */ 'L', 'O', 'A', 'D', '1', '6', '_', 'S', '_', 'I', '3', '2', '_', 'A', '3', '2', 0,
  /* 683 */ 'L', 'O', 'A', 'D', '8', '_', 'S', '_', 'I', '3', '2', '_', 'A', '3', '2', 0,
  /* 699 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '1', '6', '_', 'U', '_', 'I', '3', '2', '_', 'A', '3', '2', 0,
  /* 723 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '8', '_', 'U', '_', 'I', '3', '2', '_', 'A', '3', '2', 0,
  /* 746 */ 'M', 'E', 'M', 'O', 'R', 'Y', '_', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'W', 'A', 'I', 'T', '3', '2', '_', 'A', '3', '2', 0,
  /* 771 */ 'L', 'O', 'A', 'D', '_', 'L', 'A', 'N', 'E', '_', 'I', '6', '4', 'x', '2', '_', 'A', '3', '2', 0,
  /* 791 */ 'S', 'T', 'O', 'R', 'E', '_', 'L', 'A', 'N', 'E', '_', 'I', '6', '4', 'x', '2', '_', 'A', '3', '2', 0,
  /* 812 */ 'L', 'O', 'A', 'D', '_', 'Z', 'E', 'R', 'O', '_', 'I', '6', '4', 'x', '2', '_', 'A', '3', '2', 0,
  /* 832 */ 'L', 'O', 'A', 'D', '_', 'E', 'X', 'T', 'E', 'N', 'D', '_', 'S', '_', 'I', '6', '4', 'x', '2', '_', 'A', '3', '2', 0,
  /* 856 */ 'L', 'O', 'A', 'D', '_', 'E', 'X', 'T', 'E', 'N', 'D', '_', 'U', '_', 'I', '6', '4', 'x', '2', '_', 'A', '3', '2', 0,
  /* 880 */ 'L', 'O', 'A', 'D', '_', 'F', '6', '4', '_', 'A', '3', '2', 0,
  /* 893 */ 'S', 'T', 'O', 'R', 'E', '_', 'F', '6', '4', '_', 'A', '3', '2', 0,
  /* 907 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'T', 'O', 'R', 'E', '3', '2', '_', 'I', '6', '4', '_', 'A', '3', '2', 0,
  /* 930 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'T', 'O', 'R', 'E', '1', '6', '_', 'I', '6', '4', '_', 'A', '3', '2', 0,
  /* 953 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'T', 'O', 'R', 'E', '8', '_', 'I', '6', '4', '_', 'A', '3', '2', 0,
  /* 975 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '3', '2', '_', 'U', '_', 'S', 'U', 'B', '_', 'I', '6', '4', '_', 'A', '3', '2', 0,
  /* 1002 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'S', 'U', 'B', '_', 'I', '6', '4', '_', 'A', '3', '2', 0,
  /* 1029 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'S', 'U', 'B', '_', 'I', '6', '4', '_', 'A', '3', '2', 0,
  /* 1055 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'S', 'U', 'B', '_', 'I', '6', '4', '_', 'A', '3', '2', 0,
  /* 1078 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'I', '6', '4', '_', 'A', '3', '2', 0,
  /* 1098 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '3', '2', '_', 'U', '_', 'A', 'D', 'D', '_', 'I', '6', '4', '_', 'A', '3', '2', 0,
  /* 1125 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'A', 'D', 'D', '_', 'I', '6', '4', '_', 'A', '3', '2', 0,
  /* 1152 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'A', 'D', 'D', '_', 'I', '6', '4', '_', 'A', '3', '2', 0,
  /* 1178 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'A', 'D', 'D', '_', 'I', '6', '4', '_', 'A', '3', '2', 0,
  /* 1201 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '3', '2', '_', 'U', '_', 'A', 'N', 'D', '_', 'I', '6', '4', '_', 'A', '3', '2', 0,
  /* 1228 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'A', 'N', 'D', '_', 'I', '6', '4', '_', 'A', '3', '2', 0,
  /* 1255 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'A', 'N', 'D', '_', 'I', '6', '4', '_', 'A', '3', '2', 0,
  /* 1281 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'A', 'N', 'D', '_', 'I', '6', '4', '_', 'A', '3', '2', 0,
  /* 1304 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'T', 'O', 'R', 'E', '_', 'I', '6', '4', '_', 'A', '3', '2', 0,
  /* 1325 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '3', '2', '_', 'U', '_', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '_', 'I', '6', '4', '_', 'A', '3', '2', 0,
  /* 1356 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '_', 'I', '6', '4', '_', 'A', '3', '2', 0,
  /* 1387 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '_', 'I', '6', '4', '_', 'A', '3', '2', 0,
  /* 1417 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '_', 'I', '6', '4', '_', 'A', '3', '2', 0,
  /* 1444 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '3', '2', '_', 'U', '_', 'X', 'C', 'H', 'G', '_', 'I', '6', '4', '_', 'A', '3', '2', 0,
  /* 1472 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'X', 'C', 'H', 'G', '_', 'I', '6', '4', '_', 'A', '3', '2', 0,
  /* 1500 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'X', 'C', 'H', 'G', '_', 'I', '6', '4', '_', 'A', '3', '2', 0,
  /* 1527 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'X', 'C', 'H', 'G', '_', 'I', '6', '4', '_', 'A', '3', '2', 0,
  /* 1551 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '3', '2', '_', 'U', '_', 'X', 'O', 'R', '_', 'I', '6', '4', '_', 'A', '3', '2', 0,
  /* 1578 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'X', 'O', 'R', '_', 'I', '6', '4', '_', 'A', '3', '2', 0,
  /* 1605 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'X', 'O', 'R', '_', 'I', '6', '4', '_', 'A', '3', '2', 0,
  /* 1631 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'X', 'O', 'R', '_', 'I', '6', '4', '_', 'A', '3', '2', 0,
  /* 1654 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '3', '2', '_', 'U', '_', 'O', 'R', '_', 'I', '6', '4', '_', 'A', '3', '2', 0,
  /* 1680 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'O', 'R', '_', 'I', '6', '4', '_', 'A', '3', '2', 0,
  /* 1706 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'O', 'R', '_', 'I', '6', '4', '_', 'A', '3', '2', 0,
  /* 1731 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'O', 'R', '_', 'I', '6', '4', '_', 'A', '3', '2', 0,
  /* 1753 */ 'L', 'O', 'A', 'D', '3', '2', '_', 'S', '_', 'I', '6', '4', '_', 'A', '3', '2', 0,
  /* 1770 */ 'L', 'O', 'A', 'D', '1', '6', '_', 'S', '_', 'I', '6', '4', '_', 'A', '3', '2', 0,
  /* 1787 */ 'L', 'O', 'A', 'D', '8', '_', 'S', '_', 'I', '6', '4', '_', 'A', '3', '2', 0,
  /* 1803 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '3', '2', '_', 'U', '_', 'I', '6', '4', '_', 'A', '3', '2', 0,
  /* 1827 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '1', '6', '_', 'U', '_', 'I', '6', '4', '_', 'A', '3', '2', 0,
  /* 1851 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '8', '_', 'U', '_', 'I', '6', '4', '_', 'A', '3', '2', 0,
  /* 1874 */ 'M', 'E', 'M', 'O', 'R', 'Y', '_', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'W', 'A', 'I', 'T', '6', '4', '_', 'A', '3', '2', 0,
  /* 1899 */ 'L', 'O', 'A', 'D', '_', 'L', 'A', 'N', 'E', '_', 'I', '3', '2', 'x', '4', '_', 'A', '3', '2', 0,
  /* 1919 */ 'S', 'T', 'O', 'R', 'E', '_', 'L', 'A', 'N', 'E', '_', 'I', '3', '2', 'x', '4', '_', 'A', '3', '2', 0,
  /* 1940 */ 'L', 'O', 'A', 'D', '_', 'Z', 'E', 'R', 'O', '_', 'I', '3', '2', 'x', '4', '_', 'A', '3', '2', 0,
  /* 1960 */ 'L', 'O', 'A', 'D', '_', 'E', 'X', 'T', 'E', 'N', 'D', '_', 'S', '_', 'I', '3', '2', 'x', '4', '_', 'A', '3', '2', 0,
  /* 1984 */ 'L', 'O', 'A', 'D', '_', 'E', 'X', 'T', 'E', 'N', 'D', '_', 'U', '_', 'I', '3', '2', 'x', '4', '_', 'A', '3', '2', 0,
  /* 2008 */ 'L', 'O', 'A', 'D', '_', 'L', 'A', 'N', 'E', '_', 'I', '8', 'x', '1', '6', '_', 'A', '3', '2', 0,
  /* 2028 */ 'S', 'T', 'O', 'R', 'E', '_', 'L', 'A', 'N', 'E', '_', 'I', '8', 'x', '1', '6', '_', 'A', '3', '2', 0,
  /* 2049 */ 'L', 'O', 'A', 'D', '_', 'V', '1', '2', '8', '_', 'A', '3', '2', 0,
  /* 2063 */ 'S', 'T', 'O', 'R', 'E', '_', 'V', '1', '2', '8', '_', 'A', '3', '2', 0,
  /* 2078 */ 'L', 'O', 'A', 'D', '_', 'L', 'A', 'N', 'E', '_', 'I', '1', '6', 'x', '8', '_', 'A', '3', '2', 0,
  /* 2098 */ 'S', 'T', 'O', 'R', 'E', '_', 'L', 'A', 'N', 'E', '_', 'I', '1', '6', 'x', '8', '_', 'A', '3', '2', 0,
  /* 2119 */ 'L', 'O', 'A', 'D', '_', 'E', 'X', 'T', 'E', 'N', 'D', '_', 'S', '_', 'I', '1', '6', 'x', '8', '_', 'A', '3', '2', 0,
  /* 2143 */ 'L', 'O', 'A', 'D', '_', 'E', 'X', 'T', 'E', 'N', 'D', '_', 'U', '_', 'I', '1', '6', 'x', '8', '_', 'A', '3', '2', 0,
  /* 2167 */ 'a', 'n', 'o', 'n', 'y', 'm', 'o', 'u', 's', '_', '7', '0', '7', '0', 'M', 'E', 'M', 'O', 'R', 'Y', '_', 'S', 'I', 'Z', 'E', '_', 'A', '3', '2', 0,
  /* 2197 */ 'a', 'n', 'o', 'n', 'y', 'm', 'o', 'u', 's', '_', '7', '7', '5', '2', 'M', 'E', 'M', 'O', 'R', 'Y', '_', 'F', 'I', 'L', 'L', '_', 'A', '3', '2', 0,
  /* 2227 */ 'L', 'O', 'A', 'D', '3', '2', '_', 'S', 'P', 'L', 'A', 'T', '_', 'A', '3', '2', 0,
  /* 2244 */ 'L', 'O', 'A', 'D', '6', '4', '_', 'S', 'P', 'L', 'A', 'T', '_', 'A', '3', '2', 0,
  /* 2261 */ 'L', 'O', 'A', 'D', '1', '6', '_', 'S', 'P', 'L', 'A', 'T', '_', 'A', '3', '2', 0,
  /* 2278 */ 'L', 'O', 'A', 'D', '8', '_', 'S', 'P', 'L', 'A', 'T', '_', 'A', '3', '2', 0,
  /* 2294 */ 'a', 'n', 'o', 'n', 'y', 'm', 'o', 'u', 's', '_', '7', '7', '5', '2', 'M', 'E', 'M', 'O', 'R', 'Y', '_', 'I', 'N', 'I', 'T', '_', 'A', '3', '2', 0,
  /* 2324 */ 'a', 'n', 'o', 'n', 'y', 'm', 'o', 'u', 's', '_', '7', '0', '7', '0', 'M', 'E', 'M', 'O', 'R', 'Y', '_', 'G', 'R', 'O', 'W', '_', 'A', '3', '2', 0,
  /* 2354 */ 'M', 'E', 'M', 'O', 'R', 'Y', '_', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'N', 'O', 'T', 'I', 'F', 'Y', '_', 'A', '3', '2', 0,
  /* 2379 */ 'a', 'n', 'o', 'n', 'y', 'm', 'o', 'u', 's', '_', '7', '7', '5', '2', 'M', 'E', 'M', 'O', 'R', 'Y', '_', 'C', 'O', 'P', 'Y', '_', 'A', '3', '2', 0,
  /* 2409 */ 'F', 'P', '_', 'T', 'O', '_', 'S', 'I', 'N', 'T', '_', 'I', '3', '2', '_', 'F', '3', '2', 0,
  /* 2428 */ 'F', 'P', '_', 'T', 'O', '_', 'U', 'I', 'N', 'T', '_', 'I', '3', '2', '_', 'F', '3', '2', 0,
  /* 2447 */ 'F', 'P', '_', 'T', 'O', '_', 'S', 'I', 'N', 'T', '_', 'I', '6', '4', '_', 'F', '3', '2', 0,
  /* 2466 */ 'F', 'P', '_', 'T', 'O', '_', 'U', 'I', 'N', 'T', '_', 'I', '6', '4', '_', 'F', '3', '2', 0,
  /* 2485 */ 'S', 'U', 'B', '_', 'F', '3', '2', 0,
  /* 2493 */ 'T', 'R', 'U', 'N', 'C', '_', 'F', '3', '2', 0,
  /* 2503 */ 'A', 'D', 'D', '_', 'F', '3', '2', 0,
  /* 2511 */ 'L', 'O', 'C', 'A', 'L', '_', 'T', 'E', 'E', '_', 'F', '3', '2', 0,
  /* 2525 */ 'G', 'E', '_', 'F', '3', '2', 0,
  /* 2532 */ 'L', 'E', '_', 'F', '3', '2', 0,
  /* 2539 */ 'N', 'E', '_', 'F', '3', '2', 0,
  /* 2546 */ 'F', '6', '4', '_', 'P', 'R', 'O', 'M', 'O', 'T', 'E', '_', 'F', '3', '2', 0,
  /* 2562 */ 'N', 'E', 'G', '_', 'F', '3', '2', 0,
  /* 2570 */ 'C', 'E', 'I', 'L', '_', 'F', '3', '2', 0,
  /* 2579 */ 'M', 'U', 'L', '_', 'F', '3', '2', 0,
  /* 2587 */ 'C', 'O', 'P', 'Y', 'S', 'I', 'G', 'N', '_', 'F', '3', '2', 0,
  /* 2600 */ 'M', 'I', 'N', '_', 'F', '3', '2', 0,
  /* 2608 */ 'D', 'R', 'O', 'P', '_', 'F', '3', '2', 0,
  /* 2617 */ 'E', 'Q', '_', 'F', '3', '2', 0,
  /* 2624 */ 'F', 'L', 'O', 'O', 'R', '_', 'F', '3', '2', 0,
  /* 2634 */ 'A', 'B', 'S', '_', 'F', '3', '2', 0,
  /* 2642 */ 'I', '3', '2', '_', 'T', 'R', 'U', 'N', 'C', '_', 'S', '_', 'F', '3', '2', 0,
  /* 2658 */ 'I', '6', '4', '_', 'T', 'R', 'U', 'N', 'C', '_', 'S', '_', 'F', '3', '2', 0,
  /* 2674 */ 'I', '3', '2', '_', 'T', 'R', 'U', 'N', 'C', '_', 'S', '_', 'S', 'A', 'T', '_', 'F', '3', '2', 0,
  /* 2694 */ 'I', '6', '4', '_', 'T', 'R', 'U', 'N', 'C', '_', 'S', '_', 'S', 'A', 'T', '_', 'F', '3', '2', 0,
  /* 2714 */ 'I', '3', '2', '_', 'T', 'R', 'U', 'N', 'C', '_', 'U', '_', 'S', 'A', 'T', '_', 'F', '3', '2', 0,
  /* 2734 */ 'I', '6', '4', '_', 'T', 'R', 'U', 'N', 'C', '_', 'U', '_', 'S', 'A', 'T', '_', 'F', '3', '2', 0,
  /* 2754 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'F', '3', '2', 0,
  /* 2765 */ 'G', 'L', 'O', 'B', 'A', 'L', '_', 'G', 'E', 'T', '_', 'F', '3', '2', 0,
  /* 2780 */ 'L', 'O', 'C', 'A', 'L', '_', 'G', 'E', 'T', '_', 'F', '3', '2', 0,
  /* 2794 */ 'I', '3', '2', '_', 'R', 'E', 'I', 'N', 'T', 'E', 'R', 'P', 'R', 'E', 'T', '_', 'F', '3', '2', 0,
  /* 2814 */ 'G', 'L', 'O', 'B', 'A', 'L', '_', 'S', 'E', 'T', '_', 'F', '3', '2', 0,
  /* 2829 */ 'L', 'O', 'C', 'A', 'L', '_', 'S', 'E', 'T', '_', 'F', '3', '2', 0,
  /* 2843 */ 'G', 'T', '_', 'F', '3', '2', 0,
  /* 2850 */ 'L', 'T', '_', 'F', '3', '2', 0,
  /* 2857 */ 'S', 'Q', 'R', 'T', '_', 'F', '3', '2', 0,
  /* 2866 */ 'N', 'E', 'A', 'R', 'E', 'S', 'T', '_', 'F', '3', '2', 0,
  /* 2878 */ 'C', 'O', 'N', 'S', 'T', '_', 'F', '3', '2', 0,
  /* 2888 */ 'I', '3', '2', '_', 'T', 'R', 'U', 'N', 'C', '_', 'U', '_', 'F', '3', '2', 0,
  /* 2904 */ 'I', '6', '4', '_', 'T', 'R', 'U', 'N', 'C', '_', 'U', '_', 'F', '3', '2', 0,
  /* 2920 */ 'D', 'I', 'V', '_', 'F', '3', '2', 0,
  /* 2928 */ 'M', 'A', 'X', '_', 'F', '3', '2', 0,
  /* 2936 */ 'C', 'O', 'P', 'Y', '_', 'F', '3', '2', 0,
  /* 2945 */ 'S', 'U', 'B', '_', 'I', '3', '2', 0,
  /* 2953 */ 'A', 'D', 'D', '_', 'I', '3', '2', 0,
  /* 2961 */ 'A', 'N', 'D', '_', 'I', '3', '2', 0,
  /* 2969 */ 'L', 'O', 'C', 'A', 'L', '_', 'T', 'E', 'E', '_', 'I', '3', '2', 0,
  /* 2983 */ 'B', 'R', '_', 'T', 'A', 'B', 'L', 'E', '_', 'I', '3', '2', 0,
  /* 2996 */ 'N', 'E', '_', 'I', '3', '2', 0,
  /* 3003 */ 'S', 'H', 'L', '_', 'I', '3', '2', 0,
  /* 3011 */ 'R', 'O', 'T', 'L', '_', 'I', '3', '2', 0,
  /* 3020 */ 'M', 'U', 'L', '_', 'I', '3', '2', 0,
  /* 3028 */ 'D', 'R', 'O', 'P', '_', 'I', '3', '2', 0,
  /* 3037 */ 'E', 'Q', '_', 'I', '3', '2', 0,
  /* 3044 */ 'X', 'O', 'R', '_', 'I', '3', '2', 0,
  /* 3052 */ 'R', 'O', 'T', 'R', '_', 'I', '3', '2', 0,
  /* 3061 */ 'I', '3', '2', '_', 'E', 'X', 'T', 'E', 'N', 'D', '1', '6', '_', 'S', '_', 'I', '3', '2', 0,
  /* 3080 */ 'I', '3', '2', '_', 'E', 'X', 'T', 'E', 'N', 'D', '8', '_', 'S', '_', 'I', '3', '2', 0,
  /* 3098 */ 'I', '6', '4', '_', 'E', 'X', 'T', 'E', 'N', 'D', '_', 'S', '_', 'I', '3', '2', 0,
  /* 3115 */ 'G', 'E', '_', 'S', '_', 'I', '3', '2', 0,
  /* 3124 */ 'L', 'E', '_', 'S', '_', 'I', '3', '2', 0,
  /* 3133 */ 'R', 'E', 'M', '_', 'S', '_', 'I', '3', '2', 0,
  /* 3143 */ 'S', 'H', 'R', '_', 'S', '_', 'I', '3', '2', 0,
  /* 3153 */ 'G', 'T', '_', 'S', '_', 'I', '3', '2', 0,
  /* 3162 */ 'L', 'T', '_', 'S', '_', 'I', '3', '2', 0,
  /* 3171 */ 'F', '3', '2', '_', 'C', 'O', 'N', 'V', 'E', 'R', 'T', '_', 'S', '_', 'I', '3', '2', 0,
  /* 3189 */ 'F', '6', '4', '_', 'C', 'O', 'N', 'V', 'E', 'R', 'T', '_', 'S', '_', 'I', '3', '2', 0,
  /* 3207 */ 'D', 'I', 'V', '_', 'S', '_', 'I', '3', '2', 0,
  /* 3217 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'I', '3', '2', 0,
  /* 3228 */ 'G', 'L', 'O', 'B', 'A', 'L', '_', 'G', 'E', 'T', '_', 'I', '3', '2', 0,
  /* 3243 */ 'L', 'O', 'C', 'A', 'L', '_', 'G', 'E', 'T', '_', 'I', '3', '2', 0,
  /* 3257 */ 'F', '3', '2', '_', 'R', 'E', 'I', 'N', 'T', 'E', 'R', 'P', 'R', 'E', 'T', '_', 'I', '3', '2', 0,
  /* 3277 */ 'G', 'L', 'O', 'B', 'A', 'L', '_', 'S', 'E', 'T', '_', 'I', '3', '2', 0,
  /* 3292 */ 'L', 'O', 'C', 'A', 'L', '_', 'S', 'E', 'T', '_', 'I', '3', '2', 0,
  /* 3306 */ 'P', 'O', 'P', 'C', 'N', 'T', '_', 'I', '3', '2', 0,
  /* 3317 */ 'C', 'O', 'N', 'S', 'T', '_', 'I', '3', '2', 0,
  /* 3327 */ 'I', '6', '4', '_', 'E', 'X', 'T', 'E', 'N', 'D', '_', 'U', '_', 'I', '3', '2', 0,
  /* 3344 */ 'G', 'E', '_', 'U', '_', 'I', '3', '2', 0,
  /* 3353 */ 'L', 'E', '_', 'U', '_', 'I', '3', '2', 0,
  /* 3362 */ 'R', 'E', 'M', '_', 'U', '_', 'I', '3', '2', 0,
  /* 3372 */ 'S', 'H', 'R', '_', 'U', '_', 'I', '3', '2', 0,
  /* 3382 */ 'G', 'T', '_', 'U', '_', 'I', '3', '2', 0,
  /* 3391 */ 'L', 'T', '_', 'U', '_', 'I', '3', '2', 0,
  /* 3400 */ 'F', '3', '2', '_', 'C', 'O', 'N', 'V', 'E', 'R', 'T', '_', 'U', '_', 'I', '3', '2', 0,
  /* 3418 */ 'F', '6', '4', '_', 'C', 'O', 'N', 'V', 'E', 'R', 'T', '_', 'U', '_', 'I', '3', '2', 0,
  /* 3436 */ 'D', 'I', 'V', '_', 'U', '_', 'I', '3', '2', 0,
  /* 3446 */ 'C', 'O', 'P', 'Y', '_', 'I', '3', '2', 0,
  /* 3455 */ 'C', 'L', 'Z', '_', 'I', '3', '2', 0,
  /* 3463 */ 'E', 'Q', 'Z', '_', 'I', '3', '2', 0,
  /* 3471 */ 'C', 'T', 'Z', '_', 'I', '3', '2', 0,
  /* 3479 */ 'A', 'R', 'G', 'U', 'M', 'E', 'N', 'T', '_', 'v', '4', 'f', '3', '2', 0,
  /* 3494 */ 'A', 'R', 'G', 'U', 'M', 'E', 'N', 'T', '_', 'f', '3', '2', 0,
  /* 3507 */ 'A', 'R', 'G', 'U', 'M', 'E', 'N', 'T', '_', 'v', '4', 'i', '3', '2', 0,
  /* 3522 */ 'A', 'R', 'G', 'U', 'M', 'E', 'N', 'T', '_', 'i', '3', '2', 0,
  /* 3535 */ 'G', '_', 'F', 'L', 'O', 'G', '2', 0,
  /* 3543 */ 'G', '_', 'F', 'E', 'X', 'P', '2', 0,
  /* 3551 */ 'C', 'O', 'N', 'S', 'T', '_', 'V', '1', '2', '8', '_', 'F', '6', '4', 'x', '2', 0,
  /* 3568 */ 'S', 'U', 'B', '_', 'F', '6', '4', 'x', '2', 0,
  /* 3578 */ 'T', 'R', 'U', 'N', 'C', '_', 'F', '6', '4', 'x', '2', 0,
  /* 3590 */ 'N', 'M', 'A', 'D', 'D', '_', 'F', '6', '4', 'x', '2', 0,
  /* 3602 */ 'G', 'E', '_', 'F', '6', '4', 'x', '2', 0,
  /* 3611 */ 'L', 'E', '_', 'F', '6', '4', 'x', '2', 0,
  /* 3620 */ 'R', 'E', 'P', 'L', 'A', 'C', 'E', '_', 'L', 'A', 'N', 'E', '_', 'F', '6', '4', 'x', '2', 0,
  /* 3639 */ 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'L', 'A', 'N', 'E', '_', 'F', '6', '4', 'x', '2', 0,
  /* 3658 */ 'N', 'E', 'G', '_', 'F', '6', '4', 'x', '2', 0,
  /* 3668 */ 'C', 'E', 'I', 'L', '_', 'F', '6', '4', 'x', '2', 0,
  /* 3679 */ 'M', 'U', 'L', '_', 'F', '6', '4', 'x', '2', 0,
  /* 3689 */ 'S', 'I', 'M', 'D', '_', 'R', 'E', 'L', 'A', 'X', 'E', 'D', '_', 'F', 'M', 'I', 'N', '_', 'F', '6', '4', 'x', '2', 0,
  /* 3713 */ 'P', 'M', 'I', 'N', '_', 'F', '6', '4', 'x', '2', 0,
  /* 3724 */ 'E', 'Q', '_', 'F', '6', '4', 'x', '2', 0,
  /* 3733 */ 'F', 'L', 'O', 'O', 'R', '_', 'F', '6', '4', 'x', '2', 0,
  /* 3745 */ 'A', 'B', 'S', '_', 'F', '6', '4', 'x', '2', 0,
  /* 3755 */ 'S', 'P', 'L', 'A', 'T', '_', 'F', '6', '4', 'x', '2', 0,
  /* 3767 */ 'G', 'T', '_', 'F', '6', '4', 'x', '2', 0,
  /* 3776 */ 'L', 'T', '_', 'F', '6', '4', 'x', '2', 0,
  /* 3785 */ 'S', 'Q', 'R', 'T', '_', 'F', '6', '4', 'x', '2', 0,
  /* 3796 */ 'N', 'E', 'A', 'R', 'E', 'S', 'T', '_', 'F', '6', '4', 'x', '2', 0,
  /* 3810 */ 'D', 'I', 'V', '_', 'F', '6', '4', 'x', '2', 0,
  /* 3820 */ 'S', 'I', 'M', 'D', '_', 'R', 'E', 'L', 'A', 'X', 'E', 'D', '_', 'F', 'M', 'A', 'X', '_', 'F', '6', '4', 'x', '2', 0,
  /* 3844 */ 'P', 'M', 'A', 'X', '_', 'F', '6', '4', 'x', '2', 0,
  /* 3855 */ 'c', 'o', 'n', 'v', 'e', 'r', 't', '_', 'l', 'o', 'w', '_', 's', '_', 'F', '6', '4', 'x', '2', 0,
  /* 3875 */ 'c', 'o', 'n', 'v', 'e', 'r', 't', '_', 'l', 'o', 'w', '_', 'u', '_', 'F', '6', '4', 'x', '2', 0,
  /* 3895 */ 'p', 'r', 'o', 'm', 'o', 't', 'e', '_', 'l', 'o', 'w', '_', 'F', '6', '4', 'x', '2', 0,
  /* 3913 */ 'C', 'O', 'N', 'S', 'T', '_', 'V', '1', '2', '8', '_', 'I', '6', '4', 'x', '2', 0,
  /* 3930 */ 'S', 'U', 'B', '_', 'I', '6', '4', 'x', '2', 0,
  /* 3940 */ 'A', 'D', 'D', '_', 'I', '6', '4', 'x', '2', 0,
  /* 3950 */ 'R', 'E', 'P', 'L', 'A', 'C', 'E', '_', 'L', 'A', 'N', 'E', '_', 'I', '6', '4', 'x', '2', 0,
  /* 3969 */ 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'L', 'A', 'N', 'E', '_', 'I', '6', '4', 'x', '2', 0,
  /* 3988 */ 'A', 'L', 'L', 'T', 'R', 'U', 'E', '_', 'I', '6', '4', 'x', '2', 0,
  /* 4002 */ 'N', 'E', 'G', '_', 'I', '6', '4', 'x', '2', 0,
  /* 4012 */ 'B', 'I', 'T', 'M', 'A', 'S', 'K', '_', 'I', '6', '4', 'x', '2', 0,
  /* 4026 */ 'S', 'H', 'L', '_', 'I', '6', '4', 'x', '2', 0,
  /* 4036 */ 'M', 'U', 'L', '_', 'I', '6', '4', 'x', '2', 0,
  /* 4046 */ 'E', 'Q', '_', 'I', '6', '4', 'x', '2', 0,
  /* 4055 */ 'A', 'B', 'S', '_', 'I', '6', '4', 'x', '2', 0,
  /* 4065 */ 'G', 'E', '_', 'S', '_', 'I', '6', '4', 'x', '2', 0,
  /* 4076 */ 'L', 'E', '_', 'S', '_', 'I', '6', '4', 'x', '2', 0,
  /* 4087 */ 'E', 'X', 'T', 'M', 'U', 'L', '_', 'H', 'I', 'G', 'H', '_', 'S', '_', 'I', '6', '4', 'x', '2', 0,
  /* 4107 */ 'S', 'H', 'R', '_', 'S', '_', 'I', '6', '4', 'x', '2', 0,
  /* 4119 */ 'G', 'T', '_', 'S', '_', 'I', '6', '4', 'x', '2', 0,
  /* 4130 */ 'L', 'T', '_', 'S', '_', 'I', '6', '4', 'x', '2', 0,
  /* 4141 */ 'E', 'X', 'T', 'M', 'U', 'L', '_', 'L', 'O', 'W', '_', 'S', '_', 'I', '6', '4', 'x', '2', 0,
  /* 4160 */ 'S', 'P', 'L', 'A', 'T', '_', 'I', '6', '4', 'x', '2', 0,
  /* 4172 */ 'L', 'A', 'N', 'E', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'I', '6', '4', 'x', '2', 0,
  /* 4189 */ 'E', 'X', 'T', 'M', 'U', 'L', '_', 'H', 'I', 'G', 'H', '_', 'U', '_', 'I', '6', '4', 'x', '2', 0,
  /* 4209 */ 'S', 'H', 'R', '_', 'U', '_', 'I', '6', '4', 'x', '2', 0,
  /* 4221 */ 'E', 'X', 'T', 'M', 'U', 'L', '_', 'L', 'O', 'W', '_', 'U', '_', 'I', '6', '4', 'x', '2', 0,
  /* 4240 */ 'e', 'x', 't', 'e', 'n', 'd', '_', 'h', 'i', 'g', 'h', '_', 's', '_', 'I', '6', '4', 'x', '2', 0,
  /* 4260 */ 'e', 'x', 't', 'e', 'n', 'd', '_', 'l', 'o', 'w', '_', 's', '_', 'I', '6', '4', 'x', '2', 0,
  /* 4279 */ 'e', 'x', 't', 'e', 'n', 'd', '_', 'h', 'i', 'g', 'h', '_', 'u', '_', 'I', '6', '4', 'x', '2', 0,
  /* 4299 */ 'e', 'x', 't', 'e', 'n', 'd', '_', 'l', 'o', 'w', '_', 'u', '_', 'I', '6', '4', 'x', '2', 0,
  /* 4318 */ 'L', 'O', 'A', 'D', '_', 'F', '3', '2', '_', 'A', '6', '4', 0,
  /* 4331 */ 'S', 'T', 'O', 'R', 'E', '_', 'F', '3', '2', '_', 'A', '6', '4', 0,
  /* 4345 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'T', 'O', 'R', 'E', '1', '6', '_', 'I', '3', '2', '_', 'A', '6', '4', 0,
  /* 4368 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'T', 'O', 'R', 'E', '8', '_', 'I', '3', '2', '_', 'A', '6', '4', 0,
  /* 4390 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'S', 'U', 'B', '_', 'I', '3', '2', '_', 'A', '6', '4', 0,
  /* 4417 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'S', 'U', 'B', '_', 'I', '3', '2', '_', 'A', '6', '4', 0,
  /* 4443 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'S', 'U', 'B', '_', 'I', '3', '2', '_', 'A', '6', '4', 0,
  /* 4466 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'I', '3', '2', '_', 'A', '6', '4', 0,
  /* 4486 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'A', 'D', 'D', '_', 'I', '3', '2', '_', 'A', '6', '4', 0,
  /* 4513 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'A', 'D', 'D', '_', 'I', '3', '2', '_', 'A', '6', '4', 0,
  /* 4539 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'A', 'D', 'D', '_', 'I', '3', '2', '_', 'A', '6', '4', 0,
  /* 4562 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'A', 'N', 'D', '_', 'I', '3', '2', '_', 'A', '6', '4', 0,
  /* 4589 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'A', 'N', 'D', '_', 'I', '3', '2', '_', 'A', '6', '4', 0,
  /* 4615 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'A', 'N', 'D', '_', 'I', '3', '2', '_', 'A', '6', '4', 0,
  /* 4638 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'T', 'O', 'R', 'E', '_', 'I', '3', '2', '_', 'A', '6', '4', 0,
  /* 4659 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '_', 'I', '3', '2', '_', 'A', '6', '4', 0,
  /* 4690 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '_', 'I', '3', '2', '_', 'A', '6', '4', 0,
  /* 4720 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '_', 'I', '3', '2', '_', 'A', '6', '4', 0,
  /* 4747 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'X', 'C', 'H', 'G', '_', 'I', '3', '2', '_', 'A', '6', '4', 0,
  /* 4775 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'X', 'C', 'H', 'G', '_', 'I', '3', '2', '_', 'A', '6', '4', 0,
  /* 4802 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'X', 'C', 'H', 'G', '_', 'I', '3', '2', '_', 'A', '6', '4', 0,
  /* 4826 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'X', 'O', 'R', '_', 'I', '3', '2', '_', 'A', '6', '4', 0,
  /* 4853 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'X', 'O', 'R', '_', 'I', '3', '2', '_', 'A', '6', '4', 0,
  /* 4879 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'X', 'O', 'R', '_', 'I', '3', '2', '_', 'A', '6', '4', 0,
  /* 4902 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'O', 'R', '_', 'I', '3', '2', '_', 'A', '6', '4', 0,
  /* 4928 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'O', 'R', '_', 'I', '3', '2', '_', 'A', '6', '4', 0,
  /* 4953 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'O', 'R', '_', 'I', '3', '2', '_', 'A', '6', '4', 0,
  /* 4975 */ 'L', 'O', 'A', 'D', '1', '6', '_', 'S', '_', 'I', '3', '2', '_', 'A', '6', '4', 0,
  /* 4992 */ 'L', 'O', 'A', 'D', '8', '_', 'S', '_', 'I', '3', '2', '_', 'A', '6', '4', 0,
  /* 5008 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '1', '6', '_', 'U', '_', 'I', '3', '2', '_', 'A', '6', '4', 0,
  /* 5032 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '8', '_', 'U', '_', 'I', '3', '2', '_', 'A', '6', '4', 0,
  /* 5055 */ 'M', 'E', 'M', 'O', 'R', 'Y', '_', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'W', 'A', 'I', 'T', '3', '2', '_', 'A', '6', '4', 0,
  /* 5080 */ 'L', 'O', 'A', 'D', '_', 'L', 'A', 'N', 'E', '_', 'I', '6', '4', 'x', '2', '_', 'A', '6', '4', 0,
  /* 5100 */ 'S', 'T', 'O', 'R', 'E', '_', 'L', 'A', 'N', 'E', '_', 'I', '6', '4', 'x', '2', '_', 'A', '6', '4', 0,
  /* 5121 */ 'L', 'O', 'A', 'D', '_', 'Z', 'E', 'R', 'O', '_', 'I', '6', '4', 'x', '2', '_', 'A', '6', '4', 0,
  /* 5141 */ 'L', 'O', 'A', 'D', '_', 'E', 'X', 'T', 'E', 'N', 'D', '_', 'S', '_', 'I', '6', '4', 'x', '2', '_', 'A', '6', '4', 0,
  /* 5165 */ 'L', 'O', 'A', 'D', '_', 'E', 'X', 'T', 'E', 'N', 'D', '_', 'U', '_', 'I', '6', '4', 'x', '2', '_', 'A', '6', '4', 0,
  /* 5189 */ 'L', 'O', 'A', 'D', '_', 'F', '6', '4', '_', 'A', '6', '4', 0,
  /* 5202 */ 'S', 'T', 'O', 'R', 'E', '_', 'F', '6', '4', '_', 'A', '6', '4', 0,
  /* 5216 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'T', 'O', 'R', 'E', '3', '2', '_', 'I', '6', '4', '_', 'A', '6', '4', 0,
  /* 5239 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'T', 'O', 'R', 'E', '1', '6', '_', 'I', '6', '4', '_', 'A', '6', '4', 0,
  /* 5262 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'T', 'O', 'R', 'E', '8', '_', 'I', '6', '4', '_', 'A', '6', '4', 0,
  /* 5284 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '3', '2', '_', 'U', '_', 'S', 'U', 'B', '_', 'I', '6', '4', '_', 'A', '6', '4', 0,
  /* 5311 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'S', 'U', 'B', '_', 'I', '6', '4', '_', 'A', '6', '4', 0,
  /* 5338 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'S', 'U', 'B', '_', 'I', '6', '4', '_', 'A', '6', '4', 0,
  /* 5364 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'S', 'U', 'B', '_', 'I', '6', '4', '_', 'A', '6', '4', 0,
  /* 5387 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'I', '6', '4', '_', 'A', '6', '4', 0,
  /* 5407 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '3', '2', '_', 'U', '_', 'A', 'D', 'D', '_', 'I', '6', '4', '_', 'A', '6', '4', 0,
  /* 5434 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'A', 'D', 'D', '_', 'I', '6', '4', '_', 'A', '6', '4', 0,
  /* 5461 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'A', 'D', 'D', '_', 'I', '6', '4', '_', 'A', '6', '4', 0,
  /* 5487 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'A', 'D', 'D', '_', 'I', '6', '4', '_', 'A', '6', '4', 0,
  /* 5510 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '3', '2', '_', 'U', '_', 'A', 'N', 'D', '_', 'I', '6', '4', '_', 'A', '6', '4', 0,
  /* 5537 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'A', 'N', 'D', '_', 'I', '6', '4', '_', 'A', '6', '4', 0,
  /* 5564 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'A', 'N', 'D', '_', 'I', '6', '4', '_', 'A', '6', '4', 0,
  /* 5590 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'A', 'N', 'D', '_', 'I', '6', '4', '_', 'A', '6', '4', 0,
  /* 5613 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'T', 'O', 'R', 'E', '_', 'I', '6', '4', '_', 'A', '6', '4', 0,
  /* 5634 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '3', '2', '_', 'U', '_', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '_', 'I', '6', '4', '_', 'A', '6', '4', 0,
  /* 5665 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '_', 'I', '6', '4', '_', 'A', '6', '4', 0,
  /* 5696 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '_', 'I', '6', '4', '_', 'A', '6', '4', 0,
  /* 5726 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '_', 'I', '6', '4', '_', 'A', '6', '4', 0,
  /* 5753 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '3', '2', '_', 'U', '_', 'X', 'C', 'H', 'G', '_', 'I', '6', '4', '_', 'A', '6', '4', 0,
  /* 5781 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'X', 'C', 'H', 'G', '_', 'I', '6', '4', '_', 'A', '6', '4', 0,
  /* 5809 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'X', 'C', 'H', 'G', '_', 'I', '6', '4', '_', 'A', '6', '4', 0,
  /* 5836 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'X', 'C', 'H', 'G', '_', 'I', '6', '4', '_', 'A', '6', '4', 0,
  /* 5860 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '3', '2', '_', 'U', '_', 'X', 'O', 'R', '_', 'I', '6', '4', '_', 'A', '6', '4', 0,
  /* 5887 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'X', 'O', 'R', '_', 'I', '6', '4', '_', 'A', '6', '4', 0,
  /* 5914 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'X', 'O', 'R', '_', 'I', '6', '4', '_', 'A', '6', '4', 0,
  /* 5940 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'X', 'O', 'R', '_', 'I', '6', '4', '_', 'A', '6', '4', 0,
  /* 5963 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '3', '2', '_', 'U', '_', 'O', 'R', '_', 'I', '6', '4', '_', 'A', '6', '4', 0,
  /* 5989 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'O', 'R', '_', 'I', '6', '4', '_', 'A', '6', '4', 0,
  /* 6015 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'O', 'R', '_', 'I', '6', '4', '_', 'A', '6', '4', 0,
  /* 6040 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'O', 'R', '_', 'I', '6', '4', '_', 'A', '6', '4', 0,
  /* 6062 */ 'L', 'O', 'A', 'D', '3', '2', '_', 'S', '_', 'I', '6', '4', '_', 'A', '6', '4', 0,
  /* 6079 */ 'L', 'O', 'A', 'D', '1', '6', '_', 'S', '_', 'I', '6', '4', '_', 'A', '6', '4', 0,
  /* 6096 */ 'L', 'O', 'A', 'D', '8', '_', 'S', '_', 'I', '6', '4', '_', 'A', '6', '4', 0,
  /* 6112 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '3', '2', '_', 'U', '_', 'I', '6', '4', '_', 'A', '6', '4', 0,
  /* 6136 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '1', '6', '_', 'U', '_', 'I', '6', '4', '_', 'A', '6', '4', 0,
  /* 6160 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '8', '_', 'U', '_', 'I', '6', '4', '_', 'A', '6', '4', 0,
  /* 6183 */ 'M', 'E', 'M', 'O', 'R', 'Y', '_', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'W', 'A', 'I', 'T', '6', '4', '_', 'A', '6', '4', 0,
  /* 6208 */ 'L', 'O', 'A', 'D', '_', 'L', 'A', 'N', 'E', '_', 'I', '3', '2', 'x', '4', '_', 'A', '6', '4', 0,
  /* 6228 */ 'S', 'T', 'O', 'R', 'E', '_', 'L', 'A', 'N', 'E', '_', 'I', '3', '2', 'x', '4', '_', 'A', '6', '4', 0,
  /* 6249 */ 'L', 'O', 'A', 'D', '_', 'Z', 'E', 'R', 'O', '_', 'I', '3', '2', 'x', '4', '_', 'A', '6', '4', 0,
  /* 6269 */ 'L', 'O', 'A', 'D', '_', 'E', 'X', 'T', 'E', 'N', 'D', '_', 'S', '_', 'I', '3', '2', 'x', '4', '_', 'A', '6', '4', 0,
  /* 6293 */ 'L', 'O', 'A', 'D', '_', 'E', 'X', 'T', 'E', 'N', 'D', '_', 'U', '_', 'I', '3', '2', 'x', '4', '_', 'A', '6', '4', 0,
  /* 6317 */ 'L', 'O', 'A', 'D', '_', 'L', 'A', 'N', 'E', '_', 'I', '8', 'x', '1', '6', '_', 'A', '6', '4', 0,
  /* 6337 */ 'S', 'T', 'O', 'R', 'E', '_', 'L', 'A', 'N', 'E', '_', 'I', '8', 'x', '1', '6', '_', 'A', '6', '4', 0,
  /* 6358 */ 'L', 'O', 'A', 'D', '_', 'V', '1', '2', '8', '_', 'A', '6', '4', 0,
  /* 6372 */ 'S', 'T', 'O', 'R', 'E', '_', 'V', '1', '2', '8', '_', 'A', '6', '4', 0,
  /* 6387 */ 'L', 'O', 'A', 'D', '_', 'L', 'A', 'N', 'E', '_', 'I', '1', '6', 'x', '8', '_', 'A', '6', '4', 0,
  /* 6407 */ 'S', 'T', 'O', 'R', 'E', '_', 'L', 'A', 'N', 'E', '_', 'I', '1', '6', 'x', '8', '_', 'A', '6', '4', 0,
  /* 6428 */ 'L', 'O', 'A', 'D', '_', 'E', 'X', 'T', 'E', 'N', 'D', '_', 'S', '_', 'I', '1', '6', 'x', '8', '_', 'A', '6', '4', 0,
  /* 6452 */ 'L', 'O', 'A', 'D', '_', 'E', 'X', 'T', 'E', 'N', 'D', '_', 'U', '_', 'I', '1', '6', 'x', '8', '_', 'A', '6', '4', 0,
  /* 6476 */ 'a', 'n', 'o', 'n', 'y', 'm', 'o', 'u', 's', '_', '7', '0', '7', '1', 'M', 'E', 'M', 'O', 'R', 'Y', '_', 'S', 'I', 'Z', 'E', '_', 'A', '6', '4', 0,
  /* 6506 */ 'a', 'n', 'o', 'n', 'y', 'm', 'o', 'u', 's', '_', '7', '7', '5', '3', 'M', 'E', 'M', 'O', 'R', 'Y', '_', 'F', 'I', 'L', 'L', '_', 'A', '6', '4', 0,
  /* 6536 */ 'L', 'O', 'A', 'D', '3', '2', '_', 'S', 'P', 'L', 'A', 'T', '_', 'A', '6', '4', 0,
  /* 6553 */ 'L', 'O', 'A', 'D', '6', '4', '_', 'S', 'P', 'L', 'A', 'T', '_', 'A', '6', '4', 0,
  /* 6570 */ 'L', 'O', 'A', 'D', '1', '6', '_', 'S', 'P', 'L', 'A', 'T', '_', 'A', '6', '4', 0,
  /* 6587 */ 'L', 'O', 'A', 'D', '8', '_', 'S', 'P', 'L', 'A', 'T', '_', 'A', '6', '4', 0,
  /* 6603 */ 'a', 'n', 'o', 'n', 'y', 'm', 'o', 'u', 's', '_', '7', '7', '5', '3', 'M', 'E', 'M', 'O', 'R', 'Y', '_', 'I', 'N', 'I', 'T', '_', 'A', '6', '4', 0,
  /* 6633 */ 'a', 'n', 'o', 'n', 'y', 'm', 'o', 'u', 's', '_', '7', '0', '7', '1', 'M', 'E', 'M', 'O', 'R', 'Y', '_', 'G', 'R', 'O', 'W', '_', 'A', '6', '4', 0,
  /* 6663 */ 'M', 'E', 'M', 'O', 'R', 'Y', '_', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'N', 'O', 'T', 'I', 'F', 'Y', '_', 'A', '6', '4', 0,
  /* 6688 */ 'a', 'n', 'o', 'n', 'y', 'm', 'o', 'u', 's', '_', '7', '7', '5', '3', 'M', 'E', 'M', 'O', 'R', 'Y', '_', 'C', 'O', 'P', 'Y', '_', 'A', '6', '4', 0,
  /* 6718 */ 'F', 'P', '_', 'T', 'O', '_', 'S', 'I', 'N', 'T', '_', 'I', '3', '2', '_', 'F', '6', '4', 0,
  /* 6737 */ 'F', 'P', '_', 'T', 'O', '_', 'U', 'I', 'N', 'T', '_', 'I', '3', '2', '_', 'F', '6', '4', 0,
  /* 6756 */ 'F', 'P', '_', 'T', 'O', '_', 'S', 'I', 'N', 'T', '_', 'I', '6', '4', '_', 'F', '6', '4', 0,
  /* 6775 */ 'F', 'P', '_', 'T', 'O', '_', 'U', 'I', 'N', 'T', '_', 'I', '6', '4', '_', 'F', '6', '4', 0,
  /* 6794 */ 'S', 'U', 'B', '_', 'F', '6', '4', 0,
  /* 6802 */ 'T', 'R', 'U', 'N', 'C', '_', 'F', '6', '4', 0,
  /* 6812 */ 'A', 'D', 'D', '_', 'F', '6', '4', 0,
  /* 6820 */ 'L', 'O', 'C', 'A', 'L', '_', 'T', 'E', 'E', '_', 'F', '6', '4', 0,
  /* 6834 */ 'G', 'E', '_', 'F', '6', '4', 0,
  /* 6841 */ 'L', 'E', '_', 'F', '6', '4', 0,
  /* 6848 */ 'N', 'E', '_', 'F', '6', '4', 0,
  /* 6855 */ 'F', '3', '2', '_', 'D', 'E', 'M', 'O', 'T', 'E', '_', 'F', '6', '4', 0,
  /* 6870 */ 'N', 'E', 'G', '_', 'F', '6', '4', 0,
  /* 6878 */ 'C', 'E', 'I', 'L', '_', 'F', '6', '4', 0,
  /* 6887 */ 'M', 'U', 'L', '_', 'F', '6', '4', 0,
  /* 6895 */ 'C', 'O', 'P', 'Y', 'S', 'I', 'G', 'N', '_', 'F', '6', '4', 0,
  /* 6908 */ 'M', 'I', 'N', '_', 'F', '6', '4', 0,
  /* 6916 */ 'D', 'R', 'O', 'P', '_', 'F', '6', '4', 0,
  /* 6925 */ 'E', 'Q', '_', 'F', '6', '4', 0,
  /* 6932 */ 'F', 'L', 'O', 'O', 'R', '_', 'F', '6', '4', 0,
  /* 6942 */ 'A', 'B', 'S', '_', 'F', '6', '4', 0,
  /* 6950 */ 'I', '3', '2', '_', 'T', 'R', 'U', 'N', 'C', '_', 'S', '_', 'F', '6', '4', 0,
  /* 6966 */ 'I', '6', '4', '_', 'T', 'R', 'U', 'N', 'C', '_', 'S', '_', 'F', '6', '4', 0,
  /* 6982 */ 'I', '3', '2', '_', 'T', 'R', 'U', 'N', 'C', '_', 'S', '_', 'S', 'A', 'T', '_', 'F', '6', '4', 0,
  /* 7002 */ 'I', '6', '4', '_', 'T', 'R', 'U', 'N', 'C', '_', 'S', '_', 'S', 'A', 'T', '_', 'F', '6', '4', 0,
  /* 7022 */ 'I', '3', '2', '_', 'T', 'R', 'U', 'N', 'C', '_', 'U', '_', 'S', 'A', 'T', '_', 'F', '6', '4', 0,
  /* 7042 */ 'I', '6', '4', '_', 'T', 'R', 'U', 'N', 'C', '_', 'U', '_', 'S', 'A', 'T', '_', 'F', '6', '4', 0,
  /* 7062 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'F', '6', '4', 0,
  /* 7073 */ 'G', 'L', 'O', 'B', 'A', 'L', '_', 'G', 'E', 'T', '_', 'F', '6', '4', 0,
  /* 7088 */ 'L', 'O', 'C', 'A', 'L', '_', 'G', 'E', 'T', '_', 'F', '6', '4', 0,
  /* 7102 */ 'I', '6', '4', '_', 'R', 'E', 'I', 'N', 'T', 'E', 'R', 'P', 'R', 'E', 'T', '_', 'F', '6', '4', 0,
  /* 7122 */ 'G', 'L', 'O', 'B', 'A', 'L', '_', 'S', 'E', 'T', '_', 'F', '6', '4', 0,
  /* 7137 */ 'L', 'O', 'C', 'A', 'L', '_', 'S', 'E', 'T', '_', 'F', '6', '4', 0,
  /* 7151 */ 'G', 'T', '_', 'F', '6', '4', 0,
  /* 7158 */ 'L', 'T', '_', 'F', '6', '4', 0,
  /* 7165 */ 'S', 'Q', 'R', 'T', '_', 'F', '6', '4', 0,
  /* 7174 */ 'N', 'E', 'A', 'R', 'E', 'S', 'T', '_', 'F', '6', '4', 0,
  /* 7186 */ 'C', 'O', 'N', 'S', 'T', '_', 'F', '6', '4', 0,
  /* 7196 */ 'I', '3', '2', '_', 'T', 'R', 'U', 'N', 'C', '_', 'U', '_', 'F', '6', '4', 0,
  /* 7212 */ 'I', '6', '4', '_', 'T', 'R', 'U', 'N', 'C', '_', 'U', '_', 'F', '6', '4', 0,
  /* 7228 */ 'D', 'I', 'V', '_', 'F', '6', '4', 0,
  /* 7236 */ 'M', 'A', 'X', '_', 'F', '6', '4', 0,
  /* 7244 */ 'C', 'O', 'P', 'Y', '_', 'F', '6', '4', 0,
  /* 7253 */ 'S', 'U', 'B', '_', 'I', '6', '4', 0,
  /* 7261 */ 'A', 'D', 'D', '_', 'I', '6', '4', 0,
  /* 7269 */ 'A', 'N', 'D', '_', 'I', '6', '4', 0,
  /* 7277 */ 'L', 'O', 'C', 'A', 'L', '_', 'T', 'E', 'E', '_', 'I', '6', '4', 0,
  /* 7291 */ 'B', 'R', '_', 'T', 'A', 'B', 'L', 'E', '_', 'I', '6', '4', 0,
  /* 7304 */ 'N', 'E', '_', 'I', '6', '4', 0,
  /* 7311 */ 'S', 'H', 'L', '_', 'I', '6', '4', 0,
  /* 7319 */ 'R', 'O', 'T', 'L', '_', 'I', '6', '4', 0,
  /* 7328 */ 'M', 'U', 'L', '_', 'I', '6', '4', 0,
  /* 7336 */ 'I', '3', '2', '_', 'W', 'R', 'A', 'P', '_', 'I', '6', '4', 0,
  /* 7349 */ 'D', 'R', 'O', 'P', '_', 'I', '6', '4', 0,
  /* 7358 */ 'E', 'Q', '_', 'I', '6', '4', 0,
  /* 7365 */ 'X', 'O', 'R', '_', 'I', '6', '4', 0,
  /* 7373 */ 'R', 'O', 'T', 'R', '_', 'I', '6', '4', 0,
  /* 7382 */ 'I', '6', '4', '_', 'E', 'X', 'T', 'E', 'N', 'D', '3', '2', '_', 'S', '_', 'I', '6', '4', 0,
  /* 7401 */ 'I', '6', '4', '_', 'E', 'X', 'T', 'E', 'N', 'D', '1', '6', '_', 'S', '_', 'I', '6', '4', 0,
  /* 7420 */ 'I', '6', '4', '_', 'E', 'X', 'T', 'E', 'N', 'D', '8', '_', 'S', '_', 'I', '6', '4', 0,
  /* 7438 */ 'G', 'E', '_', 'S', '_', 'I', '6', '4', 0,
  /* 7447 */ 'L', 'E', '_', 'S', '_', 'I', '6', '4', 0,
  /* 7456 */ 'R', 'E', 'M', '_', 'S', '_', 'I', '6', '4', 0,
  /* 7466 */ 'S', 'H', 'R', '_', 'S', '_', 'I', '6', '4', 0,
  /* 7476 */ 'G', 'T', '_', 'S', '_', 'I', '6', '4', 0,
  /* 7485 */ 'L', 'T', '_', 'S', '_', 'I', '6', '4', 0,
  /* 7494 */ 'F', '3', '2', '_', 'C', 'O', 'N', 'V', 'E', 'R', 'T', '_', 'S', '_', 'I', '6', '4', 0,
  /* 7512 */ 'F', '6', '4', '_', 'C', 'O', 'N', 'V', 'E', 'R', 'T', '_', 'S', '_', 'I', '6', '4', 0,
  /* 7530 */ 'D', 'I', 'V', '_', 'S', '_', 'I', '6', '4', 0,
  /* 7540 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'I', '6', '4', 0,
  /* 7551 */ 'G', 'L', 'O', 'B', 'A', 'L', '_', 'G', 'E', 'T', '_', 'I', '6', '4', 0,
  /* 7566 */ 'L', 'O', 'C', 'A', 'L', '_', 'G', 'E', 'T', '_', 'I', '6', '4', 0,
  /* 7580 */ 'F', '6', '4', '_', 'R', 'E', 'I', 'N', 'T', 'E', 'R', 'P', 'R', 'E', 'T', '_', 'I', '6', '4', 0,
  /* 7600 */ 'G', 'L', 'O', 'B', 'A', 'L', '_', 'S', 'E', 'T', '_', 'I', '6', '4', 0,
  /* 7615 */ 'L', 'O', 'C', 'A', 'L', '_', 'S', 'E', 'T', '_', 'I', '6', '4', 0,
  /* 7629 */ 'P', 'O', 'P', 'C', 'N', 'T', '_', 'I', '6', '4', 0,
  /* 7640 */ 'C', 'O', 'N', 'S', 'T', '_', 'I', '6', '4', 0,
  /* 7650 */ 'G', 'E', '_', 'U', '_', 'I', '6', '4', 0,
  /* 7659 */ 'L', 'E', '_', 'U', '_', 'I', '6', '4', 0,
  /* 7668 */ 'R', 'E', 'M', '_', 'U', '_', 'I', '6', '4', 0,
  /* 7678 */ 'S', 'H', 'R', '_', 'U', '_', 'I', '6', '4', 0,
  /* 7688 */ 'G', 'T', '_', 'U', '_', 'I', '6', '4', 0,
  /* 7697 */ 'L', 'T', '_', 'U', '_', 'I', '6', '4', 0,
  /* 7706 */ 'F', '3', '2', '_', 'C', 'O', 'N', 'V', 'E', 'R', 'T', '_', 'U', '_', 'I', '6', '4', 0,
  /* 7724 */ 'F', '6', '4', '_', 'C', 'O', 'N', 'V', 'E', 'R', 'T', '_', 'U', '_', 'I', '6', '4', 0,
  /* 7742 */ 'D', 'I', 'V', '_', 'U', '_', 'I', '6', '4', 0,
  /* 7752 */ 'C', 'O', 'P', 'Y', '_', 'I', '6', '4', 0,
  /* 7761 */ 'C', 'L', 'Z', '_', 'I', '6', '4', 0,
  /* 7769 */ 'E', 'Q', 'Z', '_', 'I', '6', '4', 0,
  /* 7777 */ 'C', 'T', 'Z', '_', 'I', '6', '4', 0,
  /* 7785 */ 'A', 'R', 'G', 'U', 'M', 'E', 'N', 'T', '_', 'v', '2', 'f', '6', '4', 0,
  /* 7800 */ 'A', 'R', 'G', 'U', 'M', 'E', 'N', 'T', '_', 'f', '6', '4', 0,
  /* 7813 */ 'A', 'R', 'G', 'U', 'M', 'E', 'N', 'T', '_', 'v', '2', 'i', '6', '4', 0,
  /* 7828 */ 'A', 'R', 'G', 'U', 'M', 'E', 'N', 'T', '_', 'i', '6', '4', 0,
  /* 7841 */ 'C', 'O', 'N', 'S', 'T', '_', 'V', '1', '2', '8', '_', 'F', '3', '2', 'x', '4', 0,
  /* 7858 */ 'S', 'U', 'B', '_', 'F', '3', '2', 'x', '4', 0,
  /* 7868 */ 'T', 'R', 'U', 'N', 'C', '_', 'F', '3', '2', 'x', '4', 0,
  /* 7880 */ 'N', 'M', 'A', 'D', 'D', '_', 'F', '3', '2', 'x', '4', 0,
  /* 7892 */ 'G', 'E', '_', 'F', '3', '2', 'x', '4', 0,
  /* 7901 */ 'L', 'E', '_', 'F', '3', '2', 'x', '4', 0,
  /* 7910 */ 'R', 'E', 'P', 'L', 'A', 'C', 'E', '_', 'L', 'A', 'N', 'E', '_', 'F', '3', '2', 'x', '4', 0,
  /* 7929 */ 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'L', 'A', 'N', 'E', '_', 'F', '3', '2', 'x', '4', 0,
  /* 7948 */ 'N', 'E', 'G', '_', 'F', '3', '2', 'x', '4', 0,
  /* 7958 */ 'C', 'E', 'I', 'L', '_', 'F', '3', '2', 'x', '4', 0,
  /* 7969 */ 'M', 'U', 'L', '_', 'F', '3', '2', 'x', '4', 0,
  /* 7979 */ 'S', 'I', 'M', 'D', '_', 'R', 'E', 'L', 'A', 'X', 'E', 'D', '_', 'F', 'M', 'I', 'N', '_', 'F', '3', '2', 'x', '4', 0,
  /* 8003 */ 'P', 'M', 'I', 'N', '_', 'F', '3', '2', 'x', '4', 0,
  /* 8014 */ 'E', 'Q', '_', 'F', '3', '2', 'x', '4', 0,
  /* 8023 */ 'F', 'L', 'O', 'O', 'R', '_', 'F', '3', '2', 'x', '4', 0,
  /* 8035 */ 'A', 'B', 'S', '_', 'F', '3', '2', 'x', '4', 0,
  /* 8045 */ 'S', 'P', 'L', 'A', 'T', '_', 'F', '3', '2', 'x', '4', 0,
  /* 8057 */ 'G', 'T', '_', 'F', '3', '2', 'x', '4', 0,
  /* 8066 */ 'L', 'T', '_', 'F', '3', '2', 'x', '4', 0,
  /* 8075 */ 'S', 'Q', 'R', 'T', '_', 'F', '3', '2', 'x', '4', 0,
  /* 8086 */ 'N', 'E', 'A', 'R', 'E', 'S', 'T', '_', 'F', '3', '2', 'x', '4', 0,
  /* 8100 */ 'D', 'I', 'V', '_', 'F', '3', '2', 'x', '4', 0,
  /* 8110 */ 'S', 'I', 'M', 'D', '_', 'R', 'E', 'L', 'A', 'X', 'E', 'D', '_', 'F', 'M', 'A', 'X', '_', 'F', '3', '2', 'x', '4', 0,
  /* 8134 */ 'P', 'M', 'A', 'X', '_', 'F', '3', '2', 'x', '4', 0,
  /* 8145 */ 'd', 'e', 'm', 'o', 't', 'e', '_', 'z', 'e', 'r', 'o', '_', 'F', '3', '2', 'x', '4', 0,
  /* 8163 */ 's', 'i', 'n', 't', '_', 't', 'o', '_', 'f', 'p', '_', 'F', '3', '2', 'x', '4', 0,
  /* 8180 */ 'u', 'i', 'n', 't', '_', 't', 'o', '_', 'f', 'p', '_', 'F', '3', '2', 'x', '4', 0,
  /* 8197 */ 'C', 'O', 'N', 'S', 'T', '_', 'V', '1', '2', '8', '_', 'I', '3', '2', 'x', '4', 0,
  /* 8214 */ 'S', 'U', 'B', '_', 'I', '3', '2', 'x', '4', 0,
  /* 8224 */ 'A', 'D', 'D', '_', 'I', '3', '2', 'x', '4', 0,
  /* 8234 */ 'R', 'E', 'P', 'L', 'A', 'C', 'E', '_', 'L', 'A', 'N', 'E', '_', 'I', '3', '2', 'x', '4', 0,
  /* 8253 */ 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'L', 'A', 'N', 'E', '_', 'I', '3', '2', 'x', '4', 0,
  /* 8272 */ 'A', 'L', 'L', 'T', 'R', 'U', 'E', '_', 'I', '3', '2', 'x', '4', 0,
  /* 8286 */ 'N', 'E', 'G', '_', 'I', '3', '2', 'x', '4', 0,
  /* 8296 */ 'B', 'I', 'T', 'M', 'A', 'S', 'K', '_', 'I', '3', '2', 'x', '4', 0,
  /* 8310 */ 'S', 'H', 'L', '_', 'I', '3', '2', 'x', '4', 0,
  /* 8320 */ 'M', 'U', 'L', '_', 'I', '3', '2', 'x', '4', 0,
  /* 8330 */ 'E', 'Q', '_', 'I', '3', '2', 'x', '4', 0,
  /* 8339 */ 'A', 'B', 'S', '_', 'I', '3', '2', 'x', '4', 0,
  /* 8349 */ 'G', 'E', '_', 'S', '_', 'I', '3', '2', 'x', '4', 0,
  /* 8360 */ 'L', 'E', '_', 'S', '_', 'I', '3', '2', 'x', '4', 0,
  /* 8371 */ 'E', 'X', 'T', 'M', 'U', 'L', '_', 'H', 'I', 'G', 'H', '_', 'S', '_', 'I', '3', '2', 'x', '4', 0,
  /* 8391 */ 'M', 'I', 'N', '_', 'S', '_', 'I', '3', '2', 'x', '4', 0,
  /* 8403 */ 'S', 'H', 'R', '_', 'S', '_', 'I', '3', '2', 'x', '4', 0,
  /* 8415 */ 'G', 'T', '_', 'S', '_', 'I', '3', '2', 'x', '4', 0,
  /* 8426 */ 'L', 'T', '_', 'S', '_', 'I', '3', '2', 'x', '4', 0,
  /* 8437 */ 'E', 'X', 'T', 'M', 'U', 'L', '_', 'L', 'O', 'W', '_', 'S', '_', 'I', '3', '2', 'x', '4', 0,
  /* 8456 */ 'M', 'A', 'X', '_', 'S', '_', 'I', '3', '2', 'x', '4', 0,
  /* 8468 */ 'S', 'P', 'L', 'A', 'T', '_', 'I', '3', '2', 'x', '4', 0,
  /* 8480 */ 'L', 'A', 'N', 'E', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'I', '3', '2', 'x', '4', 0,
  /* 8497 */ 'G', 'E', '_', 'U', '_', 'I', '3', '2', 'x', '4', 0,
  /* 8508 */ 'L', 'E', '_', 'U', '_', 'I', '3', '2', 'x', '4', 0,
  /* 8519 */ 'E', 'X', 'T', 'M', 'U', 'L', '_', 'H', 'I', 'G', 'H', '_', 'U', '_', 'I', '3', '2', 'x', '4', 0,
  /* 8539 */ 'M', 'I', 'N', '_', 'U', '_', 'I', '3', '2', 'x', '4', 0,
  /* 8551 */ 'S', 'H', 'R', '_', 'U', '_', 'I', '3', '2', 'x', '4', 0,
  /* 8563 */ 'G', 'T', '_', 'U', '_', 'I', '3', '2', 'x', '4', 0,
  /* 8574 */ 'L', 'T', '_', 'U', '_', 'I', '3', '2', 'x', '4', 0,
  /* 8585 */ 'E', 'X', 'T', 'M', 'U', 'L', '_', 'L', 'O', 'W', '_', 'U', '_', 'I', '3', '2', 'x', '4', 0,
  /* 8604 */ 'M', 'A', 'X', '_', 'U', '_', 'I', '3', '2', 'x', '4', 0,
  /* 8616 */ 'i', 'n', 't', '_', 'w', 'a', 's', 'm', '_', 'r', 'e', 'l', 'a', 'x', 'e', 'd', '_', 't', 'r', 'u', 'n', 'c', '_', 's', 'i', 'g', 'n', 'e', 'd', '_', 'I', '3', '2', 'x', '4', 0,
  /* 8652 */ 'i', 'n', 't', '_', 'w', 'a', 's', 'm', '_', 'e', 'x', 't', 'a', 'd', 'd', '_', 'p', 'a', 'i', 'r', 'w', 'i', 's', 'e', '_', 's', 'i', 'g', 'n', 'e', 'd', '_', 'I', '3', '2', 'x', '4', 0,
  /* 8690 */ 'i', 'n', 't', '_', 'w', 'a', 's', 'm', '_', 'r', 'e', 'l', 'a', 'x', 'e', 'd', '_', 't', 'r', 'u', 'n', 'c', '_', 'u', 'n', 's', 'i', 'g', 'n', 'e', 'd', '_', 'I', '3', '2', 'x', '4', 0,
  /* 8728 */ 'i', 'n', 't', '_', 'w', 'a', 's', 'm', '_', 'e', 'x', 't', 'a', 'd', 'd', '_', 'p', 'a', 'i', 'r', 'w', 'i', 's', 'e', '_', 'u', 'n', 's', 'i', 'g', 'n', 'e', 'd', '_', 'I', '3', '2', 'x', '4', 0,
  /* 8768 */ 'i', 'n', 't', '_', 'w', 'a', 's', 'm', '_', 'r', 'e', 'l', 'a', 'x', 'e', 'd', '_', 't', 'r', 'u', 'n', 'c', '_', 's', 'i', 'g', 'n', 'e', 'd', '_', 'z', 'e', 'r', 'o', '_', 'I', '3', '2', 'x', '4', 0,
  /* 8809 */ 'i', 'n', 't', '_', 'w', 'a', 's', 'm', '_', 'r', 'e', 'l', 'a', 'x', 'e', 'd', '_', 't', 'r', 'u', 'n', 'c', '_', 'u', 'n', 's', 'i', 'g', 'n', 'e', 'd', '_', 'z', 'e', 'r', 'o', '_', 'I', '3', '2', 'x', '4', 0,
  /* 8852 */ 'e', 'x', 't', 'e', 'n', 'd', '_', 'h', 'i', 'g', 'h', '_', 's', '_', 'I', '3', '2', 'x', '4', 0,
  /* 8872 */ 't', 'r', 'u', 'n', 'c', '_', 's', 'a', 't', '_', 'z', 'e', 'r', 'o', '_', 's', '_', 'I', '3', '2', 'x', '4', 0,
  /* 8895 */ 'e', 'x', 't', 'e', 'n', 'd', '_', 'l', 'o', 'w', '_', 's', '_', 'I', '3', '2', 'x', '4', 0,
  /* 8914 */ 'f', 'p', '_', 't', 'o', '_', 's', 'i', 'n', 't', '_', 'I', '3', '2', 'x', '4', 0,
  /* 8931 */ 'f', 'p', '_', 't', 'o', '_', 'u', 'i', 'n', 't', '_', 'I', '3', '2', 'x', '4', 0,
  /* 8948 */ 'e', 'x', 't', 'e', 'n', 'd', '_', 'h', 'i', 'g', 'h', '_', 'u', '_', 'I', '3', '2', 'x', '4', 0,
  /* 8968 */ 't', 'r', 'u', 'n', 'c', '_', 's', 'a', 't', '_', 'z', 'e', 'r', 'o', '_', 'u', '_', 'I', '3', '2', 'x', '4', 0,
  /* 8991 */ 'e', 'x', 't', 'e', 'n', 'd', '_', 'l', 'o', 'w', '_', 'u', '_', 'I', '3', '2', 'x', '4', 0,
  /* 9010 */ 'A', 'R', 'G', 'U', 'M', 'E', 'N', 'T', '_', 'v', '8', 'i', '1', '6', 0,
  /* 9025 */ 'C', 'O', 'N', 'S', 'T', '_', 'V', '1', '2', '8', '_', 'I', '8', 'x', '1', '6', 0,
  /* 9042 */ 'S', 'U', 'B', '_', 'I', '8', 'x', '1', '6', 0,
  /* 9052 */ 'A', 'D', 'D', '_', 'I', '8', 'x', '1', '6', 0,
  /* 9062 */ 'R', 'E', 'P', 'L', 'A', 'C', 'E', '_', 'L', 'A', 'N', 'E', '_', 'I', '8', 'x', '1', '6', 0,
  /* 9081 */ 'A', 'L', 'L', 'T', 'R', 'U', 'E', '_', 'I', '8', 'x', '1', '6', 0,
  /* 9095 */ 'N', 'E', 'G', '_', 'I', '8', 'x', '1', '6', 0,
  /* 9105 */ 'B', 'I', 'T', 'M', 'A', 'S', 'K', '_', 'I', '8', 'x', '1', '6', 0,
  /* 9119 */ 'S', 'H', 'L', '_', 'I', '8', 'x', '1', '6', 0,
  /* 9129 */ 'E', 'Q', '_', 'I', '8', 'x', '1', '6', 0,
  /* 9138 */ 'A', 'B', 'S', '_', 'I', '8', 'x', '1', '6', 0,
  /* 9148 */ 'G', 'E', '_', 'S', '_', 'I', '8', 'x', '1', '6', 0,
  /* 9159 */ 'L', 'E', '_', 'S', '_', 'I', '8', 'x', '1', '6', 0,
  /* 9170 */ 'M', 'I', 'N', '_', 'S', '_', 'I', '8', 'x', '1', '6', 0,
  /* 9182 */ 'S', 'H', 'R', '_', 'S', '_', 'I', '8', 'x', '1', '6', 0,
  /* 9194 */ 'S', 'U', 'B', '_', 'S', 'A', 'T', '_', 'S', '_', 'I', '8', 'x', '1', '6', 0,
  /* 9210 */ 'A', 'D', 'D', '_', 'S', 'A', 'T', '_', 'S', '_', 'I', '8', 'x', '1', '6', 0,
  /* 9226 */ 'G', 'T', '_', 'S', '_', 'I', '8', 'x', '1', '6', 0,
  /* 9237 */ 'L', 'T', '_', 'S', '_', 'I', '8', 'x', '1', '6', 0,
  /* 9248 */ 'N', 'A', 'R', 'R', 'O', 'W', '_', 'S', '_', 'I', '8', 'x', '1', '6', 0,
  /* 9263 */ 'M', 'A', 'X', '_', 'S', '_', 'I', '8', 'x', '1', '6', 0,
  /* 9275 */ 'S', 'P', 'L', 'A', 'T', '_', 'I', '8', 'x', '1', '6', 0,
  /* 9287 */ 'L', 'A', 'N', 'E', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'I', '8', 'x', '1', '6', 0,
  /* 9304 */ 'P', 'O', 'P', 'C', 'N', 'T', '_', 'I', '8', 'x', '1', '6', 0,
  /* 9317 */ 'G', 'E', '_', 'U', '_', 'I', '8', 'x', '1', '6', 0,
  /* 9328 */ 'L', 'E', '_', 'U', '_', 'I', '8', 'x', '1', '6', 0,
  /* 9339 */ 'M', 'I', 'N', '_', 'U', '_', 'I', '8', 'x', '1', '6', 0,
  /* 9351 */ 'A', 'V', 'G', 'R', '_', 'U', '_', 'I', '8', 'x', '1', '6', 0,
  /* 9364 */ 'S', 'H', 'R', '_', 'U', '_', 'I', '8', 'x', '1', '6', 0,
  /* 9376 */ 'S', 'U', 'B', '_', 'S', 'A', 'T', '_', 'U', '_', 'I', '8', 'x', '1', '6', 0,
  /* 9392 */ 'A', 'D', 'D', '_', 'S', 'A', 'T', '_', 'U', '_', 'I', '8', 'x', '1', '6', 0,
  /* 9408 */ 'G', 'T', '_', 'U', '_', 'I', '8', 'x', '1', '6', 0,
  /* 9419 */ 'L', 'T', '_', 'U', '_', 'I', '8', 'x', '1', '6', 0,
  /* 9430 */ 'N', 'A', 'R', 'R', 'O', 'W', '_', 'U', '_', 'I', '8', 'x', '1', '6', 0,
  /* 9445 */ 'M', 'A', 'X', '_', 'U', '_', 'I', '8', 'x', '1', '6', 0,
  /* 9457 */ 'L', 'O', 'C', 'A', 'L', '_', 'T', 'E', 'E', '_', 'V', '1', '2', '8', 0,
  /* 9472 */ 'D', 'R', 'O', 'P', '_', 'V', '1', '2', '8', 0,
  /* 9482 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'V', '1', '2', '8', 0,
  /* 9494 */ 'G', 'L', 'O', 'B', 'A', 'L', '_', 'G', 'E', 'T', '_', 'V', '1', '2', '8', 0,
  /* 9510 */ 'L', 'O', 'C', 'A', 'L', '_', 'G', 'E', 'T', '_', 'V', '1', '2', '8', 0,
  /* 9525 */ 'G', 'L', 'O', 'B', 'A', 'L', '_', 'S', 'E', 'T', '_', 'V', '1', '2', '8', 0,
  /* 9541 */ 'L', 'O', 'C', 'A', 'L', '_', 'S', 'E', 'T', '_', 'V', '1', '2', '8', 0,
  /* 9556 */ 'C', 'O', 'P', 'Y', '_', 'V', '1', '2', '8', 0,
  /* 9566 */ 'A', 'R', 'G', 'U', 'M', 'E', 'N', 'T', '_', 'v', '1', '6', 'i', '8', 0,
  /* 9581 */ 'C', 'O', 'N', 'S', 'T', '_', 'V', '1', '2', '8', '_', 'I', '1', '6', 'x', '8', 0,
  /* 9598 */ 'S', 'U', 'B', '_', 'I', '1', '6', 'x', '8', 0,
  /* 9608 */ 'A', 'D', 'D', '_', 'I', '1', '6', 'x', '8', 0,
  /* 9618 */ 'R', 'E', 'P', 'L', 'A', 'C', 'E', '_', 'L', 'A', 'N', 'E', '_', 'I', '1', '6', 'x', '8', 0,
  /* 9637 */ 'A', 'L', 'L', 'T', 'R', 'U', 'E', '_', 'I', '1', '6', 'x', '8', 0,
  /* 9651 */ 'N', 'E', 'G', '_', 'I', '1', '6', 'x', '8', 0,
  /* 9661 */ 'B', 'I', 'T', 'M', 'A', 'S', 'K', '_', 'I', '1', '6', 'x', '8', 0,
  /* 9675 */ 'S', 'H', 'L', '_', 'I', '1', '6', 'x', '8', 0,
  /* 9685 */ 'M', 'U', 'L', '_', 'I', '1', '6', 'x', '8', 0,
  /* 9695 */ 'E', 'Q', '_', 'I', '1', '6', 'x', '8', 0,
  /* 9704 */ 'A', 'B', 'S', '_', 'I', '1', '6', 'x', '8', 0,
  /* 9714 */ 'G', 'E', '_', 'S', '_', 'I', '1', '6', 'x', '8', 0,
  /* 9725 */ 'L', 'E', '_', 'S', '_', 'I', '1', '6', 'x', '8', 0,
  /* 9736 */ 'E', 'X', 'T', 'M', 'U', 'L', '_', 'H', 'I', 'G', 'H', '_', 'S', '_', 'I', '1', '6', 'x', '8', 0,
  /* 9756 */ 'M', 'I', 'N', '_', 'S', '_', 'I', '1', '6', 'x', '8', 0,
  /* 9768 */ 'S', 'H', 'R', '_', 'S', '_', 'I', '1', '6', 'x', '8', 0,
  /* 9780 */ 'R', 'E', 'L', 'A', 'X', 'E', 'D', '_', 'Q', '1', '5', 'M', 'U', 'L', 'R', '_', 'S', '_', 'I', '1', '6', 'x', '8', 0,
  /* 9804 */ 'S', 'U', 'B', '_', 'S', 'A', 'T', '_', 'S', '_', 'I', '1', '6', 'x', '8', 0,
  /* 9820 */ 'A', 'D', 'D', '_', 'S', 'A', 'T', '_', 'S', '_', 'I', '1', '6', 'x', '8', 0,
  /* 9836 */ 'Q', '1', '5', 'M', 'U', 'L', 'R', '_', 'S', 'A', 'T', '_', 'S', '_', 'I', '1', '6', 'x', '8', 0,
  /* 9856 */ 'G', 'T', '_', 'S', '_', 'I', '1', '6', 'x', '8', 0,
  /* 9867 */ 'L', 'T', '_', 'S', '_', 'I', '1', '6', 'x', '8', 0,
  /* 9878 */ 'E', 'X', 'T', 'M', 'U', 'L', '_', 'L', 'O', 'W', '_', 'S', '_', 'I', '1', '6', 'x', '8', 0,
  /* 9897 */ 'N', 'A', 'R', 'R', 'O', 'W', '_', 'S', '_', 'I', '1', '6', 'x', '8', 0,
  /* 9912 */ 'M', 'A', 'X', '_', 'S', '_', 'I', '1', '6', 'x', '8', 0,
  /* 9924 */ 'S', 'P', 'L', 'A', 'T', '_', 'I', '1', '6', 'x', '8', 0,
  /* 9936 */ 'L', 'A', 'N', 'E', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'I', '1', '6', 'x', '8', 0,
  /* 9953 */ 'G', 'E', '_', 'U', '_', 'I', '1', '6', 'x', '8', 0,
  /* 9964 */ 'L', 'E', '_', 'U', '_', 'I', '1', '6', 'x', '8', 0,
  /* 9975 */ 'E', 'X', 'T', 'M', 'U', 'L', '_', 'H', 'I', 'G', 'H', '_', 'U', '_', 'I', '1', '6', 'x', '8', 0,
  /* 9995 */ 'M', 'I', 'N', '_', 'U', '_', 'I', '1', '6', 'x', '8', 0,
  /* 10007 */ 'A', 'V', 'G', 'R', '_', 'U', '_', 'I', '1', '6', 'x', '8', 0,
  /* 10020 */ 'S', 'H', 'R', '_', 'U', '_', 'I', '1', '6', 'x', '8', 0,
  /* 10032 */ 'S', 'U', 'B', '_', 'S', 'A', 'T', '_', 'U', '_', 'I', '1', '6', 'x', '8', 0,
  /* 10048 */ 'A', 'D', 'D', '_', 'S', 'A', 'T', '_', 'U', '_', 'I', '1', '6', 'x', '8', 0,
  /* 10064 */ 'G', 'T', '_', 'U', '_', 'I', '1', '6', 'x', '8', 0,
  /* 10075 */ 'L', 'T', '_', 'U', '_', 'I', '1', '6', 'x', '8', 0,
  /* 10086 */ 'E', 'X', 'T', 'M', 'U', 'L', '_', 'L', 'O', 'W', '_', 'U', '_', 'I', '1', '6', 'x', '8', 0,
  /* 10105 */ 'N', 'A', 'R', 'R', 'O', 'W', '_', 'U', '_', 'I', '1', '6', 'x', '8', 0,
  /* 10120 */ 'M', 'A', 'X', '_', 'U', '_', 'I', '1', '6', 'x', '8', 0,
  /* 10132 */ 'i', 'n', 't', '_', 'w', 'a', 's', 'm', '_', 'e', 'x', 't', 'a', 'd', 'd', '_', 'p', 'a', 'i', 'r', 'w', 'i', 's', 'e', '_', 's', 'i', 'g', 'n', 'e', 'd', '_', 'I', '1', '6', 'x', '8', 0,
  /* 10170 */ 'i', 'n', 't', '_', 'w', 'a', 's', 'm', '_', 'e', 'x', 't', 'a', 'd', 'd', '_', 'p', 'a', 'i', 'r', 'w', 'i', 's', 'e', '_', 'u', 'n', 's', 'i', 'g', 'n', 'e', 'd', '_', 'I', '1', '6', 'x', '8', 0,
  /* 10210 */ 'e', 'x', 't', 'e', 'n', 'd', '_', 'h', 'i', 'g', 'h', '_', 's', '_', 'I', '1', '6', 'x', '8', 0,
  /* 10230 */ 'e', 'x', 't', 'e', 'n', 'd', '_', 'l', 'o', 'w', '_', 's', '_', 'I', '1', '6', 'x', '8', 0,
  /* 10249 */ 'e', 'x', 't', 'e', 'n', 'd', '_', 'h', 'i', 'g', 'h', '_', 'u', '_', 'I', '1', '6', 'x', '8', 0,
  /* 10269 */ 'e', 'x', 't', 'e', 'n', 'd', '_', 'l', 'o', 'w', '_', 'u', '_', 'I', '1', '6', 'x', '8', 0,
  /* 10288 */ 'G', '_', 'F', 'M', 'A', 0,
  /* 10294 */ 'G', '_', 'S', 'T', 'R', 'I', 'C', 'T', '_', 'F', 'M', 'A', 0,
  /* 10307 */ 'G', '_', 'F', 'S', 'U', 'B', 0,
  /* 10314 */ 'G', '_', 'S', 'T', 'R', 'I', 'C', 'T', '_', 'F', 'S', 'U', 'B', 0,
  /* 10328 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'F', 'S', 'U', 'B', 0,
  /* 10345 */ 'G', '_', 'S', 'U', 'B', 0,
  /* 10351 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'S', 'U', 'B', 0,
  /* 10367 */ 'G', '_', 'I', 'N', 'T', 'R', 'I', 'N', 'S', 'I', 'C', 0,
  /* 10379 */ 'G', '_', 'F', 'P', 'T', 'R', 'U', 'N', 'C', 0,
  /* 10389 */ 'G', '_', 'I', 'N', 'T', 'R', 'I', 'N', 'S', 'I', 'C', '_', 'T', 'R', 'U', 'N', 'C', 0,
  /* 10407 */ 'G', '_', 'T', 'R', 'U', 'N', 'C', 0,
  /* 10415 */ 'G', '_', 'B', 'U', 'I', 'L', 'D', '_', 'V', 'E', 'C', 'T', 'O', 'R', '_', 'T', 'R', 'U', 'N', 'C', 0,
  /* 10436 */ 'G', '_', 'D', 'Y', 'N', '_', 'S', 'T', 'A', 'C', 'K', 'A', 'L', 'L', 'O', 'C', 0,
  /* 10453 */ 'G', '_', 'F', 'M', 'A', 'D', 0,
  /* 10460 */ 'G', '_', 'I', 'N', 'D', 'E', 'X', 'E', 'D', '_', 'S', 'E', 'X', 'T', 'L', 'O', 'A', 'D', 0,
  /* 10479 */ 'G', '_', 'S', 'E', 'X', 'T', 'L', 'O', 'A', 'D', 0,
  /* 10490 */ 'G', '_', 'I', 'N', 'D', 'E', 'X', 'E', 'D', '_', 'Z', 'E', 'X', 'T', 'L', 'O', 'A', 'D', 0,
  /* 10509 */ 'G', '_', 'Z', 'E', 'X', 'T', 'L', 'O', 'A', 'D', 0,
  /* 10520 */ 'G', '_', 'I', 'N', 'D', 'E', 'X', 'E', 'D', '_', 'L', 'O', 'A', 'D', 0,
  /* 10535 */ 'G', '_', 'L', 'O', 'A', 'D', 0,
  /* 10542 */ 'G', '_', 'V', 'E', 'C', 'R', 'E', 'D', 'U', 'C', 'E', '_', 'F', 'A', 'D', 'D', 0,
  /* 10559 */ 'G', '_', 'F', 'A', 'D', 'D', 0,
  /* 10566 */ 'G', '_', 'V', 'E', 'C', 'R', 'E', 'D', 'U', 'C', 'E', '_', 'S', 'E', 'Q', '_', 'F', 'A', 'D', 'D', 0,
  /* 10587 */ 'G', '_', 'S', 'T', 'R', 'I', 'C', 'T', '_', 'F', 'A', 'D', 'D', 0,
  /* 10601 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'F', 'A', 'D', 'D', 0,
  /* 10618 */ 'G', '_', 'V', 'E', 'C', 'R', 'E', 'D', 'U', 'C', 'E', '_', 'A', 'D', 'D', 0,
  /* 10634 */ 'G', '_', 'A', 'D', 'D', 0,
  /* 10640 */ 'G', '_', 'P', 'T', 'R', '_', 'A', 'D', 'D', 0,
  /* 10650 */ 'R', 'E', 'L', 'A', 'X', 'E', 'D', '_', 'D', 'O', 'T', '_', 'A', 'D', 'D', 0,
  /* 10666 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'A', 'D', 'D', 0,
  /* 10682 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'N', 'A', 'N', 'D', 0,
  /* 10699 */ 'G', '_', 'V', 'E', 'C', 'R', 'E', 'D', 'U', 'C', 'E', '_', 'A', 'N', 'D', 0,
  /* 10715 */ 'G', '_', 'A', 'N', 'D', 0,
  /* 10721 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'A', 'N', 'D', 0,
  /* 10737 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'E', 'N', 'D', 0,
  /* 10750 */ 'G', '_', 'B', 'R', 'C', 'O', 'N', 'D', 0,
  /* 10759 */ 'G', '_', 'L', 'L', 'R', 'O', 'U', 'N', 'D', 0,
  /* 10769 */ 'G', '_', 'L', 'R', 'O', 'U', 'N', 'D', 0,
  /* 10778 */ 'G', '_', 'I', 'N', 'T', 'R', 'I', 'N', 'S', 'I', 'C', '_', 'R', 'O', 'U', 'N', 'D', 0,
  /* 10796 */ 'G', '_', 'I', 'N', 'T', 'R', 'I', 'N', 'S', 'I', 'C', '_', 'F', 'P', 'T', 'R', 'U', 'N', 'C', '_', 'R', 'O', 'U', 'N', 'D', 0,
  /* 10822 */ 'L', 'O', 'A', 'D', '_', 'S', 'T', 'A', 'C', 'K', '_', 'G', 'U', 'A', 'R', 'D', 0,
  /* 10839 */ 'P', 'S', 'E', 'U', 'D', 'O', '_', 'P', 'R', 'O', 'B', 'E', 0,
  /* 10852 */ 'G', '_', 'S', 'S', 'U', 'B', 'E', 0,
  /* 10860 */ 'G', '_', 'U', 'S', 'U', 'B', 'E', 0,
  /* 10868 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'F', 'E', 'N', 'C', 'E', 0,
  /* 10881 */ 'G', '_', 'F', 'E', 'N', 'C', 'E', 0,
  /* 10889 */ 'A', 'R', 'I', 'T', 'H', '_', 'F', 'E', 'N', 'C', 'E', 0,
  /* 10901 */ 'C', 'O', 'M', 'P', 'I', 'L', 'E', 'R', '_', 'F', 'E', 'N', 'C', 'E', 0,
  /* 10916 */ 'R', 'E', 'G', '_', 'S', 'E', 'Q', 'U', 'E', 'N', 'C', 'E', 0,
  /* 10929 */ 'G', '_', 'S', 'A', 'D', 'D', 'E', 0,
  /* 10937 */ 'G', '_', 'U', 'A', 'D', 'D', 'E', 0,
  /* 10945 */ 'G', '_', 'F', 'M', 'I', 'N', 'N', 'U', 'M', '_', 'I', 'E', 'E', 'E', 0,
  /* 10960 */ 'G', '_', 'F', 'M', 'A', 'X', 'N', 'U', 'M', '_', 'I', 'E', 'E', 'E', 0,
  /* 10975 */ 'D', 'E', 'B', 'U', 'G', '_', 'U', 'N', 'R', 'E', 'A', 'C', 'H', 'A', 'B', 'L', 'E', 0,
  /* 10993 */ 'G', '_', 'J', 'U', 'M', 'P', '_', 'T', 'A', 'B', 'L', 'E', 0,
  /* 11006 */ 'B', 'U', 'N', 'D', 'L', 'E', 0,
  /* 11013 */ 'S', 'H', 'U', 'F', 'F', 'L', 'E', 0,
  /* 11021 */ 'R', 'E', 'L', 'A', 'X', 'E', 'D', '_', 'S', 'W', 'I', 'Z', 'Z', 'L', 'E', 0,
  /* 11037 */ 'G', '_', 'M', 'E', 'M', 'C', 'P', 'Y', '_', 'I', 'N', 'L', 'I', 'N', 'E', 0,
  /* 11053 */ 'L', 'O', 'C', 'A', 'L', '_', 'E', 'S', 'C', 'A', 'P', 'E', 0,
  /* 11066 */ 'G', '_', 'I', 'N', 'D', 'E', 'X', 'E', 'D', '_', 'S', 'T', 'O', 'R', 'E', 0,
  /* 11082 */ 'G', '_', 'S', 'T', 'O', 'R', 'E', 0,
  /* 11090 */ 'E', 'L', 'S', 'E', 0,
  /* 11095 */ 'G', '_', 'B', 'I', 'T', 'R', 'E', 'V', 'E', 'R', 'S', 'E', 0,
  /* 11108 */ 'D', 'E', 'L', 'E', 'G', 'A', 'T', 'E', 0,
  /* 11117 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 11127 */ 'G', '_', 'G', 'L', 'O', 'B', 'A', 'L', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 11142 */ 'A', 'N', 'Y', 'T', 'R', 'U', 'E', 0,
  /* 11150 */ 'G', '_', 'M', 'E', 'M', 'M', 'O', 'V', 'E', 0,
  /* 11160 */ 'G', '_', 'F', 'R', 'E', 'E', 'Z', 'E', 0,
  /* 11169 */ 'G', '_', 'F', 'C', 'A', 'N', 'O', 'N', 'I', 'C', 'A', 'L', 'I', 'Z', 'E', 0,
  /* 11185 */ 'T', 'A', 'B', 'L', 'E', '_', 'S', 'I', 'Z', 'E', 0,
  /* 11196 */ 'G', '_', 'C', 'T', 'L', 'Z', '_', 'Z', 'E', 'R', 'O', '_', 'U', 'N', 'D', 'E', 'F', 0,
  /* 11214 */ 'G', '_', 'C', 'T', 'T', 'Z', '_', 'Z', 'E', 'R', 'O', '_', 'U', 'N', 'D', 'E', 'F', 0,
  /* 11232 */ 'G', '_', 'I', 'M', 'P', 'L', 'I', 'C', 'I', 'T', '_', 'D', 'E', 'F', 0,
  /* 11247 */ 'L', 'O', 'C', 'A', 'L', '_', 'T', 'E', 'E', '_', 'F', 'U', 'N', 'C', 'R', 'E', 'F', 0,
  /* 11265 */ 'T', 'A', 'B', 'L', 'E', '_', 'F', 'I', 'L', 'L', '_', 'F', 'U', 'N', 'C', 'R', 'E', 'F', 0,
  /* 11284 */ 'R', 'E', 'F', '_', 'N', 'U', 'L', 'L', '_', 'F', 'U', 'N', 'C', 'R', 'E', 'F', 0,
  /* 11301 */ 'R', 'E', 'F', '_', 'I', 'S', '_', 'N', 'U', 'L', 'L', '_', 'F', 'U', 'N', 'C', 'R', 'E', 'F', 0,
  /* 11321 */ 'D', 'R', 'O', 'P', '_', 'F', 'U', 'N', 'C', 'R', 'E', 'F', 0,
  /* 11334 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'F', 'U', 'N', 'C', 'R', 'E', 'F', 0,
  /* 11349 */ 'T', 'A', 'B', 'L', 'E', '_', 'G', 'E', 'T', '_', 'F', 'U', 'N', 'C', 'R', 'E', 'F', 0,
  /* 11367 */ 'G', 'L', 'O', 'B', 'A', 'L', '_', 'G', 'E', 'T', '_', 'F', 'U', 'N', 'C', 'R', 'E', 'F', 0,
  /* 11386 */ 'L', 'O', 'C', 'A', 'L', '_', 'G', 'E', 'T', '_', 'F', 'U', 'N', 'C', 'R', 'E', 'F', 0,
  /* 11404 */ 'T', 'A', 'B', 'L', 'E', '_', 'S', 'E', 'T', '_', 'F', 'U', 'N', 'C', 'R', 'E', 'F', 0,
  /* 11422 */ 'G', 'L', 'O', 'B', 'A', 'L', '_', 'S', 'E', 'T', '_', 'F', 'U', 'N', 'C', 'R', 'E', 'F', 0,
  /* 11441 */ 'L', 'O', 'C', 'A', 'L', '_', 'S', 'E', 'T', '_', 'F', 'U', 'N', 'C', 'R', 'E', 'F', 0,
  /* 11459 */ 'T', 'A', 'B', 'L', 'E', '_', 'G', 'R', 'O', 'W', '_', 'F', 'U', 'N', 'C', 'R', 'E', 'F', 0,
  /* 11478 */ 'C', 'O', 'P', 'Y', '_', 'F', 'U', 'N', 'C', 'R', 'E', 'F', 0,
  /* 11491 */ 'L', 'O', 'C', 'A', 'L', '_', 'T', 'E', 'E', '_', 'E', 'X', 'T', 'E', 'R', 'N', 'R', 'E', 'F', 0,
  /* 11511 */ 'T', 'A', 'B', 'L', 'E', '_', 'F', 'I', 'L', 'L', '_', 'E', 'X', 'T', 'E', 'R', 'N', 'R', 'E', 'F', 0,
  /* 11532 */ 'R', 'E', 'F', '_', 'N', 'U', 'L', 'L', '_', 'E', 'X', 'T', 'E', 'R', 'N', 'R', 'E', 'F', 0,
  /* 11551 */ 'R', 'E', 'F', '_', 'I', 'S', '_', 'N', 'U', 'L', 'L', '_', 'E', 'X', 'T', 'E', 'R', 'N', 'R', 'E', 'F', 0,
  /* 11573 */ 'D', 'R', 'O', 'P', '_', 'E', 'X', 'T', 'E', 'R', 'N', 'R', 'E', 'F', 0,
  /* 11588 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'E', 'X', 'T', 'E', 'R', 'N', 'R', 'E', 'F', 0,
  /* 11605 */ 'T', 'A', 'B', 'L', 'E', '_', 'G', 'E', 'T', '_', 'E', 'X', 'T', 'E', 'R', 'N', 'R', 'E', 'F', 0,
  /* 11625 */ 'G', 'L', 'O', 'B', 'A', 'L', '_', 'G', 'E', 'T', '_', 'E', 'X', 'T', 'E', 'R', 'N', 'R', 'E', 'F', 0,
  /* 11646 */ 'L', 'O', 'C', 'A', 'L', '_', 'G', 'E', 'T', '_', 'E', 'X', 'T', 'E', 'R', 'N', 'R', 'E', 'F', 0,
  /* 11666 */ 'T', 'A', 'B', 'L', 'E', '_', 'S', 'E', 'T', '_', 'E', 'X', 'T', 'E', 'R', 'N', 'R', 'E', 'F', 0,
  /* 11686 */ 'G', 'L', 'O', 'B', 'A', 'L', '_', 'S', 'E', 'T', '_', 'E', 'X', 'T', 'E', 'R', 'N', 'R', 'E', 'F', 0,
  /* 11707 */ 'L', 'O', 'C', 'A', 'L', '_', 'S', 'E', 'T', '_', 'E', 'X', 'T', 'E', 'R', 'N', 'R', 'E', 'F', 0,
  /* 11727 */ 'T', 'A', 'B', 'L', 'E', '_', 'G', 'R', 'O', 'W', '_', 'E', 'X', 'T', 'E', 'R', 'N', 'R', 'E', 'F', 0,
  /* 11748 */ 'C', 'O', 'P', 'Y', '_', 'E', 'X', 'T', 'E', 'R', 'N', 'R', 'E', 'F', 0,
  /* 11763 */ 'D', 'B', 'G', '_', 'I', 'N', 'S', 'T', 'R', '_', 'R', 'E', 'F', 0,
  /* 11777 */ 'E', 'N', 'D', '_', 'I', 'F', 0,
  /* 11784 */ 'B', 'R', '_', 'I', 'F', 0,
  /* 11790 */ 'G', '_', 'F', 'N', 'E', 'G', 0,
  /* 11797 */ 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 11812 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 11826 */ 'G', '_', 'S', 'E', 'X', 'T', '_', 'I', 'N', 'R', 'E', 'G', 0,
  /* 11839 */ 'S', 'U', 'B', 'R', 'E', 'G', '_', 'T', 'O', '_', 'R', 'E', 'G', 0,
  /* 11853 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', 'X', 'C', 'H', 'G', 0,
  /* 11870 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'X', 'C', 'H', 'G', 0,
  /* 11887 */ 'G', '_', 'F', 'L', 'O', 'G', 0,
  /* 11894 */ 'G', '_', 'V', 'A', 'A', 'R', 'G', 0,
  /* 11902 */ 'P', 'R', 'E', 'A', 'L', 'L', 'O', 'C', 'A', 'T', 'E', 'D', '_', 'A', 'R', 'G', 0,
  /* 11919 */ 'C', 'A', 'T', 'C', 'H', 0,
  /* 11925 */ 'G', '_', 'S', 'M', 'U', 'L', 'H', 0,
  /* 11933 */ 'G', '_', 'U', 'M', 'U', 'L', 'H', 0,
  /* 11941 */ 'D', 'B', 'G', '_', 'P', 'H', 'I', 0,
  /* 11949 */ 'G', '_', 'F', 'P', 'T', 'O', 'S', 'I', 0,
  /* 11958 */ 'G', '_', 'F', 'P', 'T', 'O', 'U', 'I', 0,
  /* 11967 */ 'G', '_', 'F', 'P', 'O', 'W', 'I', 0,
  /* 11975 */ 'E', 'N', 'D', '_', 'B', 'L', 'O', 'C', 'K', 0,
  /* 11985 */ 'G', '_', 'P', 'T', 'R', 'M', 'A', 'S', 'K', 0,
  /* 11995 */ 'G', 'C', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 12004 */ 'D', 'B', 'G', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 12014 */ 'E', 'H', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 12023 */ 'A', 'N', 'N', 'O', 'T', 'A', 'T', 'I', 'O', 'N', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 12040 */ 'I', 'C', 'A', 'L', 'L', '_', 'B', 'R', 'A', 'N', 'C', 'H', '_', 'F', 'U', 'N', 'N', 'E', 'L', 0,
  /* 12060 */ 'G', '_', 'F', 'S', 'H', 'L', 0,
  /* 12067 */ 'G', '_', 'S', 'H', 'L', 0,
  /* 12073 */ 'G', '_', 'F', 'C', 'E', 'I', 'L', 0,
  /* 12081 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'T', 'A', 'I', 'L', '_', 'C', 'A', 'L', 'L', 0,
  /* 12101 */ 'R', 'E', 'T', '_', 'C', 'A', 'L', 'L', 0,
  /* 12110 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'T', 'Y', 'P', 'E', 'D', '_', 'E', 'V', 'E', 'N', 'T', '_', 'C', 'A', 'L', 'L', 0,
  /* 12137 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'E', 'V', 'E', 'N', 'T', '_', 'C', 'A', 'L', 'L', 0,
  /* 12158 */ 'F', 'E', 'N', 'T', 'R', 'Y', '_', 'C', 'A', 'L', 'L', 0,
  /* 12170 */ 'C', 'A', 'T', 'C', 'H', '_', 'A', 'L', 'L', 0,
  /* 12180 */ 'K', 'I', 'L', 'L', 0,
  /* 12185 */ 'G', '_', 'C', 'O', 'N', 'S', 'T', 'A', 'N', 'T', '_', 'P', 'O', 'O', 'L', 0,
  /* 12201 */ 'G', '_', 'R', 'O', 'T', 'L', 0,
  /* 12208 */ 'G', '_', 'V', 'E', 'C', 'R', 'E', 'D', 'U', 'C', 'E', '_', 'F', 'M', 'U', 'L', 0,
  /* 12225 */ 'G', '_', 'F', 'M', 'U', 'L', 0,
  /* 12232 */ 'G', '_', 'V', 'E', 'C', 'R', 'E', 'D', 'U', 'C', 'E', '_', 'S', 'E', 'Q', '_', 'F', 'M', 'U', 'L', 0,
  /* 12253 */ 'G', '_', 'S', 'T', 'R', 'I', 'C', 'T', '_', 'F', 'M', 'U', 'L', 0,
  /* 12267 */ 'G', '_', 'V', 'E', 'C', 'R', 'E', 'D', 'U', 'C', 'E', '_', 'M', 'U', 'L', 0,
  /* 12283 */ 'G', '_', 'M', 'U', 'L', 0,
  /* 12289 */ 'G', '_', 'F', 'R', 'E', 'M', 0,
  /* 12296 */ 'G', '_', 'S', 'T', 'R', 'I', 'C', 'T', '_', 'F', 'R', 'E', 'M', 0,
  /* 12310 */ 'G', '_', 'S', 'R', 'E', 'M', 0,
  /* 12317 */ 'G', '_', 'U', 'R', 'E', 'M', 0,
  /* 12324 */ 'G', '_', 'S', 'D', 'I', 'V', 'R', 'E', 'M', 0,
  /* 12334 */ 'G', '_', 'U', 'D', 'I', 'V', 'R', 'E', 'M', 0,
  /* 12344 */ 'I', 'N', 'L', 'I', 'N', 'E', 'A', 'S', 'M', 0,
  /* 12354 */ 'G', '_', 'F', 'M', 'I', 'N', 'I', 'M', 'U', 'M', 0,
  /* 12365 */ 'G', '_', 'F', 'M', 'A', 'X', 'I', 'M', 'U', 'M', 0,
  /* 12376 */ 'G', '_', 'F', 'M', 'I', 'N', 'N', 'U', 'M', 0,
  /* 12386 */ 'G', '_', 'F', 'M', 'A', 'X', 'N', 'U', 'M', 0,
  /* 12396 */ 'G', '_', 'I', 'N', 'T', 'R', 'I', 'N', 'S', 'I', 'C', '_', 'R', 'O', 'U', 'N', 'D', 'E', 'V', 'E', 'N', 0,
  /* 12418 */ 'G', '_', 'A', 'S', 'S', 'E', 'R', 'T', '_', 'A', 'L', 'I', 'G', 'N', 0,
  /* 12433 */ 'G', '_', 'F', 'C', 'O', 'P', 'Y', 'S', 'I', 'G', 'N', 0,
  /* 12445 */ 'G', '_', 'V', 'E', 'C', 'R', 'E', 'D', 'U', 'C', 'E', '_', 'F', 'M', 'I', 'N', 0,
  /* 12462 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'F', 'M', 'I', 'N', 0,
  /* 12479 */ 'G', '_', 'V', 'E', 'C', 'R', 'E', 'D', 'U', 'C', 'E', '_', 'S', 'M', 'I', 'N', 0,
  /* 12496 */ 'G', '_', 'S', 'M', 'I', 'N', 0,
  /* 12503 */ 'G', '_', 'V', 'E', 'C', 'R', 'E', 'D', 'U', 'C', 'E', '_', 'U', 'M', 'I', 'N', 0,
  /* 12520 */ 'G', '_', 'U', 'M', 'I', 'N', 0,
  /* 12527 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'U', 'M', 'I', 'N', 0,
  /* 12544 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'M', 'I', 'N', 0,
  /* 12560 */ 'G', '_', 'F', 'S', 'I', 'N', 0,
  /* 12567 */ 'E', 'N', 'D', '_', 'F', 'U', 'N', 'C', 'T', 'I', 'O', 'N', 0,
  /* 12580 */ 'C', 'F', 'I', '_', 'I', 'N', 'S', 'T', 'R', 'U', 'C', 'T', 'I', 'O', 'N', 0,
  /* 12596 */ 'F', 'A', 'L', 'L', 'T', 'H', 'R', 'O', 'U', 'G', 'H', '_', 'R', 'E', 'T', 'U', 'R', 'N', 0,
  /* 12615 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'D', 'O', 'W', 'N', 0,
  /* 12632 */ 'G', '_', 'S', 'S', 'U', 'B', 'O', 0,
  /* 12640 */ 'G', '_', 'U', 'S', 'U', 'B', 'O', 0,
  /* 12648 */ 'G', '_', 'S', 'A', 'D', 'D', 'O', 0,
  /* 12656 */ 'G', '_', 'U', 'A', 'D', 'D', 'O', 0,
  /* 12664 */ 'G', '_', 'S', 'M', 'U', 'L', 'O', 0,
  /* 12672 */ 'G', '_', 'U', 'M', 'U', 'L', 'O', 0,
  /* 12680 */ 'G', '_', 'B', 'Z', 'E', 'R', 'O', 0,
  /* 12688 */ 'S', 'T', 'A', 'C', 'K', 'M', 'A', 'P', 0,
  /* 12697 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'U', 'D', 'E', 'C', '_', 'W', 'R', 'A', 'P', 0,
  /* 12719 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'U', 'I', 'N', 'C', '_', 'W', 'R', 'A', 'P', 0,
  /* 12741 */ 'G', '_', 'B', 'S', 'W', 'A', 'P', 0,
  /* 12749 */ 'G', '_', 'S', 'I', 'T', 'O', 'F', 'P', 0,
  /* 12758 */ 'G', '_', 'U', 'I', 'T', 'O', 'F', 'P', 0,
  /* 12767 */ 'G', '_', 'F', 'C', 'M', 'P', 0,
  /* 12774 */ 'G', '_', 'I', 'C', 'M', 'P', 0,
  /* 12781 */ 'N', 'O', 'P', 0,
  /* 12785 */ 'E', 'N', 'D', '_', 'L', 'O', 'O', 'P', 0,
  /* 12794 */ 'G', '_', 'C', 'T', 'P', 'O', 'P', 0,
  /* 12802 */ 'a', 'n', 'o', 'n', 'y', 'm', 'o', 'u', 's', '_', '7', '7', '5', '2', 'D', 'A', 'T', 'A', '_', 'D', 'R', 'O', 'P', 0,
  /* 12826 */ 'a', 'n', 'o', 'n', 'y', 'm', 'o', 'u', 's', '_', '7', '7', '5', '3', 'D', 'A', 'T', 'A', '_', 'D', 'R', 'O', 'P', 0,
  /* 12850 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'O', 'P', 0,
  /* 12863 */ 'F', 'A', 'U', 'L', 'T', 'I', 'N', 'G', '_', 'O', 'P', 0,
  /* 12875 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'U', 'P', 0,
  /* 12890 */ 'P', 'R', 'E', 'A', 'L', 'L', 'O', 'C', 'A', 'T', 'E', 'D', '_', 'S', 'E', 'T', 'U', 'P', 0,
  /* 12909 */ 'G', '_', 'F', 'L', 'D', 'E', 'X', 'P', 0,
  /* 12918 */ 'G', '_', 'S', 'T', 'R', 'I', 'C', 'T', '_', 'F', 'L', 'D', 'E', 'X', 'P', 0,
  /* 12934 */ 'G', '_', 'F', 'E', 'X', 'P', 0,
  /* 12941 */ 'G', '_', 'F', 'F', 'R', 'E', 'X', 'P', 0,
  /* 12950 */ 'G', '_', 'B', 'R', 0,
  /* 12955 */ 'I', 'N', 'L', 'I', 'N', 'E', 'A', 'S', 'M', '_', 'B', 'R', 0,
  /* 12968 */ 'G', '_', 'B', 'L', 'O', 'C', 'K', '_', 'A', 'D', 'D', 'R', 0,
  /* 12981 */ 'M', 'E', 'M', 'B', 'A', 'R', 'R', 'I', 'E', 'R', 0,
  /* 12992 */ 'G', '_', 'C', 'O', 'N', 'S', 'T', 'A', 'N', 'T', '_', 'F', 'O', 'L', 'D', '_', 'B', 'A', 'R', 'R', 'I', 'E', 'R', 0,
  /* 13016 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'F', 'U', 'N', 'C', 'T', 'I', 'O', 'N', '_', 'E', 'N', 'T', 'E', 'R', 0,
  /* 13041 */ 'G', '_', 'R', 'E', 'A', 'D', 'C', 'Y', 'C', 'L', 'E', 'C', 'O', 'U', 'N', 'T', 'E', 'R', 0,
  /* 13060 */ 'G', '_', 'R', 'E', 'A', 'D', '_', 'R', 'E', 'G', 'I', 'S', 'T', 'E', 'R', 0,
  /* 13076 */ 'G', '_', 'W', 'R', 'I', 'T', 'E', '_', 'R', 'E', 'G', 'I', 'S', 'T', 'E', 'R', 0,
  /* 13093 */ 'G', '_', 'A', 'S', 'H', 'R', 0,
  /* 13100 */ 'G', '_', 'F', 'S', 'H', 'R', 0,
  /* 13107 */ 'G', '_', 'L', 'S', 'H', 'R', 0,
  /* 13114 */ 'G', '_', 'F', 'F', 'L', 'O', 'O', 'R', 0,
  /* 13123 */ 'G', '_', 'B', 'U', 'I', 'L', 'D', '_', 'V', 'E', 'C', 'T', 'O', 'R', 0,
  /* 13138 */ 'G', '_', 'S', 'H', 'U', 'F', 'F', 'L', 'E', '_', 'V', 'E', 'C', 'T', 'O', 'R', 0,
  /* 13155 */ 'G', '_', 'V', 'E', 'C', 'R', 'E', 'D', 'U', 'C', 'E', '_', 'X', 'O', 'R', 0,
  /* 13171 */ 'G', '_', 'X', 'O', 'R', 0,
  /* 13177 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'X', 'O', 'R', 0,
  /* 13193 */ 'G', '_', 'V', 'E', 'C', 'R', 'E', 'D', 'U', 'C', 'E', '_', 'O', 'R', 0,
  /* 13208 */ 'G', '_', 'O', 'R', 0,
  /* 13213 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'O', 'R', 0,
  /* 13228 */ 'G', '_', 'R', 'O', 'T', 'R', 0,
  /* 13235 */ 'G', '_', 'I', 'N', 'T', 'T', 'O', 'P', 'T', 'R', 0,
  /* 13246 */ 'G', '_', 'F', 'A', 'B', 'S', 0,
  /* 13253 */ 'G', '_', 'A', 'B', 'S', 0,
  /* 13259 */ 'G', '_', 'U', 'N', 'M', 'E', 'R', 'G', 'E', '_', 'V', 'A', 'L', 'U', 'E', 'S', 0,
  /* 13276 */ 'G', '_', 'M', 'E', 'R', 'G', 'E', '_', 'V', 'A', 'L', 'U', 'E', 'S', 0,
  /* 13291 */ 'C', 'A', 'L', 'L', '_', 'P', 'A', 'R', 'A', 'M', 'S', 0,
  /* 13303 */ 'G', '_', 'F', 'C', 'O', 'S', 0,
  /* 13310 */ 'G', '_', 'C', 'O', 'N', 'C', 'A', 'T', '_', 'V', 'E', 'C', 'T', 'O', 'R', 'S', 0,
  /* 13327 */ 'C', 'O', 'P', 'Y', '_', 'T', 'O', '_', 'R', 'E', 'G', 'C', 'L', 'A', 'S', 'S', 0,
  /* 13344 */ 'G', '_', 'I', 'S', '_', 'F', 'P', 'C', 'L', 'A', 'S', 'S', 0,
  /* 13357 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '_', 'W', 'I', 'T', 'H', '_', 'S', 'U', 'C', 'C', 'E', 'S', 'S', 0,
  /* 13387 */ 'B', 'R', '_', 'U', 'N', 'L', 'E', 'S', 'S', 0,
  /* 13397 */ 'G', '_', 'I', 'N', 'T', 'R', 'I', 'N', 'S', 'I', 'C', '_', 'W', '_', 'S', 'I', 'D', 'E', '_', 'E', 'F', 'F', 'E', 'C', 'T', 'S', 0,
  /* 13424 */ 'R', 'E', 'T', '_', 'C', 'A', 'L', 'L', '_', 'R', 'E', 'S', 'U', 'L', 'T', 'S', 0,
  /* 13441 */ 'L', 'O', 'A', 'D', '_', 'F', '3', '2', '_', 'A', '3', '2', '_', 'S', 0,
  /* 13456 */ 'S', 'T', 'O', 'R', 'E', '_', 'F', '3', '2', '_', 'A', '3', '2', '_', 'S', 0,
  /* 13472 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'T', 'O', 'R', 'E', '1', '6', '_', 'I', '3', '2', '_', 'A', '3', '2', '_', 'S', 0,
  /* 13497 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'T', 'O', 'R', 'E', '8', '_', 'I', '3', '2', '_', 'A', '3', '2', '_', 'S', 0,
  /* 13521 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'S', 'U', 'B', '_', 'I', '3', '2', '_', 'A', '3', '2', '_', 'S', 0,
  /* 13550 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'S', 'U', 'B', '_', 'I', '3', '2', '_', 'A', '3', '2', '_', 'S', 0,
  /* 13578 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'S', 'U', 'B', '_', 'I', '3', '2', '_', 'A', '3', '2', '_', 'S', 0,
  /* 13603 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'I', '3', '2', '_', 'A', '3', '2', '_', 'S', 0,
  /* 13625 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'A', 'D', 'D', '_', 'I', '3', '2', '_', 'A', '3', '2', '_', 'S', 0,
  /* 13654 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'A', 'D', 'D', '_', 'I', '3', '2', '_', 'A', '3', '2', '_', 'S', 0,
  /* 13682 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'A', 'D', 'D', '_', 'I', '3', '2', '_', 'A', '3', '2', '_', 'S', 0,
  /* 13707 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'A', 'N', 'D', '_', 'I', '3', '2', '_', 'A', '3', '2', '_', 'S', 0,
  /* 13736 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'A', 'N', 'D', '_', 'I', '3', '2', '_', 'A', '3', '2', '_', 'S', 0,
  /* 13764 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'A', 'N', 'D', '_', 'I', '3', '2', '_', 'A', '3', '2', '_', 'S', 0,
  /* 13789 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'T', 'O', 'R', 'E', '_', 'I', '3', '2', '_', 'A', '3', '2', '_', 'S', 0,
  /* 13812 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '_', 'I', '3', '2', '_', 'A', '3', '2', '_', 'S', 0,
  /* 13845 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '_', 'I', '3', '2', '_', 'A', '3', '2', '_', 'S', 0,
  /* 13877 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '_', 'I', '3', '2', '_', 'A', '3', '2', '_', 'S', 0,
  /* 13906 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'X', 'C', 'H', 'G', '_', 'I', '3', '2', '_', 'A', '3', '2', '_', 'S', 0,
  /* 13936 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'X', 'C', 'H', 'G', '_', 'I', '3', '2', '_', 'A', '3', '2', '_', 'S', 0,
  /* 13965 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'X', 'C', 'H', 'G', '_', 'I', '3', '2', '_', 'A', '3', '2', '_', 'S', 0,
  /* 13991 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'X', 'O', 'R', '_', 'I', '3', '2', '_', 'A', '3', '2', '_', 'S', 0,
  /* 14020 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'X', 'O', 'R', '_', 'I', '3', '2', '_', 'A', '3', '2', '_', 'S', 0,
  /* 14048 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'X', 'O', 'R', '_', 'I', '3', '2', '_', 'A', '3', '2', '_', 'S', 0,
  /* 14073 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'O', 'R', '_', 'I', '3', '2', '_', 'A', '3', '2', '_', 'S', 0,
  /* 14101 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'O', 'R', '_', 'I', '3', '2', '_', 'A', '3', '2', '_', 'S', 0,
  /* 14128 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'O', 'R', '_', 'I', '3', '2', '_', 'A', '3', '2', '_', 'S', 0,
  /* 14152 */ 'L', 'O', 'A', 'D', '1', '6', '_', 'S', '_', 'I', '3', '2', '_', 'A', '3', '2', '_', 'S', 0,
  /* 14171 */ 'L', 'O', 'A', 'D', '8', '_', 'S', '_', 'I', '3', '2', '_', 'A', '3', '2', '_', 'S', 0,
  /* 14189 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '1', '6', '_', 'U', '_', 'I', '3', '2', '_', 'A', '3', '2', '_', 'S', 0,
  /* 14215 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '8', '_', 'U', '_', 'I', '3', '2', '_', 'A', '3', '2', '_', 'S', 0,
  /* 14240 */ 'M', 'E', 'M', 'O', 'R', 'Y', '_', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'W', 'A', 'I', 'T', '3', '2', '_', 'A', '3', '2', '_', 'S', 0,
  /* 14267 */ 'L', 'O', 'A', 'D', '_', 'L', 'A', 'N', 'E', '_', 'I', '6', '4', 'x', '2', '_', 'A', '3', '2', '_', 'S', 0,
  /* 14289 */ 'S', 'T', 'O', 'R', 'E', '_', 'L', 'A', 'N', 'E', '_', 'I', '6', '4', 'x', '2', '_', 'A', '3', '2', '_', 'S', 0,
  /* 14312 */ 'L', 'O', 'A', 'D', '_', 'Z', 'E', 'R', 'O', '_', 'I', '6', '4', 'x', '2', '_', 'A', '3', '2', '_', 'S', 0,
  /* 14334 */ 'L', 'O', 'A', 'D', '_', 'E', 'X', 'T', 'E', 'N', 'D', '_', 'S', '_', 'I', '6', '4', 'x', '2', '_', 'A', '3', '2', '_', 'S', 0,
  /* 14360 */ 'L', 'O', 'A', 'D', '_', 'E', 'X', 'T', 'E', 'N', 'D', '_', 'U', '_', 'I', '6', '4', 'x', '2', '_', 'A', '3', '2', '_', 'S', 0,
  /* 14386 */ 'L', 'O', 'A', 'D', '_', 'F', '6', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 14401 */ 'S', 'T', 'O', 'R', 'E', '_', 'F', '6', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 14417 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'T', 'O', 'R', 'E', '3', '2', '_', 'I', '6', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 14442 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'T', 'O', 'R', 'E', '1', '6', '_', 'I', '6', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 14467 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'T', 'O', 'R', 'E', '8', '_', 'I', '6', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 14491 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '3', '2', '_', 'U', '_', 'S', 'U', 'B', '_', 'I', '6', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 14520 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'S', 'U', 'B', '_', 'I', '6', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 14549 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'S', 'U', 'B', '_', 'I', '6', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 14577 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'S', 'U', 'B', '_', 'I', '6', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 14602 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'I', '6', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 14624 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '3', '2', '_', 'U', '_', 'A', 'D', 'D', '_', 'I', '6', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 14653 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'A', 'D', 'D', '_', 'I', '6', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 14682 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'A', 'D', 'D', '_', 'I', '6', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 14710 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'A', 'D', 'D', '_', 'I', '6', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 14735 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '3', '2', '_', 'U', '_', 'A', 'N', 'D', '_', 'I', '6', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 14764 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'A', 'N', 'D', '_', 'I', '6', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 14793 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'A', 'N', 'D', '_', 'I', '6', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 14821 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'A', 'N', 'D', '_', 'I', '6', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 14846 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'T', 'O', 'R', 'E', '_', 'I', '6', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 14869 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '3', '2', '_', 'U', '_', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '_', 'I', '6', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 14902 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '_', 'I', '6', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 14935 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '_', 'I', '6', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 14967 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '_', 'I', '6', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 14996 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '3', '2', '_', 'U', '_', 'X', 'C', 'H', 'G', '_', 'I', '6', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 15026 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'X', 'C', 'H', 'G', '_', 'I', '6', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 15056 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'X', 'C', 'H', 'G', '_', 'I', '6', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 15085 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'X', 'C', 'H', 'G', '_', 'I', '6', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 15111 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '3', '2', '_', 'U', '_', 'X', 'O', 'R', '_', 'I', '6', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 15140 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'X', 'O', 'R', '_', 'I', '6', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 15169 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'X', 'O', 'R', '_', 'I', '6', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 15197 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'X', 'O', 'R', '_', 'I', '6', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 15222 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '3', '2', '_', 'U', '_', 'O', 'R', '_', 'I', '6', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 15250 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'O', 'R', '_', 'I', '6', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 15278 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'O', 'R', '_', 'I', '6', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 15305 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'O', 'R', '_', 'I', '6', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 15329 */ 'L', 'O', 'A', 'D', '3', '2', '_', 'S', '_', 'I', '6', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 15348 */ 'L', 'O', 'A', 'D', '1', '6', '_', 'S', '_', 'I', '6', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 15367 */ 'L', 'O', 'A', 'D', '8', '_', 'S', '_', 'I', '6', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 15385 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '3', '2', '_', 'U', '_', 'I', '6', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 15411 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '1', '6', '_', 'U', '_', 'I', '6', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 15437 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '8', '_', 'U', '_', 'I', '6', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 15462 */ 'M', 'E', 'M', 'O', 'R', 'Y', '_', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'W', 'A', 'I', 'T', '6', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 15489 */ 'L', 'O', 'A', 'D', '_', 'L', 'A', 'N', 'E', '_', 'I', '3', '2', 'x', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 15511 */ 'S', 'T', 'O', 'R', 'E', '_', 'L', 'A', 'N', 'E', '_', 'I', '3', '2', 'x', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 15534 */ 'L', 'O', 'A', 'D', '_', 'Z', 'E', 'R', 'O', '_', 'I', '3', '2', 'x', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 15556 */ 'L', 'O', 'A', 'D', '_', 'E', 'X', 'T', 'E', 'N', 'D', '_', 'S', '_', 'I', '3', '2', 'x', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 15582 */ 'L', 'O', 'A', 'D', '_', 'E', 'X', 'T', 'E', 'N', 'D', '_', 'U', '_', 'I', '3', '2', 'x', '4', '_', 'A', '3', '2', '_', 'S', 0,
  /* 15608 */ 'L', 'O', 'A', 'D', '_', 'L', 'A', 'N', 'E', '_', 'I', '8', 'x', '1', '6', '_', 'A', '3', '2', '_', 'S', 0,
  /* 15630 */ 'S', 'T', 'O', 'R', 'E', '_', 'L', 'A', 'N', 'E', '_', 'I', '8', 'x', '1', '6', '_', 'A', '3', '2', '_', 'S', 0,
  /* 15653 */ 'L', 'O', 'A', 'D', '_', 'V', '1', '2', '8', '_', 'A', '3', '2', '_', 'S', 0,
  /* 15669 */ 'S', 'T', 'O', 'R', 'E', '_', 'V', '1', '2', '8', '_', 'A', '3', '2', '_', 'S', 0,
  /* 15686 */ 'L', 'O', 'A', 'D', '_', 'L', 'A', 'N', 'E', '_', 'I', '1', '6', 'x', '8', '_', 'A', '3', '2', '_', 'S', 0,
  /* 15708 */ 'S', 'T', 'O', 'R', 'E', '_', 'L', 'A', 'N', 'E', '_', 'I', '1', '6', 'x', '8', '_', 'A', '3', '2', '_', 'S', 0,
  /* 15731 */ 'L', 'O', 'A', 'D', '_', 'E', 'X', 'T', 'E', 'N', 'D', '_', 'S', '_', 'I', '1', '6', 'x', '8', '_', 'A', '3', '2', '_', 'S', 0,
  /* 15757 */ 'L', 'O', 'A', 'D', '_', 'E', 'X', 'T', 'E', 'N', 'D', '_', 'U', '_', 'I', '1', '6', 'x', '8', '_', 'A', '3', '2', '_', 'S', 0,
  /* 15783 */ 'a', 'n', 'o', 'n', 'y', 'm', 'o', 'u', 's', '_', '7', '0', '7', '0', 'M', 'E', 'M', 'O', 'R', 'Y', '_', 'S', 'I', 'Z', 'E', '_', 'A', '3', '2', '_', 'S', 0,
  /* 15815 */ 'a', 'n', 'o', 'n', 'y', 'm', 'o', 'u', 's', '_', '7', '7', '5', '2', 'M', 'E', 'M', 'O', 'R', 'Y', '_', 'F', 'I', 'L', 'L', '_', 'A', '3', '2', '_', 'S', 0,
  /* 15847 */ 'L', 'O', 'A', 'D', '3', '2', '_', 'S', 'P', 'L', 'A', 'T', '_', 'A', '3', '2', '_', 'S', 0,
  /* 15866 */ 'L', 'O', 'A', 'D', '6', '4', '_', 'S', 'P', 'L', 'A', 'T', '_', 'A', '3', '2', '_', 'S', 0,
  /* 15885 */ 'L', 'O', 'A', 'D', '1', '6', '_', 'S', 'P', 'L', 'A', 'T', '_', 'A', '3', '2', '_', 'S', 0,
  /* 15904 */ 'L', 'O', 'A', 'D', '8', '_', 'S', 'P', 'L', 'A', 'T', '_', 'A', '3', '2', '_', 'S', 0,
  /* 15922 */ 'a', 'n', 'o', 'n', 'y', 'm', 'o', 'u', 's', '_', '7', '7', '5', '2', 'M', 'E', 'M', 'O', 'R', 'Y', '_', 'I', 'N', 'I', 'T', '_', 'A', '3', '2', '_', 'S', 0,
  /* 15954 */ 'a', 'n', 'o', 'n', 'y', 'm', 'o', 'u', 's', '_', '7', '0', '7', '0', 'M', 'E', 'M', 'O', 'R', 'Y', '_', 'G', 'R', 'O', 'W', '_', 'A', '3', '2', '_', 'S', 0,
  /* 15986 */ 'M', 'E', 'M', 'O', 'R', 'Y', '_', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'N', 'O', 'T', 'I', 'F', 'Y', '_', 'A', '3', '2', '_', 'S', 0,
  /* 16013 */ 'a', 'n', 'o', 'n', 'y', 'm', 'o', 'u', 's', '_', '7', '7', '5', '2', 'M', 'E', 'M', 'O', 'R', 'Y', '_', 'C', 'O', 'P', 'Y', '_', 'A', '3', '2', '_', 'S', 0,
  /* 16045 */ 'F', 'P', '_', 'T', 'O', '_', 'S', 'I', 'N', 'T', '_', 'I', '3', '2', '_', 'F', '3', '2', '_', 'S', 0,
  /* 16066 */ 'F', 'P', '_', 'T', 'O', '_', 'U', 'I', 'N', 'T', '_', 'I', '3', '2', '_', 'F', '3', '2', '_', 'S', 0,
  /* 16087 */ 'F', 'P', '_', 'T', 'O', '_', 'S', 'I', 'N', 'T', '_', 'I', '6', '4', '_', 'F', '3', '2', '_', 'S', 0,
  /* 16108 */ 'F', 'P', '_', 'T', 'O', '_', 'U', 'I', 'N', 'T', '_', 'I', '6', '4', '_', 'F', '3', '2', '_', 'S', 0,
  /* 16129 */ 'S', 'U', 'B', '_', 'F', '3', '2', '_', 'S', 0,
  /* 16139 */ 'T', 'R', 'U', 'N', 'C', '_', 'F', '3', '2', '_', 'S', 0,
  /* 16151 */ 'A', 'D', 'D', '_', 'F', '3', '2', '_', 'S', 0,
  /* 16161 */ 'L', 'O', 'C', 'A', 'L', '_', 'T', 'E', 'E', '_', 'F', '3', '2', '_', 'S', 0,
  /* 16177 */ 'G', 'E', '_', 'F', '3', '2', '_', 'S', 0,
  /* 16186 */ 'L', 'E', '_', 'F', '3', '2', '_', 'S', 0,
  /* 16195 */ 'N', 'E', '_', 'F', '3', '2', '_', 'S', 0,
  /* 16204 */ 'F', '6', '4', '_', 'P', 'R', 'O', 'M', 'O', 'T', 'E', '_', 'F', '3', '2', '_', 'S', 0,
  /* 16222 */ 'N', 'E', 'G', '_', 'F', '3', '2', '_', 'S', 0,
  /* 16232 */ 'C', 'E', 'I', 'L', '_', 'F', '3', '2', '_', 'S', 0,
  /* 16243 */ 'M', 'U', 'L', '_', 'F', '3', '2', '_', 'S', 0,
  /* 16253 */ 'C', 'O', 'P', 'Y', 'S', 'I', 'G', 'N', '_', 'F', '3', '2', '_', 'S', 0,
  /* 16268 */ 'M', 'I', 'N', '_', 'F', '3', '2', '_', 'S', 0,
  /* 16278 */ 'D', 'R', 'O', 'P', '_', 'F', '3', '2', '_', 'S', 0,
  /* 16289 */ 'E', 'Q', '_', 'F', '3', '2', '_', 'S', 0,
  /* 16298 */ 'F', 'L', 'O', 'O', 'R', '_', 'F', '3', '2', '_', 'S', 0,
  /* 16310 */ 'A', 'B', 'S', '_', 'F', '3', '2', '_', 'S', 0,
  /* 16320 */ 'I', '3', '2', '_', 'T', 'R', 'U', 'N', 'C', '_', 'S', '_', 'F', '3', '2', '_', 'S', 0,
  /* 16338 */ 'I', '6', '4', '_', 'T', 'R', 'U', 'N', 'C', '_', 'S', '_', 'F', '3', '2', '_', 'S', 0,
  /* 16356 */ 'I', '3', '2', '_', 'T', 'R', 'U', 'N', 'C', '_', 'S', '_', 'S', 'A', 'T', '_', 'F', '3', '2', '_', 'S', 0,
  /* 16378 */ 'I', '6', '4', '_', 'T', 'R', 'U', 'N', 'C', '_', 'S', '_', 'S', 'A', 'T', '_', 'F', '3', '2', '_', 'S', 0,
  /* 16400 */ 'I', '3', '2', '_', 'T', 'R', 'U', 'N', 'C', '_', 'U', '_', 'S', 'A', 'T', '_', 'F', '3', '2', '_', 'S', 0,
  /* 16422 */ 'I', '6', '4', '_', 'T', 'R', 'U', 'N', 'C', '_', 'U', '_', 'S', 'A', 'T', '_', 'F', '3', '2', '_', 'S', 0,
  /* 16444 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'F', '3', '2', '_', 'S', 0,
  /* 16457 */ 'G', 'L', 'O', 'B', 'A', 'L', '_', 'G', 'E', 'T', '_', 'F', '3', '2', '_', 'S', 0,
  /* 16474 */ 'L', 'O', 'C', 'A', 'L', '_', 'G', 'E', 'T', '_', 'F', '3', '2', '_', 'S', 0,
  /* 16490 */ 'I', '3', '2', '_', 'R', 'E', 'I', 'N', 'T', 'E', 'R', 'P', 'R', 'E', 'T', '_', 'F', '3', '2', '_', 'S', 0,
  /* 16512 */ 'G', 'L', 'O', 'B', 'A', 'L', '_', 'S', 'E', 'T', '_', 'F', '3', '2', '_', 'S', 0,
  /* 16529 */ 'L', 'O', 'C', 'A', 'L', '_', 'S', 'E', 'T', '_', 'F', '3', '2', '_', 'S', 0,
  /* 16545 */ 'G', 'T', '_', 'F', '3', '2', '_', 'S', 0,
  /* 16554 */ 'L', 'T', '_', 'F', '3', '2', '_', 'S', 0,
  /* 16563 */ 'S', 'Q', 'R', 'T', '_', 'F', '3', '2', '_', 'S', 0,
  /* 16574 */ 'N', 'E', 'A', 'R', 'E', 'S', 'T', '_', 'F', '3', '2', '_', 'S', 0,
  /* 16588 */ 'C', 'O', 'N', 'S', 'T', '_', 'F', '3', '2', '_', 'S', 0,
  /* 16600 */ 'I', '3', '2', '_', 'T', 'R', 'U', 'N', 'C', '_', 'U', '_', 'F', '3', '2', '_', 'S', 0,
  /* 16618 */ 'I', '6', '4', '_', 'T', 'R', 'U', 'N', 'C', '_', 'U', '_', 'F', '3', '2', '_', 'S', 0,
  /* 16636 */ 'D', 'I', 'V', '_', 'F', '3', '2', '_', 'S', 0,
  /* 16646 */ 'M', 'A', 'X', '_', 'F', '3', '2', '_', 'S', 0,
  /* 16656 */ 'C', 'O', 'P', 'Y', '_', 'F', '3', '2', '_', 'S', 0,
  /* 16667 */ 'S', 'U', 'B', '_', 'I', '3', '2', '_', 'S', 0,
  /* 16677 */ 'A', 'D', 'D', '_', 'I', '3', '2', '_', 'S', 0,
  /* 16687 */ 'A', 'N', 'D', '_', 'I', '3', '2', '_', 'S', 0,
  /* 16697 */ 'L', 'O', 'C', 'A', 'L', '_', 'T', 'E', 'E', '_', 'I', '3', '2', '_', 'S', 0,
  /* 16713 */ 'B', 'R', '_', 'T', 'A', 'B', 'L', 'E', '_', 'I', '3', '2', '_', 'S', 0,
  /* 16728 */ 'N', 'E', '_', 'I', '3', '2', '_', 'S', 0,
  /* 16737 */ 'S', 'H', 'L', '_', 'I', '3', '2', '_', 'S', 0,
  /* 16747 */ 'R', 'O', 'T', 'L', '_', 'I', '3', '2', '_', 'S', 0,
  /* 16758 */ 'M', 'U', 'L', '_', 'I', '3', '2', '_', 'S', 0,
  /* 16768 */ 'D', 'R', 'O', 'P', '_', 'I', '3', '2', '_', 'S', 0,
  /* 16779 */ 'E', 'Q', '_', 'I', '3', '2', '_', 'S', 0,
  /* 16788 */ 'X', 'O', 'R', '_', 'I', '3', '2', '_', 'S', 0,
  /* 16798 */ 'R', 'O', 'T', 'R', '_', 'I', '3', '2', '_', 'S', 0,
  /* 16809 */ 'I', '3', '2', '_', 'E', 'X', 'T', 'E', 'N', 'D', '1', '6', '_', 'S', '_', 'I', '3', '2', '_', 'S', 0,
  /* 16830 */ 'I', '3', '2', '_', 'E', 'X', 'T', 'E', 'N', 'D', '8', '_', 'S', '_', 'I', '3', '2', '_', 'S', 0,
  /* 16850 */ 'I', '6', '4', '_', 'E', 'X', 'T', 'E', 'N', 'D', '_', 'S', '_', 'I', '3', '2', '_', 'S', 0,
  /* 16869 */ 'G', 'E', '_', 'S', '_', 'I', '3', '2', '_', 'S', 0,
  /* 16880 */ 'L', 'E', '_', 'S', '_', 'I', '3', '2', '_', 'S', 0,
  /* 16891 */ 'R', 'E', 'M', '_', 'S', '_', 'I', '3', '2', '_', 'S', 0,
  /* 16903 */ 'S', 'H', 'R', '_', 'S', '_', 'I', '3', '2', '_', 'S', 0,
  /* 16915 */ 'G', 'T', '_', 'S', '_', 'I', '3', '2', '_', 'S', 0,
  /* 16926 */ 'L', 'T', '_', 'S', '_', 'I', '3', '2', '_', 'S', 0,
  /* 16937 */ 'F', '3', '2', '_', 'C', 'O', 'N', 'V', 'E', 'R', 'T', '_', 'S', '_', 'I', '3', '2', '_', 'S', 0,
  /* 16957 */ 'F', '6', '4', '_', 'C', 'O', 'N', 'V', 'E', 'R', 'T', '_', 'S', '_', 'I', '3', '2', '_', 'S', 0,
  /* 16977 */ 'D', 'I', 'V', '_', 'S', '_', 'I', '3', '2', '_', 'S', 0,
  /* 16989 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'I', '3', '2', '_', 'S', 0,
  /* 17002 */ 'G', 'L', 'O', 'B', 'A', 'L', '_', 'G', 'E', 'T', '_', 'I', '3', '2', '_', 'S', 0,
  /* 17019 */ 'L', 'O', 'C', 'A', 'L', '_', 'G', 'E', 'T', '_', 'I', '3', '2', '_', 'S', 0,
  /* 17035 */ 'F', '3', '2', '_', 'R', 'E', 'I', 'N', 'T', 'E', 'R', 'P', 'R', 'E', 'T', '_', 'I', '3', '2', '_', 'S', 0,
  /* 17057 */ 'G', 'L', 'O', 'B', 'A', 'L', '_', 'S', 'E', 'T', '_', 'I', '3', '2', '_', 'S', 0,
  /* 17074 */ 'L', 'O', 'C', 'A', 'L', '_', 'S', 'E', 'T', '_', 'I', '3', '2', '_', 'S', 0,
  /* 17090 */ 'P', 'O', 'P', 'C', 'N', 'T', '_', 'I', '3', '2', '_', 'S', 0,
  /* 17103 */ 'C', 'O', 'N', 'S', 'T', '_', 'I', '3', '2', '_', 'S', 0,
  /* 17115 */ 'I', '6', '4', '_', 'E', 'X', 'T', 'E', 'N', 'D', '_', 'U', '_', 'I', '3', '2', '_', 'S', 0,
  /* 17134 */ 'G', 'E', '_', 'U', '_', 'I', '3', '2', '_', 'S', 0,
  /* 17145 */ 'L', 'E', '_', 'U', '_', 'I', '3', '2', '_', 'S', 0,
  /* 17156 */ 'R', 'E', 'M', '_', 'U', '_', 'I', '3', '2', '_', 'S', 0,
  /* 17168 */ 'S', 'H', 'R', '_', 'U', '_', 'I', '3', '2', '_', 'S', 0,
  /* 17180 */ 'G', 'T', '_', 'U', '_', 'I', '3', '2', '_', 'S', 0,
  /* 17191 */ 'L', 'T', '_', 'U', '_', 'I', '3', '2', '_', 'S', 0,
  /* 17202 */ 'F', '3', '2', '_', 'C', 'O', 'N', 'V', 'E', 'R', 'T', '_', 'U', '_', 'I', '3', '2', '_', 'S', 0,
  /* 17222 */ 'F', '6', '4', '_', 'C', 'O', 'N', 'V', 'E', 'R', 'T', '_', 'U', '_', 'I', '3', '2', '_', 'S', 0,
  /* 17242 */ 'D', 'I', 'V', '_', 'U', '_', 'I', '3', '2', '_', 'S', 0,
  /* 17254 */ 'C', 'O', 'P', 'Y', '_', 'I', '3', '2', '_', 'S', 0,
  /* 17265 */ 'C', 'L', 'Z', '_', 'I', '3', '2', '_', 'S', 0,
  /* 17275 */ 'E', 'Q', 'Z', '_', 'I', '3', '2', '_', 'S', 0,
  /* 17285 */ 'C', 'T', 'Z', '_', 'I', '3', '2', '_', 'S', 0,
  /* 17295 */ 'A', 'R', 'G', 'U', 'M', 'E', 'N', 'T', '_', 'v', '4', 'f', '3', '2', '_', 'S', 0,
  /* 17312 */ 'A', 'R', 'G', 'U', 'M', 'E', 'N', 'T', '_', 'f', '3', '2', '_', 'S', 0,
  /* 17327 */ 'A', 'R', 'G', 'U', 'M', 'E', 'N', 'T', '_', 'v', '4', 'i', '3', '2', '_', 'S', 0,
  /* 17344 */ 'A', 'R', 'G', 'U', 'M', 'E', 'N', 'T', '_', 'i', '3', '2', '_', 'S', 0,
  /* 17359 */ 'C', 'O', 'N', 'S', 'T', '_', 'V', '1', '2', '8', '_', 'F', '6', '4', 'x', '2', '_', 'S', 0,
  /* 17378 */ 'S', 'U', 'B', '_', 'F', '6', '4', 'x', '2', '_', 'S', 0,
  /* 17390 */ 'T', 'R', 'U', 'N', 'C', '_', 'F', '6', '4', 'x', '2', '_', 'S', 0,
  /* 17404 */ 'N', 'M', 'A', 'D', 'D', '_', 'F', '6', '4', 'x', '2', '_', 'S', 0,
  /* 17418 */ 'G', 'E', '_', 'F', '6', '4', 'x', '2', '_', 'S', 0,
  /* 17429 */ 'L', 'E', '_', 'F', '6', '4', 'x', '2', '_', 'S', 0,
  /* 17440 */ 'R', 'E', 'P', 'L', 'A', 'C', 'E', '_', 'L', 'A', 'N', 'E', '_', 'F', '6', '4', 'x', '2', '_', 'S', 0,
  /* 17461 */ 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'L', 'A', 'N', 'E', '_', 'F', '6', '4', 'x', '2', '_', 'S', 0,
  /* 17482 */ 'N', 'E', 'G', '_', 'F', '6', '4', 'x', '2', '_', 'S', 0,
  /* 17494 */ 'C', 'E', 'I', 'L', '_', 'F', '6', '4', 'x', '2', '_', 'S', 0,
  /* 17507 */ 'M', 'U', 'L', '_', 'F', '6', '4', 'x', '2', '_', 'S', 0,
  /* 17519 */ 'S', 'I', 'M', 'D', '_', 'R', 'E', 'L', 'A', 'X', 'E', 'D', '_', 'F', 'M', 'I', 'N', '_', 'F', '6', '4', 'x', '2', '_', 'S', 0,
  /* 17545 */ 'P', 'M', 'I', 'N', '_', 'F', '6', '4', 'x', '2', '_', 'S', 0,
  /* 17558 */ 'E', 'Q', '_', 'F', '6', '4', 'x', '2', '_', 'S', 0,
  /* 17569 */ 'F', 'L', 'O', 'O', 'R', '_', 'F', '6', '4', 'x', '2', '_', 'S', 0,
  /* 17583 */ 'A', 'B', 'S', '_', 'F', '6', '4', 'x', '2', '_', 'S', 0,
  /* 17595 */ 'S', 'P', 'L', 'A', 'T', '_', 'F', '6', '4', 'x', '2', '_', 'S', 0,
  /* 17609 */ 'G', 'T', '_', 'F', '6', '4', 'x', '2', '_', 'S', 0,
  /* 17620 */ 'L', 'T', '_', 'F', '6', '4', 'x', '2', '_', 'S', 0,
  /* 17631 */ 'S', 'Q', 'R', 'T', '_', 'F', '6', '4', 'x', '2', '_', 'S', 0,
  /* 17644 */ 'N', 'E', 'A', 'R', 'E', 'S', 'T', '_', 'F', '6', '4', 'x', '2', '_', 'S', 0,
  /* 17660 */ 'D', 'I', 'V', '_', 'F', '6', '4', 'x', '2', '_', 'S', 0,
  /* 17672 */ 'S', 'I', 'M', 'D', '_', 'R', 'E', 'L', 'A', 'X', 'E', 'D', '_', 'F', 'M', 'A', 'X', '_', 'F', '6', '4', 'x', '2', '_', 'S', 0,
  /* 17698 */ 'P', 'M', 'A', 'X', '_', 'F', '6', '4', 'x', '2', '_', 'S', 0,
  /* 17711 */ 'c', 'o', 'n', 'v', 'e', 'r', 't', '_', 'l', 'o', 'w', '_', 's', '_', 'F', '6', '4', 'x', '2', '_', 'S', 0,
  /* 17733 */ 'c', 'o', 'n', 'v', 'e', 'r', 't', '_', 'l', 'o', 'w', '_', 'u', '_', 'F', '6', '4', 'x', '2', '_', 'S', 0,
  /* 17755 */ 'p', 'r', 'o', 'm', 'o', 't', 'e', '_', 'l', 'o', 'w', '_', 'F', '6', '4', 'x', '2', '_', 'S', 0,
  /* 17775 */ 'C', 'O', 'N', 'S', 'T', '_', 'V', '1', '2', '8', '_', 'I', '6', '4', 'x', '2', '_', 'S', 0,
  /* 17794 */ 'S', 'U', 'B', '_', 'I', '6', '4', 'x', '2', '_', 'S', 0,
  /* 17806 */ 'A', 'D', 'D', '_', 'I', '6', '4', 'x', '2', '_', 'S', 0,
  /* 17818 */ 'R', 'E', 'P', 'L', 'A', 'C', 'E', '_', 'L', 'A', 'N', 'E', '_', 'I', '6', '4', 'x', '2', '_', 'S', 0,
  /* 17839 */ 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'L', 'A', 'N', 'E', '_', 'I', '6', '4', 'x', '2', '_', 'S', 0,
  /* 17860 */ 'A', 'L', 'L', 'T', 'R', 'U', 'E', '_', 'I', '6', '4', 'x', '2', '_', 'S', 0,
  /* 17876 */ 'N', 'E', 'G', '_', 'I', '6', '4', 'x', '2', '_', 'S', 0,
  /* 17888 */ 'B', 'I', 'T', 'M', 'A', 'S', 'K', '_', 'I', '6', '4', 'x', '2', '_', 'S', 0,
  /* 17904 */ 'S', 'H', 'L', '_', 'I', '6', '4', 'x', '2', '_', 'S', 0,
  /* 17916 */ 'M', 'U', 'L', '_', 'I', '6', '4', 'x', '2', '_', 'S', 0,
  /* 17928 */ 'E', 'Q', '_', 'I', '6', '4', 'x', '2', '_', 'S', 0,
  /* 17939 */ 'A', 'B', 'S', '_', 'I', '6', '4', 'x', '2', '_', 'S', 0,
  /* 17951 */ 'G', 'E', '_', 'S', '_', 'I', '6', '4', 'x', '2', '_', 'S', 0,
  /* 17964 */ 'L', 'E', '_', 'S', '_', 'I', '6', '4', 'x', '2', '_', 'S', 0,
  /* 17977 */ 'E', 'X', 'T', 'M', 'U', 'L', '_', 'H', 'I', 'G', 'H', '_', 'S', '_', 'I', '6', '4', 'x', '2', '_', 'S', 0,
  /* 17999 */ 'S', 'H', 'R', '_', 'S', '_', 'I', '6', '4', 'x', '2', '_', 'S', 0,
  /* 18013 */ 'G', 'T', '_', 'S', '_', 'I', '6', '4', 'x', '2', '_', 'S', 0,
  /* 18026 */ 'L', 'T', '_', 'S', '_', 'I', '6', '4', 'x', '2', '_', 'S', 0,
  /* 18039 */ 'E', 'X', 'T', 'M', 'U', 'L', '_', 'L', 'O', 'W', '_', 'S', '_', 'I', '6', '4', 'x', '2', '_', 'S', 0,
  /* 18060 */ 'S', 'P', 'L', 'A', 'T', '_', 'I', '6', '4', 'x', '2', '_', 'S', 0,
  /* 18074 */ 'L', 'A', 'N', 'E', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'I', '6', '4', 'x', '2', '_', 'S', 0,
  /* 18093 */ 'E', 'X', 'T', 'M', 'U', 'L', '_', 'H', 'I', 'G', 'H', '_', 'U', '_', 'I', '6', '4', 'x', '2', '_', 'S', 0,
  /* 18115 */ 'S', 'H', 'R', '_', 'U', '_', 'I', '6', '4', 'x', '2', '_', 'S', 0,
  /* 18129 */ 'E', 'X', 'T', 'M', 'U', 'L', '_', 'L', 'O', 'W', '_', 'U', '_', 'I', '6', '4', 'x', '2', '_', 'S', 0,
  /* 18150 */ 'e', 'x', 't', 'e', 'n', 'd', '_', 'h', 'i', 'g', 'h', '_', 's', '_', 'I', '6', '4', 'x', '2', '_', 'S', 0,
  /* 18172 */ 'e', 'x', 't', 'e', 'n', 'd', '_', 'l', 'o', 'w', '_', 's', '_', 'I', '6', '4', 'x', '2', '_', 'S', 0,
  /* 18193 */ 'e', 'x', 't', 'e', 'n', 'd', '_', 'h', 'i', 'g', 'h', '_', 'u', '_', 'I', '6', '4', 'x', '2', '_', 'S', 0,
  /* 18215 */ 'e', 'x', 't', 'e', 'n', 'd', '_', 'l', 'o', 'w', '_', 'u', '_', 'I', '6', '4', 'x', '2', '_', 'S', 0,
  /* 18236 */ 'L', 'O', 'A', 'D', '_', 'F', '3', '2', '_', 'A', '6', '4', '_', 'S', 0,
  /* 18251 */ 'S', 'T', 'O', 'R', 'E', '_', 'F', '3', '2', '_', 'A', '6', '4', '_', 'S', 0,
  /* 18267 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'T', 'O', 'R', 'E', '1', '6', '_', 'I', '3', '2', '_', 'A', '6', '4', '_', 'S', 0,
  /* 18292 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'T', 'O', 'R', 'E', '8', '_', 'I', '3', '2', '_', 'A', '6', '4', '_', 'S', 0,
  /* 18316 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'S', 'U', 'B', '_', 'I', '3', '2', '_', 'A', '6', '4', '_', 'S', 0,
  /* 18345 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'S', 'U', 'B', '_', 'I', '3', '2', '_', 'A', '6', '4', '_', 'S', 0,
  /* 18373 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'S', 'U', 'B', '_', 'I', '3', '2', '_', 'A', '6', '4', '_', 'S', 0,
  /* 18398 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'I', '3', '2', '_', 'A', '6', '4', '_', 'S', 0,
  /* 18420 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'A', 'D', 'D', '_', 'I', '3', '2', '_', 'A', '6', '4', '_', 'S', 0,
  /* 18449 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'A', 'D', 'D', '_', 'I', '3', '2', '_', 'A', '6', '4', '_', 'S', 0,
  /* 18477 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'A', 'D', 'D', '_', 'I', '3', '2', '_', 'A', '6', '4', '_', 'S', 0,
  /* 18502 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'A', 'N', 'D', '_', 'I', '3', '2', '_', 'A', '6', '4', '_', 'S', 0,
  /* 18531 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'A', 'N', 'D', '_', 'I', '3', '2', '_', 'A', '6', '4', '_', 'S', 0,
  /* 18559 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'A', 'N', 'D', '_', 'I', '3', '2', '_', 'A', '6', '4', '_', 'S', 0,
  /* 18584 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'T', 'O', 'R', 'E', '_', 'I', '3', '2', '_', 'A', '6', '4', '_', 'S', 0,
  /* 18607 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '_', 'I', '3', '2', '_', 'A', '6', '4', '_', 'S', 0,
  /* 18640 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '_', 'I', '3', '2', '_', 'A', '6', '4', '_', 'S', 0,
  /* 18672 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '_', 'I', '3', '2', '_', 'A', '6', '4', '_', 'S', 0,
  /* 18701 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'X', 'C', 'H', 'G', '_', 'I', '3', '2', '_', 'A', '6', '4', '_', 'S', 0,
  /* 18731 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'X', 'C', 'H', 'G', '_', 'I', '3', '2', '_', 'A', '6', '4', '_', 'S', 0,
  /* 18760 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'X', 'C', 'H', 'G', '_', 'I', '3', '2', '_', 'A', '6', '4', '_', 'S', 0,
  /* 18786 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'X', 'O', 'R', '_', 'I', '3', '2', '_', 'A', '6', '4', '_', 'S', 0,
  /* 18815 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'X', 'O', 'R', '_', 'I', '3', '2', '_', 'A', '6', '4', '_', 'S', 0,
  /* 18843 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'X', 'O', 'R', '_', 'I', '3', '2', '_', 'A', '6', '4', '_', 'S', 0,
  /* 18868 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'O', 'R', '_', 'I', '3', '2', '_', 'A', '6', '4', '_', 'S', 0,
  /* 18896 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'O', 'R', '_', 'I', '3', '2', '_', 'A', '6', '4', '_', 'S', 0,
  /* 18923 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'O', 'R', '_', 'I', '3', '2', '_', 'A', '6', '4', '_', 'S', 0,
  /* 18947 */ 'L', 'O', 'A', 'D', '1', '6', '_', 'S', '_', 'I', '3', '2', '_', 'A', '6', '4', '_', 'S', 0,
  /* 18966 */ 'L', 'O', 'A', 'D', '8', '_', 'S', '_', 'I', '3', '2', '_', 'A', '6', '4', '_', 'S', 0,
  /* 18984 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '1', '6', '_', 'U', '_', 'I', '3', '2', '_', 'A', '6', '4', '_', 'S', 0,
  /* 19010 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '8', '_', 'U', '_', 'I', '3', '2', '_', 'A', '6', '4', '_', 'S', 0,
  /* 19035 */ 'M', 'E', 'M', 'O', 'R', 'Y', '_', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'W', 'A', 'I', 'T', '3', '2', '_', 'A', '6', '4', '_', 'S', 0,
  /* 19062 */ 'L', 'O', 'A', 'D', '_', 'L', 'A', 'N', 'E', '_', 'I', '6', '4', 'x', '2', '_', 'A', '6', '4', '_', 'S', 0,
  /* 19084 */ 'S', 'T', 'O', 'R', 'E', '_', 'L', 'A', 'N', 'E', '_', 'I', '6', '4', 'x', '2', '_', 'A', '6', '4', '_', 'S', 0,
  /* 19107 */ 'L', 'O', 'A', 'D', '_', 'Z', 'E', 'R', 'O', '_', 'I', '6', '4', 'x', '2', '_', 'A', '6', '4', '_', 'S', 0,
  /* 19129 */ 'L', 'O', 'A', 'D', '_', 'E', 'X', 'T', 'E', 'N', 'D', '_', 'S', '_', 'I', '6', '4', 'x', '2', '_', 'A', '6', '4', '_', 'S', 0,
  /* 19155 */ 'L', 'O', 'A', 'D', '_', 'E', 'X', 'T', 'E', 'N', 'D', '_', 'U', '_', 'I', '6', '4', 'x', '2', '_', 'A', '6', '4', '_', 'S', 0,
  /* 19181 */ 'L', 'O', 'A', 'D', '_', 'F', '6', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 19196 */ 'S', 'T', 'O', 'R', 'E', '_', 'F', '6', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 19212 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'T', 'O', 'R', 'E', '3', '2', '_', 'I', '6', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 19237 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'T', 'O', 'R', 'E', '1', '6', '_', 'I', '6', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 19262 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'T', 'O', 'R', 'E', '8', '_', 'I', '6', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 19286 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '3', '2', '_', 'U', '_', 'S', 'U', 'B', '_', 'I', '6', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 19315 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'S', 'U', 'B', '_', 'I', '6', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 19344 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'S', 'U', 'B', '_', 'I', '6', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 19372 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'S', 'U', 'B', '_', 'I', '6', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 19397 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'I', '6', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 19419 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '3', '2', '_', 'U', '_', 'A', 'D', 'D', '_', 'I', '6', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 19448 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'A', 'D', 'D', '_', 'I', '6', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 19477 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'A', 'D', 'D', '_', 'I', '6', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 19505 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'A', 'D', 'D', '_', 'I', '6', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 19530 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '3', '2', '_', 'U', '_', 'A', 'N', 'D', '_', 'I', '6', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 19559 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'A', 'N', 'D', '_', 'I', '6', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 19588 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'A', 'N', 'D', '_', 'I', '6', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 19616 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'A', 'N', 'D', '_', 'I', '6', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 19641 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'T', 'O', 'R', 'E', '_', 'I', '6', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 19664 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '3', '2', '_', 'U', '_', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '_', 'I', '6', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 19697 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '_', 'I', '6', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 19730 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '_', 'I', '6', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 19762 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '_', 'I', '6', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 19791 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '3', '2', '_', 'U', '_', 'X', 'C', 'H', 'G', '_', 'I', '6', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 19821 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'X', 'C', 'H', 'G', '_', 'I', '6', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 19851 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'X', 'C', 'H', 'G', '_', 'I', '6', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 19880 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'X', 'C', 'H', 'G', '_', 'I', '6', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 19906 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '3', '2', '_', 'U', '_', 'X', 'O', 'R', '_', 'I', '6', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 19935 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'X', 'O', 'R', '_', 'I', '6', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 19964 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'X', 'O', 'R', '_', 'I', '6', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 19992 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'X', 'O', 'R', '_', 'I', '6', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 20017 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '3', '2', '_', 'U', '_', 'O', 'R', '_', 'I', '6', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 20045 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '1', '6', '_', 'U', '_', 'O', 'R', '_', 'I', '6', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 20073 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '8', '_', 'U', '_', 'O', 'R', '_', 'I', '6', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 20100 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'R', 'M', 'W', '_', 'O', 'R', '_', 'I', '6', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 20124 */ 'L', 'O', 'A', 'D', '3', '2', '_', 'S', '_', 'I', '6', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 20143 */ 'L', 'O', 'A', 'D', '1', '6', '_', 'S', '_', 'I', '6', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 20162 */ 'L', 'O', 'A', 'D', '8', '_', 'S', '_', 'I', '6', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 20180 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '3', '2', '_', 'U', '_', 'I', '6', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 20206 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '1', '6', '_', 'U', '_', 'I', '6', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 20232 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '8', '_', 'U', '_', 'I', '6', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 20257 */ 'M', 'E', 'M', 'O', 'R', 'Y', '_', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'W', 'A', 'I', 'T', '6', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 20284 */ 'L', 'O', 'A', 'D', '_', 'L', 'A', 'N', 'E', '_', 'I', '3', '2', 'x', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 20306 */ 'S', 'T', 'O', 'R', 'E', '_', 'L', 'A', 'N', 'E', '_', 'I', '3', '2', 'x', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 20329 */ 'L', 'O', 'A', 'D', '_', 'Z', 'E', 'R', 'O', '_', 'I', '3', '2', 'x', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 20351 */ 'L', 'O', 'A', 'D', '_', 'E', 'X', 'T', 'E', 'N', 'D', '_', 'S', '_', 'I', '3', '2', 'x', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 20377 */ 'L', 'O', 'A', 'D', '_', 'E', 'X', 'T', 'E', 'N', 'D', '_', 'U', '_', 'I', '3', '2', 'x', '4', '_', 'A', '6', '4', '_', 'S', 0,
  /* 20403 */ 'L', 'O', 'A', 'D', '_', 'L', 'A', 'N', 'E', '_', 'I', '8', 'x', '1', '6', '_', 'A', '6', '4', '_', 'S', 0,
  /* 20425 */ 'S', 'T', 'O', 'R', 'E', '_', 'L', 'A', 'N', 'E', '_', 'I', '8', 'x', '1', '6', '_', 'A', '6', '4', '_', 'S', 0,
  /* 20448 */ 'L', 'O', 'A', 'D', '_', 'V', '1', '2', '8', '_', 'A', '6', '4', '_', 'S', 0,
  /* 20464 */ 'S', 'T', 'O', 'R', 'E', '_', 'V', '1', '2', '8', '_', 'A', '6', '4', '_', 'S', 0,
  /* 20481 */ 'L', 'O', 'A', 'D', '_', 'L', 'A', 'N', 'E', '_', 'I', '1', '6', 'x', '8', '_', 'A', '6', '4', '_', 'S', 0,
  /* 20503 */ 'S', 'T', 'O', 'R', 'E', '_', 'L', 'A', 'N', 'E', '_', 'I', '1', '6', 'x', '8', '_', 'A', '6', '4', '_', 'S', 0,
  /* 20526 */ 'L', 'O', 'A', 'D', '_', 'E', 'X', 'T', 'E', 'N', 'D', '_', 'S', '_', 'I', '1', '6', 'x', '8', '_', 'A', '6', '4', '_', 'S', 0,
  /* 20552 */ 'L', 'O', 'A', 'D', '_', 'E', 'X', 'T', 'E', 'N', 'D', '_', 'U', '_', 'I', '1', '6', 'x', '8', '_', 'A', '6', '4', '_', 'S', 0,
  /* 20578 */ 'a', 'n', 'o', 'n', 'y', 'm', 'o', 'u', 's', '_', '7', '0', '7', '1', 'M', 'E', 'M', 'O', 'R', 'Y', '_', 'S', 'I', 'Z', 'E', '_', 'A', '6', '4', '_', 'S', 0,
  /* 20610 */ 'a', 'n', 'o', 'n', 'y', 'm', 'o', 'u', 's', '_', '7', '7', '5', '3', 'M', 'E', 'M', 'O', 'R', 'Y', '_', 'F', 'I', 'L', 'L', '_', 'A', '6', '4', '_', 'S', 0,
  /* 20642 */ 'L', 'O', 'A', 'D', '3', '2', '_', 'S', 'P', 'L', 'A', 'T', '_', 'A', '6', '4', '_', 'S', 0,
  /* 20661 */ 'L', 'O', 'A', 'D', '6', '4', '_', 'S', 'P', 'L', 'A', 'T', '_', 'A', '6', '4', '_', 'S', 0,
  /* 20680 */ 'L', 'O', 'A', 'D', '1', '6', '_', 'S', 'P', 'L', 'A', 'T', '_', 'A', '6', '4', '_', 'S', 0,
  /* 20699 */ 'L', 'O', 'A', 'D', '8', '_', 'S', 'P', 'L', 'A', 'T', '_', 'A', '6', '4', '_', 'S', 0,
  /* 20717 */ 'a', 'n', 'o', 'n', 'y', 'm', 'o', 'u', 's', '_', '7', '7', '5', '3', 'M', 'E', 'M', 'O', 'R', 'Y', '_', 'I', 'N', 'I', 'T', '_', 'A', '6', '4', '_', 'S', 0,
  /* 20749 */ 'a', 'n', 'o', 'n', 'y', 'm', 'o', 'u', 's', '_', '7', '0', '7', '1', 'M', 'E', 'M', 'O', 'R', 'Y', '_', 'G', 'R', 'O', 'W', '_', 'A', '6', '4', '_', 'S', 0,
  /* 20781 */ 'M', 'E', 'M', 'O', 'R', 'Y', '_', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'N', 'O', 'T', 'I', 'F', 'Y', '_', 'A', '6', '4', '_', 'S', 0,
  /* 20808 */ 'a', 'n', 'o', 'n', 'y', 'm', 'o', 'u', 's', '_', '7', '7', '5', '3', 'M', 'E', 'M', 'O', 'R', 'Y', '_', 'C', 'O', 'P', 'Y', '_', 'A', '6', '4', '_', 'S', 0,
  /* 20840 */ 'F', 'P', '_', 'T', 'O', '_', 'S', 'I', 'N', 'T', '_', 'I', '3', '2', '_', 'F', '6', '4', '_', 'S', 0,
  /* 20861 */ 'F', 'P', '_', 'T', 'O', '_', 'U', 'I', 'N', 'T', '_', 'I', '3', '2', '_', 'F', '6', '4', '_', 'S', 0,
  /* 20882 */ 'F', 'P', '_', 'T', 'O', '_', 'S', 'I', 'N', 'T', '_', 'I', '6', '4', '_', 'F', '6', '4', '_', 'S', 0,
  /* 20903 */ 'F', 'P', '_', 'T', 'O', '_', 'U', 'I', 'N', 'T', '_', 'I', '6', '4', '_', 'F', '6', '4', '_', 'S', 0,
  /* 20924 */ 'S', 'U', 'B', '_', 'F', '6', '4', '_', 'S', 0,
  /* 20934 */ 'T', 'R', 'U', 'N', 'C', '_', 'F', '6', '4', '_', 'S', 0,
  /* 20946 */ 'A', 'D', 'D', '_', 'F', '6', '4', '_', 'S', 0,
  /* 20956 */ 'L', 'O', 'C', 'A', 'L', '_', 'T', 'E', 'E', '_', 'F', '6', '4', '_', 'S', 0,
  /* 20972 */ 'G', 'E', '_', 'F', '6', '4', '_', 'S', 0,
  /* 20981 */ 'L', 'E', '_', 'F', '6', '4', '_', 'S', 0,
  /* 20990 */ 'N', 'E', '_', 'F', '6', '4', '_', 'S', 0,
  /* 20999 */ 'F', '3', '2', '_', 'D', 'E', 'M', 'O', 'T', 'E', '_', 'F', '6', '4', '_', 'S', 0,
  /* 21016 */ 'N', 'E', 'G', '_', 'F', '6', '4', '_', 'S', 0,
  /* 21026 */ 'C', 'E', 'I', 'L', '_', 'F', '6', '4', '_', 'S', 0,
  /* 21037 */ 'M', 'U', 'L', '_', 'F', '6', '4', '_', 'S', 0,
  /* 21047 */ 'C', 'O', 'P', 'Y', 'S', 'I', 'G', 'N', '_', 'F', '6', '4', '_', 'S', 0,
  /* 21062 */ 'M', 'I', 'N', '_', 'F', '6', '4', '_', 'S', 0,
  /* 21072 */ 'D', 'R', 'O', 'P', '_', 'F', '6', '4', '_', 'S', 0,
  /* 21083 */ 'E', 'Q', '_', 'F', '6', '4', '_', 'S', 0,
  /* 21092 */ 'F', 'L', 'O', 'O', 'R', '_', 'F', '6', '4', '_', 'S', 0,
  /* 21104 */ 'A', 'B', 'S', '_', 'F', '6', '4', '_', 'S', 0,
  /* 21114 */ 'I', '3', '2', '_', 'T', 'R', 'U', 'N', 'C', '_', 'S', '_', 'F', '6', '4', '_', 'S', 0,
  /* 21132 */ 'I', '6', '4', '_', 'T', 'R', 'U', 'N', 'C', '_', 'S', '_', 'F', '6', '4', '_', 'S', 0,
  /* 21150 */ 'I', '3', '2', '_', 'T', 'R', 'U', 'N', 'C', '_', 'S', '_', 'S', 'A', 'T', '_', 'F', '6', '4', '_', 'S', 0,
  /* 21172 */ 'I', '6', '4', '_', 'T', 'R', 'U', 'N', 'C', '_', 'S', '_', 'S', 'A', 'T', '_', 'F', '6', '4', '_', 'S', 0,
  /* 21194 */ 'I', '3', '2', '_', 'T', 'R', 'U', 'N', 'C', '_', 'U', '_', 'S', 'A', 'T', '_', 'F', '6', '4', '_', 'S', 0,
  /* 21216 */ 'I', '6', '4', '_', 'T', 'R', 'U', 'N', 'C', '_', 'U', '_', 'S', 'A', 'T', '_', 'F', '6', '4', '_', 'S', 0,
  /* 21238 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'F', '6', '4', '_', 'S', 0,
  /* 21251 */ 'G', 'L', 'O', 'B', 'A', 'L', '_', 'G', 'E', 'T', '_', 'F', '6', '4', '_', 'S', 0,
  /* 21268 */ 'L', 'O', 'C', 'A', 'L', '_', 'G', 'E', 'T', '_', 'F', '6', '4', '_', 'S', 0,
  /* 21284 */ 'I', '6', '4', '_', 'R', 'E', 'I', 'N', 'T', 'E', 'R', 'P', 'R', 'E', 'T', '_', 'F', '6', '4', '_', 'S', 0,
  /* 21306 */ 'G', 'L', 'O', 'B', 'A', 'L', '_', 'S', 'E', 'T', '_', 'F', '6', '4', '_', 'S', 0,
  /* 21323 */ 'L', 'O', 'C', 'A', 'L', '_', 'S', 'E', 'T', '_', 'F', '6', '4', '_', 'S', 0,
  /* 21339 */ 'G', 'T', '_', 'F', '6', '4', '_', 'S', 0,
  /* 21348 */ 'L', 'T', '_', 'F', '6', '4', '_', 'S', 0,
  /* 21357 */ 'S', 'Q', 'R', 'T', '_', 'F', '6', '4', '_', 'S', 0,
  /* 21368 */ 'N', 'E', 'A', 'R', 'E', 'S', 'T', '_', 'F', '6', '4', '_', 'S', 0,
  /* 21382 */ 'C', 'O', 'N', 'S', 'T', '_', 'F', '6', '4', '_', 'S', 0,
  /* 21394 */ 'I', '3', '2', '_', 'T', 'R', 'U', 'N', 'C', '_', 'U', '_', 'F', '6', '4', '_', 'S', 0,
  /* 21412 */ 'I', '6', '4', '_', 'T', 'R', 'U', 'N', 'C', '_', 'U', '_', 'F', '6', '4', '_', 'S', 0,
  /* 21430 */ 'D', 'I', 'V', '_', 'F', '6', '4', '_', 'S', 0,
  /* 21440 */ 'M', 'A', 'X', '_', 'F', '6', '4', '_', 'S', 0,
  /* 21450 */ 'C', 'O', 'P', 'Y', '_', 'F', '6', '4', '_', 'S', 0,
  /* 21461 */ 'S', 'U', 'B', '_', 'I', '6', '4', '_', 'S', 0,
  /* 21471 */ 'A', 'D', 'D', '_', 'I', '6', '4', '_', 'S', 0,
  /* 21481 */ 'A', 'N', 'D', '_', 'I', '6', '4', '_', 'S', 0,
  /* 21491 */ 'L', 'O', 'C', 'A', 'L', '_', 'T', 'E', 'E', '_', 'I', '6', '4', '_', 'S', 0,
  /* 21507 */ 'B', 'R', '_', 'T', 'A', 'B', 'L', 'E', '_', 'I', '6', '4', '_', 'S', 0,
  /* 21522 */ 'N', 'E', '_', 'I', '6', '4', '_', 'S', 0,
  /* 21531 */ 'S', 'H', 'L', '_', 'I', '6', '4', '_', 'S', 0,
  /* 21541 */ 'R', 'O', 'T', 'L', '_', 'I', '6', '4', '_', 'S', 0,
  /* 21552 */ 'M', 'U', 'L', '_', 'I', '6', '4', '_', 'S', 0,
  /* 21562 */ 'I', '3', '2', '_', 'W', 'R', 'A', 'P', '_', 'I', '6', '4', '_', 'S', 0,
  /* 21577 */ 'D', 'R', 'O', 'P', '_', 'I', '6', '4', '_', 'S', 0,
  /* 21588 */ 'E', 'Q', '_', 'I', '6', '4', '_', 'S', 0,
  /* 21597 */ 'X', 'O', 'R', '_', 'I', '6', '4', '_', 'S', 0,
  /* 21607 */ 'R', 'O', 'T', 'R', '_', 'I', '6', '4', '_', 'S', 0,
  /* 21618 */ 'I', '6', '4', '_', 'E', 'X', 'T', 'E', 'N', 'D', '3', '2', '_', 'S', '_', 'I', '6', '4', '_', 'S', 0,
  /* 21639 */ 'I', '6', '4', '_', 'E', 'X', 'T', 'E', 'N', 'D', '1', '6', '_', 'S', '_', 'I', '6', '4', '_', 'S', 0,
  /* 21660 */ 'I', '6', '4', '_', 'E', 'X', 'T', 'E', 'N', 'D', '8', '_', 'S', '_', 'I', '6', '4', '_', 'S', 0,
  /* 21680 */ 'G', 'E', '_', 'S', '_', 'I', '6', '4', '_', 'S', 0,
  /* 21691 */ 'L', 'E', '_', 'S', '_', 'I', '6', '4', '_', 'S', 0,
  /* 21702 */ 'R', 'E', 'M', '_', 'S', '_', 'I', '6', '4', '_', 'S', 0,
  /* 21714 */ 'S', 'H', 'R', '_', 'S', '_', 'I', '6', '4', '_', 'S', 0,
  /* 21726 */ 'G', 'T', '_', 'S', '_', 'I', '6', '4', '_', 'S', 0,
  /* 21737 */ 'L', 'T', '_', 'S', '_', 'I', '6', '4', '_', 'S', 0,
  /* 21748 */ 'F', '3', '2', '_', 'C', 'O', 'N', 'V', 'E', 'R', 'T', '_', 'S', '_', 'I', '6', '4', '_', 'S', 0,
  /* 21768 */ 'F', '6', '4', '_', 'C', 'O', 'N', 'V', 'E', 'R', 'T', '_', 'S', '_', 'I', '6', '4', '_', 'S', 0,
  /* 21788 */ 'D', 'I', 'V', '_', 'S', '_', 'I', '6', '4', '_', 'S', 0,
  /* 21800 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'I', '6', '4', '_', 'S', 0,
  /* 21813 */ 'G', 'L', 'O', 'B', 'A', 'L', '_', 'G', 'E', 'T', '_', 'I', '6', '4', '_', 'S', 0,
  /* 21830 */ 'L', 'O', 'C', 'A', 'L', '_', 'G', 'E', 'T', '_', 'I', '6', '4', '_', 'S', 0,
  /* 21846 */ 'F', '6', '4', '_', 'R', 'E', 'I', 'N', 'T', 'E', 'R', 'P', 'R', 'E', 'T', '_', 'I', '6', '4', '_', 'S', 0,
  /* 21868 */ 'G', 'L', 'O', 'B', 'A', 'L', '_', 'S', 'E', 'T', '_', 'I', '6', '4', '_', 'S', 0,
  /* 21885 */ 'L', 'O', 'C', 'A', 'L', '_', 'S', 'E', 'T', '_', 'I', '6', '4', '_', 'S', 0,
  /* 21901 */ 'P', 'O', 'P', 'C', 'N', 'T', '_', 'I', '6', '4', '_', 'S', 0,
  /* 21914 */ 'C', 'O', 'N', 'S', 'T', '_', 'I', '6', '4', '_', 'S', 0,
  /* 21926 */ 'G', 'E', '_', 'U', '_', 'I', '6', '4', '_', 'S', 0,
  /* 21937 */ 'L', 'E', '_', 'U', '_', 'I', '6', '4', '_', 'S', 0,
  /* 21948 */ 'R', 'E', 'M', '_', 'U', '_', 'I', '6', '4', '_', 'S', 0,
  /* 21960 */ 'S', 'H', 'R', '_', 'U', '_', 'I', '6', '4', '_', 'S', 0,
  /* 21972 */ 'G', 'T', '_', 'U', '_', 'I', '6', '4', '_', 'S', 0,
  /* 21983 */ 'L', 'T', '_', 'U', '_', 'I', '6', '4', '_', 'S', 0,
  /* 21994 */ 'F', '3', '2', '_', 'C', 'O', 'N', 'V', 'E', 'R', 'T', '_', 'U', '_', 'I', '6', '4', '_', 'S', 0,
  /* 22014 */ 'F', '6', '4', '_', 'C', 'O', 'N', 'V', 'E', 'R', 'T', '_', 'U', '_', 'I', '6', '4', '_', 'S', 0,
  /* 22034 */ 'D', 'I', 'V', '_', 'U', '_', 'I', '6', '4', '_', 'S', 0,
  /* 22046 */ 'C', 'O', 'P', 'Y', '_', 'I', '6', '4', '_', 'S', 0,
  /* 22057 */ 'C', 'L', 'Z', '_', 'I', '6', '4', '_', 'S', 0,
  /* 22067 */ 'E', 'Q', 'Z', '_', 'I', '6', '4', '_', 'S', 0,
  /* 22077 */ 'C', 'T', 'Z', '_', 'I', '6', '4', '_', 'S', 0,
  /* 22087 */ 'A', 'R', 'G', 'U', 'M', 'E', 'N', 'T', '_', 'v', '2', 'f', '6', '4', '_', 'S', 0,
  /* 22104 */ 'A', 'R', 'G', 'U', 'M', 'E', 'N', 'T', '_', 'f', '6', '4', '_', 'S', 0,
  /* 22119 */ 'A', 'R', 'G', 'U', 'M', 'E', 'N', 'T', '_', 'v', '2', 'i', '6', '4', '_', 'S', 0,
  /* 22136 */ 'A', 'R', 'G', 'U', 'M', 'E', 'N', 'T', '_', 'i', '6', '4', '_', 'S', 0,
  /* 22151 */ 'C', 'O', 'N', 'S', 'T', '_', 'V', '1', '2', '8', '_', 'F', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22170 */ 'S', 'U', 'B', '_', 'F', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22182 */ 'T', 'R', 'U', 'N', 'C', '_', 'F', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22196 */ 'N', 'M', 'A', 'D', 'D', '_', 'F', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22210 */ 'G', 'E', '_', 'F', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22221 */ 'L', 'E', '_', 'F', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22232 */ 'R', 'E', 'P', 'L', 'A', 'C', 'E', '_', 'L', 'A', 'N', 'E', '_', 'F', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22253 */ 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'L', 'A', 'N', 'E', '_', 'F', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22274 */ 'N', 'E', 'G', '_', 'F', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22286 */ 'C', 'E', 'I', 'L', '_', 'F', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22299 */ 'M', 'U', 'L', '_', 'F', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22311 */ 'S', 'I', 'M', 'D', '_', 'R', 'E', 'L', 'A', 'X', 'E', 'D', '_', 'F', 'M', 'I', 'N', '_', 'F', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22337 */ 'P', 'M', 'I', 'N', '_', 'F', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22350 */ 'E', 'Q', '_', 'F', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22361 */ 'F', 'L', 'O', 'O', 'R', '_', 'F', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22375 */ 'A', 'B', 'S', '_', 'F', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22387 */ 'S', 'P', 'L', 'A', 'T', '_', 'F', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22401 */ 'G', 'T', '_', 'F', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22412 */ 'L', 'T', '_', 'F', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22423 */ 'S', 'Q', 'R', 'T', '_', 'F', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22436 */ 'N', 'E', 'A', 'R', 'E', 'S', 'T', '_', 'F', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22452 */ 'D', 'I', 'V', '_', 'F', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22464 */ 'S', 'I', 'M', 'D', '_', 'R', 'E', 'L', 'A', 'X', 'E', 'D', '_', 'F', 'M', 'A', 'X', '_', 'F', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22490 */ 'P', 'M', 'A', 'X', '_', 'F', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22503 */ 'd', 'e', 'm', 'o', 't', 'e', '_', 'z', 'e', 'r', 'o', '_', 'F', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22523 */ 's', 'i', 'n', 't', '_', 't', 'o', '_', 'f', 'p', '_', 'F', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22542 */ 'u', 'i', 'n', 't', '_', 't', 'o', '_', 'f', 'p', '_', 'F', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22561 */ 'C', 'O', 'N', 'S', 'T', '_', 'V', '1', '2', '8', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22580 */ 'S', 'U', 'B', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22592 */ 'A', 'D', 'D', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22604 */ 'R', 'E', 'P', 'L', 'A', 'C', 'E', '_', 'L', 'A', 'N', 'E', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22625 */ 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'L', 'A', 'N', 'E', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22646 */ 'A', 'L', 'L', 'T', 'R', 'U', 'E', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22662 */ 'N', 'E', 'G', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22674 */ 'B', 'I', 'T', 'M', 'A', 'S', 'K', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22690 */ 'S', 'H', 'L', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22702 */ 'M', 'U', 'L', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22714 */ 'E', 'Q', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22725 */ 'A', 'B', 'S', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22737 */ 'G', 'E', '_', 'S', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22750 */ 'L', 'E', '_', 'S', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22763 */ 'E', 'X', 'T', 'M', 'U', 'L', '_', 'H', 'I', 'G', 'H', '_', 'S', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22785 */ 'M', 'I', 'N', '_', 'S', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22799 */ 'S', 'H', 'R', '_', 'S', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22813 */ 'G', 'T', '_', 'S', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22826 */ 'L', 'T', '_', 'S', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22839 */ 'E', 'X', 'T', 'M', 'U', 'L', '_', 'L', 'O', 'W', '_', 'S', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22860 */ 'M', 'A', 'X', '_', 'S', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22874 */ 'S', 'P', 'L', 'A', 'T', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22888 */ 'L', 'A', 'N', 'E', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22907 */ 'G', 'E', '_', 'U', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22920 */ 'L', 'E', '_', 'U', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22933 */ 'E', 'X', 'T', 'M', 'U', 'L', '_', 'H', 'I', 'G', 'H', '_', 'U', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22955 */ 'M', 'I', 'N', '_', 'U', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22969 */ 'S', 'H', 'R', '_', 'U', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22983 */ 'G', 'T', '_', 'U', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 22996 */ 'L', 'T', '_', 'U', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 23009 */ 'E', 'X', 'T', 'M', 'U', 'L', '_', 'L', 'O', 'W', '_', 'U', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 23030 */ 'M', 'A', 'X', '_', 'U', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 23044 */ 'i', 'n', 't', '_', 'w', 'a', 's', 'm', '_', 'r', 'e', 'l', 'a', 'x', 'e', 'd', '_', 't', 'r', 'u', 'n', 'c', '_', 's', 'i', 'g', 'n', 'e', 'd', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 23082 */ 'i', 'n', 't', '_', 'w', 'a', 's', 'm', '_', 'e', 'x', 't', 'a', 'd', 'd', '_', 'p', 'a', 'i', 'r', 'w', 'i', 's', 'e', '_', 's', 'i', 'g', 'n', 'e', 'd', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 23122 */ 'i', 'n', 't', '_', 'w', 'a', 's', 'm', '_', 'r', 'e', 'l', 'a', 'x', 'e', 'd', '_', 't', 'r', 'u', 'n', 'c', '_', 'u', 'n', 's', 'i', 'g', 'n', 'e', 'd', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 23162 */ 'i', 'n', 't', '_', 'w', 'a', 's', 'm', '_', 'e', 'x', 't', 'a', 'd', 'd', '_', 'p', 'a', 'i', 'r', 'w', 'i', 's', 'e', '_', 'u', 'n', 's', 'i', 'g', 'n', 'e', 'd', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 23204 */ 'i', 'n', 't', '_', 'w', 'a', 's', 'm', '_', 'r', 'e', 'l', 'a', 'x', 'e', 'd', '_', 't', 'r', 'u', 'n', 'c', '_', 's', 'i', 'g', 'n', 'e', 'd', '_', 'z', 'e', 'r', 'o', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 23247 */ 'i', 'n', 't', '_', 'w', 'a', 's', 'm', '_', 'r', 'e', 'l', 'a', 'x', 'e', 'd', '_', 't', 'r', 'u', 'n', 'c', '_', 'u', 'n', 's', 'i', 'g', 'n', 'e', 'd', '_', 'z', 'e', 'r', 'o', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 23292 */ 'e', 'x', 't', 'e', 'n', 'd', '_', 'h', 'i', 'g', 'h', '_', 's', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 23314 */ 't', 'r', 'u', 'n', 'c', '_', 's', 'a', 't', '_', 'z', 'e', 'r', 'o', '_', 's', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 23339 */ 'e', 'x', 't', 'e', 'n', 'd', '_', 'l', 'o', 'w', '_', 's', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 23360 */ 'f', 'p', '_', 't', 'o', '_', 's', 'i', 'n', 't', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 23379 */ 'f', 'p', '_', 't', 'o', '_', 'u', 'i', 'n', 't', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 23398 */ 'e', 'x', 't', 'e', 'n', 'd', '_', 'h', 'i', 'g', 'h', '_', 'u', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 23420 */ 't', 'r', 'u', 'n', 'c', '_', 's', 'a', 't', '_', 'z', 'e', 'r', 'o', '_', 'u', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 23445 */ 'e', 'x', 't', 'e', 'n', 'd', '_', 'l', 'o', 'w', '_', 'u', '_', 'I', '3', '2', 'x', '4', '_', 'S', 0,
  /* 23466 */ 'A', 'R', 'G', 'U', 'M', 'E', 'N', 'T', '_', 'v', '8', 'i', '1', '6', '_', 'S', 0,
  /* 23483 */ 'C', 'O', 'N', 'S', 'T', '_', 'V', '1', '2', '8', '_', 'I', '8', 'x', '1', '6', '_', 'S', 0,
  /* 23502 */ 'S', 'U', 'B', '_', 'I', '8', 'x', '1', '6', '_', 'S', 0,
  /* 23514 */ 'A', 'D', 'D', '_', 'I', '8', 'x', '1', '6', '_', 'S', 0,
  /* 23526 */ 'R', 'E', 'P', 'L', 'A', 'C', 'E', '_', 'L', 'A', 'N', 'E', '_', 'I', '8', 'x', '1', '6', '_', 'S', 0,
  /* 23547 */ 'A', 'L', 'L', 'T', 'R', 'U', 'E', '_', 'I', '8', 'x', '1', '6', '_', 'S', 0,
  /* 23563 */ 'N', 'E', 'G', '_', 'I', '8', 'x', '1', '6', '_', 'S', 0,
  /* 23575 */ 'B', 'I', 'T', 'M', 'A', 'S', 'K', '_', 'I', '8', 'x', '1', '6', '_', 'S', 0,
  /* 23591 */ 'S', 'H', 'L', '_', 'I', '8', 'x', '1', '6', '_', 'S', 0,
  /* 23603 */ 'E', 'Q', '_', 'I', '8', 'x', '1', '6', '_', 'S', 0,
  /* 23614 */ 'A', 'B', 'S', '_', 'I', '8', 'x', '1', '6', '_', 'S', 0,
  /* 23626 */ 'G', 'E', '_', 'S', '_', 'I', '8', 'x', '1', '6', '_', 'S', 0,
  /* 23639 */ 'L', 'E', '_', 'S', '_', 'I', '8', 'x', '1', '6', '_', 'S', 0,
  /* 23652 */ 'M', 'I', 'N', '_', 'S', '_', 'I', '8', 'x', '1', '6', '_', 'S', 0,
  /* 23666 */ 'S', 'H', 'R', '_', 'S', '_', 'I', '8', 'x', '1', '6', '_', 'S', 0,
  /* 23680 */ 'S', 'U', 'B', '_', 'S', 'A', 'T', '_', 'S', '_', 'I', '8', 'x', '1', '6', '_', 'S', 0,
  /* 23698 */ 'A', 'D', 'D', '_', 'S', 'A', 'T', '_', 'S', '_', 'I', '8', 'x', '1', '6', '_', 'S', 0,
  /* 23716 */ 'G', 'T', '_', 'S', '_', 'I', '8', 'x', '1', '6', '_', 'S', 0,
  /* 23729 */ 'L', 'T', '_', 'S', '_', 'I', '8', 'x', '1', '6', '_', 'S', 0,
  /* 23742 */ 'N', 'A', 'R', 'R', 'O', 'W', '_', 'S', '_', 'I', '8', 'x', '1', '6', '_', 'S', 0,
  /* 23759 */ 'M', 'A', 'X', '_', 'S', '_', 'I', '8', 'x', '1', '6', '_', 'S', 0,
  /* 23773 */ 'S', 'P', 'L', 'A', 'T', '_', 'I', '8', 'x', '1', '6', '_', 'S', 0,
  /* 23787 */ 'L', 'A', 'N', 'E', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'I', '8', 'x', '1', '6', '_', 'S', 0,
  /* 23806 */ 'P', 'O', 'P', 'C', 'N', 'T', '_', 'I', '8', 'x', '1', '6', '_', 'S', 0,
  /* 23821 */ 'G', 'E', '_', 'U', '_', 'I', '8', 'x', '1', '6', '_', 'S', 0,
  /* 23834 */ 'L', 'E', '_', 'U', '_', 'I', '8', 'x', '1', '6', '_', 'S', 0,
  /* 23847 */ 'M', 'I', 'N', '_', 'U', '_', 'I', '8', 'x', '1', '6', '_', 'S', 0,
  /* 23861 */ 'A', 'V', 'G', 'R', '_', 'U', '_', 'I', '8', 'x', '1', '6', '_', 'S', 0,
  /* 23876 */ 'S', 'H', 'R', '_', 'U', '_', 'I', '8', 'x', '1', '6', '_', 'S', 0,
  /* 23890 */ 'S', 'U', 'B', '_', 'S', 'A', 'T', '_', 'U', '_', 'I', '8', 'x', '1', '6', '_', 'S', 0,
  /* 23908 */ 'A', 'D', 'D', '_', 'S', 'A', 'T', '_', 'U', '_', 'I', '8', 'x', '1', '6', '_', 'S', 0,
  /* 23926 */ 'G', 'T', '_', 'U', '_', 'I', '8', 'x', '1', '6', '_', 'S', 0,
  /* 23939 */ 'L', 'T', '_', 'U', '_', 'I', '8', 'x', '1', '6', '_', 'S', 0,
  /* 23952 */ 'N', 'A', 'R', 'R', 'O', 'W', '_', 'U', '_', 'I', '8', 'x', '1', '6', '_', 'S', 0,
  /* 23969 */ 'M', 'A', 'X', '_', 'U', '_', 'I', '8', 'x', '1', '6', '_', 'S', 0,
  /* 23983 */ 'L', 'O', 'C', 'A', 'L', '_', 'T', 'E', 'E', '_', 'V', '1', '2', '8', '_', 'S', 0,
  /* 24000 */ 'D', 'R', 'O', 'P', '_', 'V', '1', '2', '8', '_', 'S', 0,
  /* 24012 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'V', '1', '2', '8', '_', 'S', 0,
  /* 24026 */ 'G', 'L', 'O', 'B', 'A', 'L', '_', 'G', 'E', 'T', '_', 'V', '1', '2', '8', '_', 'S', 0,
  /* 24044 */ 'L', 'O', 'C', 'A', 'L', '_', 'G', 'E', 'T', '_', 'V', '1', '2', '8', '_', 'S', 0,
  /* 24061 */ 'G', 'L', 'O', 'B', 'A', 'L', '_', 'S', 'E', 'T', '_', 'V', '1', '2', '8', '_', 'S', 0,
  /* 24079 */ 'L', 'O', 'C', 'A', 'L', '_', 'S', 'E', 'T', '_', 'V', '1', '2', '8', '_', 'S', 0,
  /* 24096 */ 'C', 'O', 'P', 'Y', '_', 'V', '1', '2', '8', '_', 'S', 0,
  /* 24108 */ 'A', 'R', 'G', 'U', 'M', 'E', 'N', 'T', '_', 'v', '1', '6', 'i', '8', '_', 'S', 0,
  /* 24125 */ 'C', 'O', 'N', 'S', 'T', '_', 'V', '1', '2', '8', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24144 */ 'S', 'U', 'B', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24156 */ 'A', 'D', 'D', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24168 */ 'R', 'E', 'P', 'L', 'A', 'C', 'E', '_', 'L', 'A', 'N', 'E', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24189 */ 'A', 'L', 'L', 'T', 'R', 'U', 'E', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24205 */ 'N', 'E', 'G', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24217 */ 'B', 'I', 'T', 'M', 'A', 'S', 'K', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24233 */ 'S', 'H', 'L', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24245 */ 'M', 'U', 'L', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24257 */ 'E', 'Q', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24268 */ 'A', 'B', 'S', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24280 */ 'G', 'E', '_', 'S', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24293 */ 'L', 'E', '_', 'S', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24306 */ 'E', 'X', 'T', 'M', 'U', 'L', '_', 'H', 'I', 'G', 'H', '_', 'S', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24328 */ 'M', 'I', 'N', '_', 'S', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24342 */ 'S', 'H', 'R', '_', 'S', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24356 */ 'R', 'E', 'L', 'A', 'X', 'E', 'D', '_', 'Q', '1', '5', 'M', 'U', 'L', 'R', '_', 'S', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24382 */ 'S', 'U', 'B', '_', 'S', 'A', 'T', '_', 'S', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24400 */ 'A', 'D', 'D', '_', 'S', 'A', 'T', '_', 'S', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24418 */ 'Q', '1', '5', 'M', 'U', 'L', 'R', '_', 'S', 'A', 'T', '_', 'S', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24440 */ 'G', 'T', '_', 'S', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24453 */ 'L', 'T', '_', 'S', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24466 */ 'E', 'X', 'T', 'M', 'U', 'L', '_', 'L', 'O', 'W', '_', 'S', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24487 */ 'N', 'A', 'R', 'R', 'O', 'W', '_', 'S', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24504 */ 'M', 'A', 'X', '_', 'S', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24518 */ 'S', 'P', 'L', 'A', 'T', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24532 */ 'L', 'A', 'N', 'E', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24551 */ 'G', 'E', '_', 'U', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24564 */ 'L', 'E', '_', 'U', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24577 */ 'E', 'X', 'T', 'M', 'U', 'L', '_', 'H', 'I', 'G', 'H', '_', 'U', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24599 */ 'M', 'I', 'N', '_', 'U', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24613 */ 'A', 'V', 'G', 'R', '_', 'U', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24628 */ 'S', 'H', 'R', '_', 'U', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24642 */ 'S', 'U', 'B', '_', 'S', 'A', 'T', '_', 'U', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24660 */ 'A', 'D', 'D', '_', 'S', 'A', 'T', '_', 'U', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24678 */ 'G', 'T', '_', 'U', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24691 */ 'L', 'T', '_', 'U', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24704 */ 'E', 'X', 'T', 'M', 'U', 'L', '_', 'L', 'O', 'W', '_', 'U', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24725 */ 'N', 'A', 'R', 'R', 'O', 'W', '_', 'U', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24742 */ 'M', 'A', 'X', '_', 'U', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24756 */ 'i', 'n', 't', '_', 'w', 'a', 's', 'm', '_', 'e', 'x', 't', 'a', 'd', 'd', '_', 'p', 'a', 'i', 'r', 'w', 'i', 's', 'e', '_', 's', 'i', 'g', 'n', 'e', 'd', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24796 */ 'i', 'n', 't', '_', 'w', 'a', 's', 'm', '_', 'e', 'x', 't', 'a', 'd', 'd', '_', 'p', 'a', 'i', 'r', 'w', 'i', 's', 'e', '_', 'u', 'n', 's', 'i', 'g', 'n', 'e', 'd', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24838 */ 'e', 'x', 't', 'e', 'n', 'd', '_', 'h', 'i', 'g', 'h', '_', 's', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24860 */ 'e', 'x', 't', 'e', 'n', 'd', '_', 'l', 'o', 'w', '_', 's', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24881 */ 'e', 'x', 't', 'e', 'n', 'd', '_', 'h', 'i', 'g', 'h', '_', 'u', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24903 */ 'e', 'x', 't', 'e', 'n', 'd', '_', 'l', 'o', 'w', '_', 'u', '_', 'I', '1', '6', 'x', '8', '_', 'S', 0,
  /* 24924 */ 'R', 'E', 'L', 'A', 'X', 'E', 'D', '_', 'D', 'O', 'T', '_', 'A', 'D', 'D', '_', 'S', 0,
  /* 24942 */ 'A', 'N', 'D', '_', 'S', 0,
  /* 24948 */ 'E', 'N', 'D', '_', 'S', 0,
  /* 24954 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'F', 'E', 'N', 'C', 'E', '_', 'S', 0,
  /* 24969 */ 'C', 'O', 'M', 'P', 'I', 'L', 'E', 'R', '_', 'F', 'E', 'N', 'C', 'E', '_', 'S', 0,
  /* 24986 */ 'D', 'E', 'B', 'U', 'G', '_', 'U', 'N', 'R', 'E', 'A', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'S', 0,
  /* 25006 */ 'S', 'H', 'U', 'F', 'F', 'L', 'E', '_', 'S', 0,
  /* 25016 */ 'R', 'E', 'L', 'A', 'X', 'E', 'D', '_', 'S', 'W', 'I', 'Z', 'Z', 'L', 'E', '_', 'S', 0,
  /* 25034 */ 'E', 'L', 'S', 'E', '_', 'S', 0,
  /* 25041 */ 'D', 'E', 'L', 'E', 'G', 'A', 'T', 'E', '_', 'S', 0,
  /* 25052 */ 'A', 'N', 'Y', 'T', 'R', 'U', 'E', '_', 'S', 0,
  /* 25062 */ 'T', 'A', 'B', 'L', 'E', '_', 'S', 'I', 'Z', 'E', '_', 'S', 0,
  /* 25075 */ 'L', 'O', 'C', 'A', 'L', '_', 'T', 'E', 'E', '_', 'F', 'U', 'N', 'C', 'R', 'E', 'F', '_', 'S', 0,
  /* 25095 */ 'T', 'A', 'B', 'L', 'E', '_', 'F', 'I', 'L', 'L', '_', 'F', 'U', 'N', 'C', 'R', 'E', 'F', '_', 'S', 0,
  /* 25116 */ 'R', 'E', 'F', '_', 'N', 'U', 'L', 'L', '_', 'F', 'U', 'N', 'C', 'R', 'E', 'F', '_', 'S', 0,
  /* 25135 */ 'R', 'E', 'F', '_', 'I', 'S', '_', 'N', 'U', 'L', 'L', '_', 'F', 'U', 'N', 'C', 'R', 'E', 'F', '_', 'S', 0,
  /* 25157 */ 'D', 'R', 'O', 'P', '_', 'F', 'U', 'N', 'C', 'R', 'E', 'F', '_', 'S', 0,
  /* 25172 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'F', 'U', 'N', 'C', 'R', 'E', 'F', '_', 'S', 0,
  /* 25189 */ 'T', 'A', 'B', 'L', 'E', '_', 'G', 'E', 'T', '_', 'F', 'U', 'N', 'C', 'R', 'E', 'F', '_', 'S', 0,
  /* 25209 */ 'G', 'L', 'O', 'B', 'A', 'L', '_', 'G', 'E', 'T', '_', 'F', 'U', 'N', 'C', 'R', 'E', 'F', '_', 'S', 0,
  /* 25230 */ 'L', 'O', 'C', 'A', 'L', '_', 'G', 'E', 'T', '_', 'F', 'U', 'N', 'C', 'R', 'E', 'F', '_', 'S', 0,
  /* 25250 */ 'T', 'A', 'B', 'L', 'E', '_', 'S', 'E', 'T', '_', 'F', 'U', 'N', 'C', 'R', 'E', 'F', '_', 'S', 0,
  /* 25270 */ 'G', 'L', 'O', 'B', 'A', 'L', '_', 'S', 'E', 'T', '_', 'F', 'U', 'N', 'C', 'R', 'E', 'F', '_', 'S', 0,
  /* 25291 */ 'L', 'O', 'C', 'A', 'L', '_', 'S', 'E', 'T', '_', 'F', 'U', 'N', 'C', 'R', 'E', 'F', '_', 'S', 0,
  /* 25311 */ 'T', 'A', 'B', 'L', 'E', '_', 'G', 'R', 'O', 'W', '_', 'F', 'U', 'N', 'C', 'R', 'E', 'F', '_', 'S', 0,
  /* 25332 */ 'C', 'O', 'P', 'Y', '_', 'F', 'U', 'N', 'C', 'R', 'E', 'F', '_', 'S', 0,
  /* 25347 */ 'L', 'O', 'C', 'A', 'L', '_', 'T', 'E', 'E', '_', 'E', 'X', 'T', 'E', 'R', 'N', 'R', 'E', 'F', '_', 'S', 0,
  /* 25369 */ 'T', 'A', 'B', 'L', 'E', '_', 'F', 'I', 'L', 'L', '_', 'E', 'X', 'T', 'E', 'R', 'N', 'R', 'E', 'F', '_', 'S', 0,
  /* 25392 */ 'R', 'E', 'F', '_', 'N', 'U', 'L', 'L', '_', 'E', 'X', 'T', 'E', 'R', 'N', 'R', 'E', 'F', '_', 'S', 0,
  /* 25413 */ 'R', 'E', 'F', '_', 'I', 'S', '_', 'N', 'U', 'L', 'L', '_', 'E', 'X', 'T', 'E', 'R', 'N', 'R', 'E', 'F', '_', 'S', 0,
  /* 25437 */ 'D', 'R', 'O', 'P', '_', 'E', 'X', 'T', 'E', 'R', 'N', 'R', 'E', 'F', '_', 'S', 0,
  /* 25454 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'E', 'X', 'T', 'E', 'R', 'N', 'R', 'E', 'F', '_', 'S', 0,
  /* 25473 */ 'T', 'A', 'B', 'L', 'E', '_', 'G', 'E', 'T', '_', 'E', 'X', 'T', 'E', 'R', 'N', 'R', 'E', 'F', '_', 'S', 0,
  /* 25495 */ 'G', 'L', 'O', 'B', 'A', 'L', '_', 'G', 'E', 'T', '_', 'E', 'X', 'T', 'E', 'R', 'N', 'R', 'E', 'F', '_', 'S', 0,
  /* 25518 */ 'L', 'O', 'C', 'A', 'L', '_', 'G', 'E', 'T', '_', 'E', 'X', 'T', 'E', 'R', 'N', 'R', 'E', 'F', '_', 'S', 0,
  /* 25540 */ 'T', 'A', 'B', 'L', 'E', '_', 'S', 'E', 'T', '_', 'E', 'X', 'T', 'E', 'R', 'N', 'R', 'E', 'F', '_', 'S', 0,
  /* 25562 */ 'G', 'L', 'O', 'B', 'A', 'L', '_', 'S', 'E', 'T', '_', 'E', 'X', 'T', 'E', 'R', 'N', 'R', 'E', 'F', '_', 'S', 0,
  /* 25585 */ 'L', 'O', 'C', 'A', 'L', '_', 'S', 'E', 'T', '_', 'E', 'X', 'T', 'E', 'R', 'N', 'R', 'E', 'F', '_', 'S', 0,
  /* 25607 */ 'T', 'A', 'B', 'L', 'E', '_', 'G', 'R', 'O', 'W', '_', 'E', 'X', 'T', 'E', 'R', 'N', 'R', 'E', 'F', '_', 'S', 0,
  /* 25630 */ 'C', 'O', 'P', 'Y', '_', 'E', 'X', 'T', 'E', 'R', 'N', 'R', 'E', 'F', '_', 'S', 0,
  /* 25647 */ 'E', 'N', 'D', '_', 'I', 'F', '_', 'S', 0,
  /* 25656 */ 'B', 'R', '_', 'I', 'F', '_', 'S', 0,
  /* 25664 */ 'C', 'A', 'T', 'C', 'H', '_', 'S', 0,
  /* 25672 */ 'E', 'N', 'D', '_', 'B', 'L', 'O', 'C', 'K', '_', 'S', 0,
  /* 25684 */ 'R', 'E', 'T', '_', 'C', 'A', 'L', 'L', '_', 'S', 0,
  /* 25695 */ 'C', 'A', 'T', 'C', 'H', '_', 'A', 'L', 'L', '_', 'S', 0,
  /* 25707 */ 'E', 'N', 'D', '_', 'F', 'U', 'N', 'C', 'T', 'I', 'O', 'N', '_', 'S', 0,
  /* 25722 */ 'F', 'A', 'L', 'L', 'T', 'H', 'R', 'O', 'U', 'G', 'H', '_', 'R', 'E', 'T', 'U', 'R', 'N', '_', 'S', 0,
  /* 25743 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'D', 'O', 'W', 'N', '_', 'S', 0,
  /* 25762 */ 'N', 'O', 'P', '_', 'S', 0,
  /* 25768 */ 'E', 'N', 'D', '_', 'L', 'O', 'O', 'P', '_', 'S', 0,
  /* 25779 */ 'a', 'n', 'o', 'n', 'y', 'm', 'o', 'u', 's', '_', '7', '7', '5', '2', 'D', 'A', 'T', 'A', '_', 'D', 'R', 'O', 'P', '_', 'S', 0,
  /* 25805 */ 'a', 'n', 'o', 'n', 'y', 'm', 'o', 'u', 's', '_', '7', '7', '5', '3', 'D', 'A', 'T', 'A', '_', 'D', 'R', 'O', 'P', '_', 'S', 0,
  /* 25831 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'U', 'P', '_', 'S', 0,
  /* 25848 */ 'B', 'R', '_', 'S', 0,
  /* 25853 */ 'X', 'O', 'R', '_', 'S', 0,
  /* 25859 */ 'C', 'A', 'L', 'L', '_', 'P', 'A', 'R', 'A', 'M', 'S', '_', 'S', 0,
  /* 25873 */ 'B', 'R', '_', 'U', 'N', 'L', 'E', 'S', 'S', '_', 'S', 0,
  /* 25885 */ 'R', 'E', 'T', '_', 'C', 'A', 'L', 'L', '_', 'R', 'E', 'S', 'U', 'L', 'T', 'S', '_', 'S', 0,
  /* 25904 */ 'R', 'E', 'L', 'A', 'X', 'E', 'D', '_', 'D', 'O', 'T', '_', 'B', 'F', 'L', 'O', 'A', 'T', '_', 'S', 0,
  /* 25925 */ 'B', 'I', 'T', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'S', 0,
  /* 25937 */ 'R', 'E', 'T', '_', 'C', 'A', 'L', 'L', '_', 'I', 'N', 'D', 'I', 'R', 'E', 'C', 'T', '_', 'S', 0,
  /* 25957 */ 'C', 'A', 'T', 'C', 'H', 'R', 'E', 'T', '_', 'S', 0,
  /* 25968 */ 'C', 'L', 'E', 'A', 'N', 'U', 'P', 'R', 'E', 'T', '_', 'S', 0,
  /* 25981 */ 'R', 'E', 'L', 'A', 'X', 'E', 'D', '_', 'D', 'O', 'T', '_', 'S', 0,
  /* 25995 */ 'A', 'N', 'D', 'N', 'O', 'T', '_', 'S', 0,
  /* 26004 */ 'R', 'E', 'T', 'H', 'R', 'O', 'W', '_', 'S', 0,
  /* 26014 */ 'T', 'A', 'B', 'L', 'E', '_', 'C', 'O', 'P', 'Y', '_', 'S', 0,
  /* 26027 */ 'E', 'N', 'D', '_', 'T', 'R', 'Y', '_', 'S', 0,
  /* 26037 */ 'A', 'R', 'G', 'U', 'M', 'E', 'N', 'T', '_', 'f', 'u', 'n', 'c', 'r', 'e', 'f', '_', 'S', 0,
  /* 26056 */ 'A', 'R', 'G', 'U', 'M', 'E', 'N', 'T', '_', 'e', 'x', 't', 'e', 'r', 'n', 'r', 'e', 'f', '_', 'S', 0,
  /* 26077 */ 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'L', 'A', 'N', 'E', '_', 'I', '8', 'x', '1', '6', '_', 's', '_', 'S', 0,
  /* 26100 */ 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'L', 'A', 'N', 'E', '_', 'I', '1', '6', 'x', '8', '_', 's', '_', 'S', 0,
  /* 26123 */ 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'L', 'A', 'N', 'E', '_', 'I', '8', 'x', '1', '6', '_', 'u', '_', 'S', 0,
  /* 26146 */ 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'L', 'A', 'N', 'E', '_', 'I', '1', '6', 'x', '8', '_', 'u', '_', 'S', 0,
  /* 26169 */ 'R', 'E', 'L', 'A', 'X', 'E', 'D', '_', 'D', 'O', 'T', '_', 'B', 'F', 'L', 'O', 'A', 'T', 0,
  /* 26188 */ 'G', '_', 'S', 'S', 'U', 'B', 'S', 'A', 'T', 0,
  /* 26198 */ 'G', '_', 'U', 'S', 'U', 'B', 'S', 'A', 'T', 0,
  /* 26208 */ 'G', '_', 'S', 'A', 'D', 'D', 'S', 'A', 'T', 0,
  /* 26218 */ 'G', '_', 'U', 'A', 'D', 'D', 'S', 'A', 'T', 0,
  /* 26228 */ 'G', '_', 'S', 'S', 'H', 'L', 'S', 'A', 'T', 0,
  /* 26238 */ 'G', '_', 'U', 'S', 'H', 'L', 'S', 'A', 'T', 0,
  /* 26248 */ 'G', '_', 'S', 'M', 'U', 'L', 'F', 'I', 'X', 'S', 'A', 'T', 0,
  /* 26261 */ 'G', '_', 'U', 'M', 'U', 'L', 'F', 'I', 'X', 'S', 'A', 'T', 0,
  /* 26274 */ 'G', '_', 'S', 'D', 'I', 'V', 'F', 'I', 'X', 'S', 'A', 'T', 0,
  /* 26287 */ 'G', '_', 'U', 'D', 'I', 'V', 'F', 'I', 'X', 'S', 'A', 'T', 0,
  /* 26300 */ 'G', '_', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 0,
  /* 26310 */ 'B', 'I', 'T', 'S', 'E', 'L', 'E', 'C', 'T', 0,
  /* 26320 */ 'G', '_', 'S', 'E', 'L', 'E', 'C', 'T', 0,
  /* 26329 */ 'G', '_', 'B', 'R', 'I', 'N', 'D', 'I', 'R', 'E', 'C', 'T', 0,
  /* 26342 */ 'R', 'E', 'T', '_', 'C', 'A', 'L', 'L', '_', 'I', 'N', 'D', 'I', 'R', 'E', 'C', 'T', 0,
  /* 26360 */ 'C', 'A', 'T', 'C', 'H', 'R', 'E', 'T', 0,
  /* 26369 */ 'C', 'L', 'E', 'A', 'N', 'U', 'P', 'R', 'E', 'T', 0,
  /* 26380 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'R', 'E', 'T', 0,
  /* 26394 */ 'G', '_', 'M', 'E', 'M', 'S', 'E', 'T', 0,
  /* 26403 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'F', 'U', 'N', 'C', 'T', 'I', 'O', 'N', '_', 'E', 'X', 'I', 'T', 0,
  /* 26427 */ 'G', '_', 'B', 'R', 'J', 'T', 0,
  /* 26434 */ 'G', '_', 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'V', 'E', 'C', 'T', 'O', 'R', '_', 'E', 'L', 'T', 0,
  /* 26455 */ 'G', '_', 'I', 'N', 'S', 'E', 'R', 'T', '_', 'V', 'E', 'C', 'T', 'O', 'R', '_', 'E', 'L', 'T', 0,
  /* 26475 */ 'G', '_', 'F', 'C', 'O', 'N', 'S', 'T', 'A', 'N', 'T', 0,
  /* 26487 */ 'G', '_', 'C', 'O', 'N', 'S', 'T', 'A', 'N', 'T', 0,
  /* 26498 */ 'S', 'T', 'A', 'T', 'E', 'P', 'O', 'I', 'N', 'T', 0,
  /* 26509 */ 'P', 'A', 'T', 'C', 'H', 'P', 'O', 'I', 'N', 'T', 0,
  /* 26520 */ 'G', '_', 'P', 'T', 'R', 'T', 'O', 'I', 'N', 'T', 0,
  /* 26531 */ 'G', '_', 'F', 'R', 'I', 'N', 'T', 0,
  /* 26539 */ 'G', '_', 'I', 'N', 'T', 'R', 'I', 'N', 'S', 'I', 'C', '_', 'L', 'R', 'I', 'N', 'T', 0,
  /* 26557 */ 'G', '_', 'F', 'N', 'E', 'A', 'R', 'B', 'Y', 'I', 'N', 'T', 0,
  /* 26570 */ 'R', 'E', 'L', 'A', 'X', 'E', 'D', '_', 'D', 'O', 'T', 0,
  /* 26582 */ 'A', 'N', 'D', 'N', 'O', 'T', 0,
  /* 26589 */ 'G', '_', 'V', 'A', 'S', 'T', 'A', 'R', 'T', 0,
  /* 26599 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
  /* 26614 */ 'G', '_', 'I', 'N', 'V', 'O', 'K', 'E', '_', 'R', 'E', 'G', 'I', 'O', 'N', '_', 'S', 'T', 'A', 'R', 'T', 0,
  /* 26636 */ 'G', '_', 'I', 'N', 'S', 'E', 'R', 'T', 0,
  /* 26645 */ 'G', '_', 'F', 'S', 'Q', 'R', 'T', 0,
  /* 26653 */ 'G', '_', 'S', 'T', 'R', 'I', 'C', 'T', '_', 'F', 'S', 'Q', 'R', 'T', 0,
  /* 26668 */ 'G', '_', 'B', 'I', 'T', 'C', 'A', 'S', 'T', 0,
  /* 26678 */ 'G', '_', 'A', 'D', 'D', 'R', 'S', 'P', 'A', 'C', 'E', '_', 'C', 'A', 'S', 'T', 0,
  /* 26695 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', '_', 'L', 'I', 'S', 'T', 0,
  /* 26710 */ 'G', '_', 'F', 'P', 'E', 'X', 'T', 0,
  /* 26718 */ 'G', '_', 'S', 'E', 'X', 'T', 0,
  /* 26725 */ 'G', '_', 'A', 'S', 'S', 'E', 'R', 'T', '_', 'S', 'E', 'X', 'T', 0,
  /* 26739 */ 'G', '_', 'A', 'N', 'Y', 'E', 'X', 'T', 0,
  /* 26748 */ 'G', '_', 'Z', 'E', 'X', 'T', 0,
  /* 26755 */ 'G', '_', 'A', 'S', 'S', 'E', 'R', 'T', '_', 'Z', 'E', 'X', 'T', 0,
  /* 26769 */ 'G', '_', 'F', 'D', 'I', 'V', 0,
  /* 26776 */ 'G', '_', 'S', 'T', 'R', 'I', 'C', 'T', '_', 'F', 'D', 'I', 'V', 0,
  /* 26790 */ 'G', '_', 'S', 'D', 'I', 'V', 0,
  /* 26797 */ 'G', '_', 'U', 'D', 'I', 'V', 0,
  /* 26804 */ 'G', '_', 'F', 'P', 'O', 'W', 0,
  /* 26811 */ 'R', 'E', 'T', 'H', 'R', 'O', 'W', 0,
  /* 26819 */ 'G', '_', 'V', 'E', 'C', 'R', 'E', 'D', 'U', 'C', 'E', '_', 'F', 'M', 'A', 'X', 0,
  /* 26836 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'F', 'M', 'A', 'X', 0,
  /* 26853 */ 'G', '_', 'V', 'E', 'C', 'R', 'E', 'D', 'U', 'C', 'E', '_', 'S', 'M', 'A', 'X', 0,
  /* 26870 */ 'G', '_', 'S', 'M', 'A', 'X', 0,
  /* 26877 */ 'G', '_', 'V', 'E', 'C', 'R', 'E', 'D', 'U', 'C', 'E', '_', 'U', 'M', 'A', 'X', 0,
  /* 26894 */ 'G', '_', 'U', 'M', 'A', 'X', 0,
  /* 26901 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'U', 'M', 'A', 'X', 0,
  /* 26918 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'M', 'A', 'X', 0,
  /* 26934 */ 'G', '_', 'F', 'R', 'A', 'M', 'E', '_', 'I', 'N', 'D', 'E', 'X', 0,
  /* 26948 */ 'G', '_', 'S', 'B', 'F', 'X', 0,
  /* 26955 */ 'G', '_', 'U', 'B', 'F', 'X', 0,
  /* 26962 */ 'G', '_', 'S', 'M', 'U', 'L', 'F', 'I', 'X', 0,
  /* 26972 */ 'G', '_', 'U', 'M', 'U', 'L', 'F', 'I', 'X', 0,
  /* 26982 */ 'G', '_', 'S', 'D', 'I', 'V', 'F', 'I', 'X', 0,
  /* 26992 */ 'G', '_', 'U', 'D', 'I', 'V', 'F', 'I', 'X', 0,
  /* 27002 */ 'G', '_', 'M', 'E', 'M', 'C', 'P', 'Y', 0,
  /* 27011 */ 'T', 'A', 'B', 'L', 'E', '_', 'C', 'O', 'P', 'Y', 0,
  /* 27022 */ 'E', 'N', 'D', '_', 'T', 'R', 'Y', 0,
  /* 27030 */ 'G', '_', 'C', 'T', 'L', 'Z', 0,
  /* 27037 */ 'G', '_', 'C', 'T', 'T', 'Z', 0,
  /* 27044 */ 'A', 'R', 'G', 'U', 'M', 'E', 'N', 'T', '_', 'f', 'u', 'n', 'c', 'r', 'e', 'f', 0,
  /* 27061 */ 'A', 'R', 'G', 'U', 'M', 'E', 'N', 'T', '_', 'e', 'x', 't', 'e', 'r', 'n', 'r', 'e', 'f', 0,
  /* 27080 */ 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'L', 'A', 'N', 'E', '_', 'I', '8', 'x', '1', '6', '_', 's', 0,
  /* 27101 */ 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'L', 'A', 'N', 'E', '_', 'I', '1', '6', 'x', '8', '_', 's', 0,
  /* 27122 */ 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'L', 'A', 'N', 'E', '_', 'I', '8', 'x', '1', '6', '_', 'u', 0,
  /* 27143 */ 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'L', 'A', 'N', 'E', '_', 'I', '1', '6', 'x', '8', '_', 'u', 0,
  0
};

extern const unsigned WebAssemblyInstrNameIndices[] = {
    11945U, 12344U, 12955U, 12580U, 12014U, 11995U, 12023U, 12180U, 
    11797U, 11812U, 11234U, 11839U, 13327U, 11117U, 26695U, 11763U, 
    11941U, 12004U, 10916U, 27017U, 11006U, 26599U, 10737U, 10839U, 
    10889U, 12688U, 12158U, 26509U, 10822U, 12890U, 11902U, 26498U, 
    11053U, 12863U, 12850U, 13016U, 26380U, 26403U, 12081U, 12137U, 
    12110U, 12040U, 12981U, 26725U, 26755U, 12418U, 10634U, 10345U, 
    12283U, 26790U, 26797U, 12310U, 12317U, 12324U, 12334U, 10715U, 
    13208U, 13171U, 11232U, 11943U, 26934U, 11127U, 12185U, 26300U, 
    13259U, 26636U, 13276U, 13123U, 10415U, 13310U, 26520U, 13235U, 
    26668U, 11160U, 12992U, 10796U, 10389U, 10778U, 26539U, 12396U, 
    13041U, 10535U, 10479U, 10509U, 10520U, 10460U, 10490U, 11082U, 
    11066U, 13357U, 11853U, 11870U, 10666U, 10351U, 10721U, 10682U, 
    13213U, 13177U, 26918U, 12544U, 26901U, 12527U, 10601U, 10328U, 
    26836U, 12462U, 12719U, 12697U, 10881U, 10750U, 26329U, 26614U, 
    10367U, 13397U, 26739U, 10407U, 26487U, 26475U, 26589U, 11894U, 
    26718U, 11826U, 26748U, 12067U, 13107U, 13093U, 12060U, 13100U, 
    13228U, 12201U, 12774U, 12767U, 26320U, 12656U, 10937U, 12640U, 
    10860U, 12648U, 10929U, 12632U, 10852U, 12672U, 12664U, 11933U, 
    11925U, 26218U, 26208U, 26198U, 26188U, 26238U, 26228U, 26962U, 
    26972U, 26248U, 26261U, 26982U, 26992U, 26274U, 26287U, 10559U, 
    10307U, 12225U, 10288U, 10453U, 26769U, 12289U, 26804U, 11967U, 
    12934U, 3543U, 11887U, 3535U, 0U, 12909U, 12941U, 11790U, 
    26710U, 10379U, 11949U, 11958U, 12749U, 12758U, 13246U, 12433U, 
    13344U, 11169U, 12376U, 12386U, 10945U, 10960U, 12354U, 12365U, 
    10640U, 11985U, 12496U, 26870U, 12520U, 26894U, 13253U, 10769U, 
    10759U, 12950U, 26427U, 26455U, 26434U, 13138U, 27037U, 11214U, 
    27030U, 11196U, 12794U, 12741U, 11095U, 12073U, 13303U, 12560U, 
    26645U, 13114U, 26531U, 26557U, 26678U, 12968U, 10993U, 10436U, 
    10587U, 10314U, 12253U, 26776U, 12296U, 10294U, 26653U, 12918U, 
    13060U, 13076U, 27002U, 11037U, 11150U, 26394U, 12680U, 10566U, 
    12232U, 10542U, 12208U, 26819U, 12445U, 10618U, 12267U, 10699U, 
    13193U, 13155U, 26853U, 12479U, 26877U, 12503U, 26948U, 26955U, 
    13291U, 25859U, 13428U, 25889U, 26360U, 25957U, 26369U, 25968U, 
    10901U, 24969U, 13424U, 25885U, 2634U, 16310U, 8035U, 22375U, 
    6942U, 21104U, 3745U, 17583U, 9704U, 24268U, 8339U, 22725U, 
    4055U, 17939U, 9138U, 23614U, 2503U, 16151U, 7882U, 22198U, 
    6812U, 20946U, 3592U, 17406U, 9608U, 24156U, 2953U, 16677U, 
    8224U, 22592U, 7261U, 21471U, 3940U, 17806U, 9052U, 23514U, 
    9820U, 24400U, 9210U, 23698U, 10048U, 24660U, 9392U, 23908U, 
    12615U, 25743U, 12875U, 25831U, 9637U, 24189U, 8272U, 22646U, 
    3988U, 17860U, 9081U, 23547U, 10695U, 26582U, 25995U, 2961U, 
    16687U, 7269U, 21481U, 24942U, 11142U, 25052U, 27061U, 26056U, 
    3494U, 17312U, 7800U, 22104U, 27044U, 26037U, 3522U, 17344U, 
    7828U, 22136U, 9566U, 24108U, 7785U, 22087U, 7813U, 22119U, 
    3479U, 17295U, 3507U, 17327U, 9010U, 23466U, 10868U, 24954U, 
    699U, 14189U, 5008U, 18984U, 1827U, 15411U, 6136U, 20206U, 
    1803U, 15385U, 6112U, 20180U, 723U, 14215U, 5032U, 19010U, 
    1851U, 15437U, 6160U, 20232U, 157U, 13603U, 4466U, 18398U, 
    1078U, 14602U, 5387U, 19397U, 177U, 13625U, 4486U, 18420U, 
    1125U, 14653U, 5434U, 19448U, 253U, 13707U, 4562U, 18502U, 
    1228U, 14764U, 5537U, 19559U, 350U, 13812U, 4659U, 18607U, 
    1356U, 14902U, 5665U, 19697U, 593U, 14073U, 4902U, 18868U, 
    1680U, 15250U, 5989U, 20045U, 81U, 13521U, 4390U, 18316U, 
    1002U, 14520U, 5311U, 19315U, 438U, 13906U, 4747U, 18701U, 
    1472U, 15026U, 5781U, 19821U, 517U, 13991U, 4826U, 18786U, 
    1578U, 15140U, 5887U, 19935U, 1098U, 14624U, 5407U, 19419U, 
    1201U, 14735U, 5510U, 19530U, 1325U, 14869U, 5634U, 19664U, 
    1654U, 15222U, 5963U, 20017U, 975U, 14491U, 5284U, 19286U, 
    1444U, 14996U, 5753U, 19791U, 1551U, 15111U, 5860U, 19906U, 
    204U, 13654U, 4513U, 18449U, 1152U, 14682U, 5461U, 19477U, 
    280U, 13736U, 4589U, 18531U, 1255U, 14793U, 5564U, 19588U, 
    381U, 13845U, 4690U, 18640U, 1387U, 14935U, 5696U, 19730U, 
    619U, 14101U, 4928U, 18896U, 1706U, 15278U, 6015U, 20073U, 
    108U, 13550U, 4417U, 18345U, 1029U, 14549U, 5338U, 19344U, 
    466U, 13936U, 4775U, 18731U, 1500U, 15056U, 5809U, 19851U, 
    544U, 14020U, 4853U, 18815U, 1605U, 15169U, 5914U, 19964U, 
    230U, 13682U, 4539U, 18477U, 1178U, 14710U, 5487U, 19505U, 
    306U, 13764U, 4615U, 18559U, 1281U, 14821U, 5590U, 19616U, 
    411U, 13877U, 4720U, 18672U, 1417U, 14967U, 5726U, 19762U, 
    644U, 14128U, 4953U, 18923U, 1731U, 15305U, 6040U, 20100U, 
    134U, 13578U, 4443U, 18373U, 1055U, 14577U, 5364U, 19372U, 
    493U, 13965U, 4802U, 18760U, 1527U, 15085U, 5836U, 19880U, 
    570U, 14048U, 4879U, 18843U, 1631U, 15197U, 5940U, 19992U, 
    36U, 13472U, 4345U, 18267U, 930U, 14442U, 5239U, 19237U, 
    907U, 14417U, 5216U, 19212U, 59U, 13497U, 4368U, 18292U, 
    953U, 14467U, 5262U, 19262U, 329U, 13789U, 4638U, 18584U, 
    1304U, 14846U, 5613U, 19641U, 10007U, 24613U, 9351U, 23861U, 
    9661U, 24217U, 8296U, 22674U, 4012U, 17888U, 9105U, 23575U, 
    26310U, 25925U, 11979U, 25676U, 12952U, 11784U, 25656U, 25848U, 
    2983U, 16713U, 7291U, 21507U, 13387U, 25873U, 12096U, 26346U, 
    25941U, 25688U, 11919U, 12170U, 25695U, 25664U, 2570U, 16232U, 
    7958U, 22286U, 6878U, 21026U, 3668U, 17494U, 3455U, 17265U, 
    7761U, 22057U, 2878U, 16588U, 7186U, 21382U, 3317U, 17103U, 
    7640U, 21914U, 7841U, 22151U, 3551U, 17359U, 9581U, 24125U, 
    8197U, 22561U, 3913U, 17775U, 9025U, 23483U, 2587U, 16253U, 
    6895U, 21047U, 11748U, 25630U, 2936U, 16656U, 7244U, 21450U, 
    11478U, 25332U, 3446U, 17254U, 7752U, 22046U, 9556U, 24096U, 
    3471U, 17285U, 7777U, 22077U, 10975U, 24986U, 11108U, 25041U, 
    2920U, 16636U, 8100U, 22452U, 7228U, 21430U, 3810U, 17660U, 
    3207U, 16977U, 7530U, 21788U, 3436U, 17242U, 7742U, 22034U, 
    26578U, 25989U, 11573U, 25437U, 2608U, 16278U, 6916U, 21072U, 
    11321U, 25157U, 3028U, 16768U, 7349U, 21577U, 9472U, 24000U, 
    11090U, 25034U, 10746U, 11975U, 25672U, 12567U, 25707U, 11777U, 
    25647U, 12785U, 25768U, 24948U, 27022U, 26027U, 3463U, 17275U, 
    7769U, 22067U, 2617U, 16289U, 8014U, 22350U, 6925U, 21083U, 
    3724U, 17558U, 9695U, 24257U, 3037U, 16779U, 8330U, 22714U, 
    7358U, 21588U, 4046U, 17928U, 9129U, 23603U, 9736U, 24306U, 
    8371U, 22763U, 4087U, 17977U, 9975U, 24577U, 8519U, 22933U, 
    4189U, 18093U, 9878U, 24466U, 8437U, 22839U, 4141U, 18039U, 
    10086U, 24704U, 8585U, 23009U, 4221U, 18129U, 7929U, 22253U, 
    3639U, 17461U, 27101U, 26100U, 27143U, 26146U, 8253U, 22625U, 
    3969U, 17839U, 27080U, 26077U, 27122U, 26123U, 3171U, 16937U, 
    7494U, 21748U, 3400U, 17202U, 7706U, 21994U, 6855U, 20999U, 
    3257U, 17035U, 3189U, 16957U, 7512U, 21768U, 3418U, 17222U, 
    7724U, 22014U, 2546U, 16204U, 7580U, 21846U, 12596U, 25722U, 
    2624U, 16298U, 8023U, 22361U, 6932U, 21092U, 3733U, 17569U, 
    2409U, 16045U, 6718U, 20840U, 2447U, 16087U, 6756U, 20882U, 
    2428U, 16066U, 6737U, 20861U, 2466U, 16108U, 6775U, 20903U, 
    2525U, 16177U, 7892U, 22210U, 6834U, 20972U, 3602U, 17418U, 
    9714U, 24280U, 3115U, 16869U, 8349U, 22737U, 7438U, 21680U, 
    4065U, 17951U, 9148U, 23626U, 9953U, 24551U, 3344U, 17134U, 
    8497U, 22907U, 7650U, 21926U, 9317U, 23821U, 11625U, 25495U, 
    2765U, 16457U, 7073U, 21251U, 11367U, 25209U, 3228U, 17002U, 
    7551U, 21813U, 9494U, 24026U, 11686U, 25562U, 2814U, 16512U, 
    7122U, 21306U, 11422U, 25270U, 3277U, 17057U, 7600U, 21868U, 
    9525U, 24061U, 2843U, 16545U, 8057U, 22401U, 7151U, 21339U, 
    3767U, 17609U, 9856U, 24440U, 3153U, 16915U, 8415U, 22813U, 
    7476U, 21726U, 4119U, 18013U, 9226U, 23716U, 10064U, 24678U, 
    3382U, 17180U, 8563U, 22983U, 7688U, 21972U, 9408U, 23926U, 
    3061U, 16809U, 3080U, 16830U, 2794U, 16490U, 2642U, 16320U, 
    6950U, 21114U, 2674U, 16356U, 6982U, 21150U, 2888U, 16600U, 
    7196U, 21394U, 2714U, 16400U, 7022U, 21194U, 7336U, 21562U, 
    7401U, 21639U, 7382U, 21618U, 7420U, 21660U, 3098U, 16850U, 
    3327U, 17115U, 7102U, 21284U, 2658U, 16338U, 6966U, 21132U, 
    2694U, 16378U, 7002U, 21172U, 2904U, 16618U, 7212U, 21412U, 
    2734U, 16422U, 7042U, 21216U, 11781U, 25651U, 9936U, 24532U, 
    8480U, 22888U, 4172U, 18074U, 9287U, 23787U, 2532U, 16186U, 
    7901U, 22221U, 6841U, 20981U, 3611U, 17429U, 9725U, 24293U, 
    3124U, 16880U, 8360U, 22750U, 7447U, 21691U, 4076U, 17964U, 
    9159U, 23639U, 9964U, 24564U, 3353U, 17145U, 8508U, 22920U, 
    7659U, 21937U, 9328U, 23834U, 2261U, 15885U, 6570U, 20680U, 
    666U, 14152U, 4975U, 18947U, 1770U, 15348U, 6079U, 20143U, 
    706U, 14196U, 5015U, 18991U, 1834U, 15418U, 6143U, 20213U, 
    2227U, 15847U, 6536U, 20642U, 1753U, 15329U, 6062U, 20124U, 
    1810U, 15392U, 6119U, 20187U, 2244U, 15866U, 6553U, 20661U, 
    2278U, 15904U, 6587U, 20699U, 683U, 14171U, 4992U, 18966U, 
    1787U, 15367U, 6096U, 20162U, 730U, 14222U, 5039U, 19017U, 
    1858U, 15444U, 6167U, 20239U, 2119U, 15731U, 6428U, 20526U, 
    1960U, 15556U, 6269U, 20351U, 832U, 14334U, 5141U, 19129U, 
    2143U, 15757U, 6452U, 20552U, 1984U, 15582U, 6293U, 20377U, 
    856U, 14360U, 5165U, 19155U, 9U, 13441U, 4318U, 18236U, 
    880U, 14386U, 5189U, 19181U, 164U, 13610U, 4473U, 18405U, 
    1085U, 14609U, 5394U, 19404U, 2078U, 15686U, 6387U, 20481U, 
    1899U, 15489U, 6208U, 20284U, 771U, 14267U, 5080U, 19062U, 
    2008U, 15608U, 6317U, 20403U, 2049U, 15653U, 6358U, 20448U, 
    1940U, 15534U, 6249U, 20329U, 812U, 14312U, 5121U, 19107U, 
    11646U, 25518U, 2780U, 16474U, 7088U, 21268U, 11386U, 25230U, 
    3243U, 17019U, 7566U, 21830U, 9510U, 24044U, 11707U, 25585U, 
    2829U, 16529U, 7137U, 21323U, 11441U, 25291U, 3292U, 17074U, 
    7615U, 21885U, 9541U, 24079U, 11491U, 25347U, 2511U, 16161U, 
    6820U, 20956U, 11247U, 25075U, 2969U, 16697U, 7277U, 21491U, 
    9457U, 23983U, 12789U, 25772U, 2850U, 16554U, 8066U, 22412U, 
    7158U, 21348U, 3776U, 17620U, 9867U, 24453U, 3162U, 16926U, 
    8426U, 22826U, 7485U, 21737U, 4130U, 18026U, 9237U, 23729U, 
    10075U, 24691U, 3391U, 17191U, 8574U, 22996U, 7697U, 21983U, 
    9419U, 23939U, 7881U, 22197U, 3591U, 17405U, 2928U, 16646U, 
    8124U, 22478U, 7236U, 21440U, 3834U, 17686U, 9912U, 24504U, 
    8456U, 22860U, 9263U, 23759U, 10120U, 24742U, 8604U, 23030U, 
    9445U, 23969U, 2354U, 15986U, 6663U, 20781U, 746U, 14240U, 
    5055U, 19035U, 1874U, 15462U, 6183U, 20257U, 2600U, 16268U, 
    7993U, 22325U, 6908U, 21062U, 3703U, 17533U, 9756U, 24328U, 
    8391U, 22785U, 9170U, 23652U, 9995U, 24599U, 8539U, 22955U, 
    9339U, 23847U, 2579U, 16243U, 7969U, 22299U, 6887U, 21037U, 
    3679U, 17507U, 9685U, 24245U, 3020U, 16758U, 8320U, 22702U, 
    7328U, 21552U, 4036U, 17916U, 9897U, 24487U, 9248U, 23742U, 
    10105U, 24725U, 9430U, 23952U, 2866U, 16574U, 8086U, 22436U, 
    7174U, 21368U, 3796U, 17644U, 2562U, 16222U, 7948U, 22274U, 
    6870U, 21016U, 3658U, 17482U, 9651U, 24205U, 8286U, 22662U, 
    4002U, 17876U, 9095U, 23563U, 2539U, 16195U, 7920U, 22242U, 
    6848U, 20990U, 3630U, 17450U, 9628U, 24178U, 2996U, 16728U, 
    8244U, 22614U, 7304U, 21522U, 3960U, 17828U, 9072U, 23536U, 
    7880U, 22196U, 3590U, 17404U, 12781U, 25762U, 26585U, 25998U, 
    13120U, 3045U, 16789U, 7366U, 21598U, 25854U, 8134U, 22490U, 
    3844U, 17698U, 8003U, 22337U, 3713U, 17545U, 3306U, 17090U, 
    7629U, 21901U, 9304U, 23806U, 9836U, 24418U, 11551U, 25413U, 
    11301U, 25135U, 11532U, 25392U, 11284U, 25116U, 26570U, 10650U, 
    24924U, 26169U, 25904U, 25981U, 9780U, 24356U, 11021U, 25016U, 
    3133U, 16891U, 7456U, 21702U, 3362U, 17156U, 7668U, 21948U, 
    7910U, 22232U, 3620U, 17440U, 9618U, 24168U, 8234U, 22604U, 
    3950U, 17818U, 9062U, 23526U, 26811U, 26004U, 12608U, 25734U, 
    12101U, 26342U, 25937U, 25684U, 3011U, 16747U, 7319U, 21541U, 
    3052U, 16798U, 7373U, 21607U, 11588U, 25454U, 2754U, 16444U, 
    7062U, 21238U, 11334U, 25172U, 3217U, 16989U, 7540U, 21800U, 
    9482U, 24012U, 9675U, 24233U, 3003U, 16737U, 8310U, 22690U, 
    7311U, 21531U, 4026U, 17904U, 9119U, 23591U, 9768U, 24342U, 
    3143U, 16903U, 8403U, 22799U, 7466U, 21714U, 4107U, 17999U, 
    9182U, 23666U, 10020U, 24628U, 3372U, 17168U, 8551U, 22969U, 
    7678U, 21960U, 4209U, 18115U, 9364U, 23876U, 11013U, 25006U, 
    8110U, 22464U, 3820U, 17672U, 7979U, 22311U, 3689U, 17519U, 
    8045U, 22387U, 3755U, 17595U, 9924U, 24518U, 8468U, 22874U, 
    4160U, 18060U, 9275U, 23773U, 2857U, 16563U, 8075U, 22423U, 
    7165U, 21357U, 3785U, 17631U, 43U, 13479U, 4352U, 18274U, 
    937U, 14449U, 5246U, 19244U, 914U, 14424U, 5223U, 19219U, 
    66U, 13504U, 4375U, 18299U, 960U, 14474U, 5269U, 19269U, 
    22U, 13456U, 4331U, 18251U, 893U, 14401U, 5202U, 19196U, 
    336U, 13796U, 4645U, 18591U, 1311U, 14853U, 5620U, 19648U, 
    2098U, 15708U, 6407U, 20503U, 1919U, 15511U, 6228U, 20306U, 
    791U, 14289U, 5100U, 19084U, 2028U, 15630U, 6337U, 20425U, 
    2063U, 15669U, 6372U, 20464U, 2485U, 16129U, 7858U, 22170U, 
    6794U, 20924U, 3568U, 17378U, 9598U, 24144U, 2945U, 16667U, 
    8214U, 22580U, 7253U, 21461U, 3930U, 17794U, 9042U, 23502U, 
    9804U, 24382U, 9194U, 23680U, 10032U, 24642U, 9376U, 23890U, 
    11029U, 25024U, 27011U, 26014U, 11511U, 25369U, 11265U, 25095U, 
    11605U, 25473U, 11349U, 25189U, 11727U, 25607U, 11459U, 25311U, 
    11666U, 25540U, 11404U, 25250U, 11185U, 25062U, 11497U, 25353U, 
    2517U, 16167U, 6826U, 20962U, 11253U, 25081U, 2975U, 16703U, 
    7283U, 21497U, 9463U, 23989U, 26813U, 26006U, 2493U, 16139U, 
    7868U, 22182U, 6802U, 20934U, 3578U, 17390U, 27026U, 26031U, 
    10981U, 24992U, 13167U, 3044U, 16788U, 7365U, 21597U, 25853U, 
    2324U, 15954U, 2167U, 15783U, 6633U, 20749U, 6476U, 20578U, 
    12802U, 25779U, 2379U, 16013U, 2197U, 15815U, 2294U, 15922U, 
    12826U, 25805U, 6688U, 20808U, 6506U, 20610U, 6603U, 20717U, 
    3855U, 17711U, 3875U, 17733U, 8145U, 22503U, 10210U, 24838U, 
    8852U, 23292U, 4240U, 18150U, 10249U, 24881U, 8948U, 23398U, 
    4279U, 18193U, 10230U, 24860U, 8895U, 23339U, 4260U, 18172U, 
    10269U, 24903U, 8991U, 23445U, 4299U, 18215U, 8914U, 23360U, 
    8931U, 23379U, 10132U, 24756U, 8652U, 23082U, 10170U, 24796U, 
    8728U, 23162U, 8616U, 23044U, 8768U, 23204U, 8690U, 23122U, 
    8809U, 23247U, 3895U, 17755U, 8163U, 22523U, 8872U, 23314U, 
    8968U, 23420U, 8180U, 22542U, 
};

static inline void InitWebAssemblyMCInstrInfo(MCInstrInfo *II) {
  II->InitMCInstrInfo(WebAssemblyDescs.Insts, WebAssemblyInstrNameIndices, WebAssemblyInstrNameData, nullptr, nullptr, 1756);
}

} // end namespace llvm
#endif // GET_INSTRINFO_MC_DESC

#ifdef GET_INSTRINFO_HEADER
#undef GET_INSTRINFO_HEADER
namespace llvm {
struct WebAssemblyGenInstrInfo : public TargetInstrInfo {
  explicit WebAssemblyGenInstrInfo(unsigned CFSetupOpcode = ~0u, unsigned CFDestroyOpcode = ~0u, unsigned CatchRetOpcode = ~0u, unsigned ReturnOpcode = ~0u);
  ~WebAssemblyGenInstrInfo() override = default;

};
} // end namespace llvm
#endif // GET_INSTRINFO_HEADER

#ifdef GET_INSTRINFO_HELPER_DECLS
#undef GET_INSTRINFO_HELPER_DECLS


#endif // GET_INSTRINFO_HELPER_DECLS

#ifdef GET_INSTRINFO_HELPERS
#undef GET_INSTRINFO_HELPERS

#endif // GET_INSTRINFO_HELPERS

#ifdef GET_INSTRINFO_CTOR_DTOR
#undef GET_INSTRINFO_CTOR_DTOR
namespace llvm {
extern const WebAssemblyInstrTable WebAssemblyDescs;
extern const unsigned WebAssemblyInstrNameIndices[];
extern const char WebAssemblyInstrNameData[];
WebAssemblyGenInstrInfo::WebAssemblyGenInstrInfo(unsigned CFSetupOpcode, unsigned CFDestroyOpcode, unsigned CatchRetOpcode, unsigned ReturnOpcode)
  : TargetInstrInfo(CFSetupOpcode, CFDestroyOpcode, CatchRetOpcode, ReturnOpcode) {
  InitMCInstrInfo(WebAssemblyDescs.Insts, WebAssemblyInstrNameIndices, WebAssemblyInstrNameData, nullptr, nullptr, 1756);
}
} // end namespace llvm
#endif // GET_INSTRINFO_CTOR_DTOR

#ifdef GET_INSTRINFO_OPERAND_ENUM
#undef GET_INSTRINFO_OPERAND_ENUM
namespace llvm {
namespace WebAssembly {
namespace OpName {
enum {
  addr = 3,
  count = 9,
  dst = 0,
  exp = 5,
  idx = 7,
  new_ = 6,
  off = 2,
  p2align = 1,
  timeout = 10,
  val = 4,
  vec = 8,
  OPERAND_LAST
};
} // end namespace OpName
} // end namespace WebAssembly
} // end namespace llvm
#endif //GET_INSTRINFO_OPERAND_ENUM

#ifdef GET_INSTRINFO_NAMED_OPS
#undef GET_INSTRINFO_NAMED_OPS
namespace llvm {
namespace WebAssembly {
LLVM_READONLY
int16_t getNamedOperandIdx(uint16_t Opcode, uint16_t NamedIdx) {
  static const int16_t OperandMap [][11] = {
{0, 1, 2, 3, -1, -1, -1, -1, -1, -1, -1, },
{0, 1, 2, 3, 4, -1, -1, -1, -1, -1, -1, },
{0, 1, 2, 3, -1, 4, 5, -1, -1, -1, -1, },
{0, 1, 2, 3, -1, 4, -1, -1, -1, -1, 5, },
{0, 1, 2, 3, -1, -1, -1, -1, -1, 4, -1, },
{0, 1, 2, 4, -1, -1, -1, 3, 5, -1, -1, },
{-1, 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, 0, 1, 2, 3, -1, -1, -1, -1, -1, -1, },
{-1, 0, 1, 2, -1, -1, -1, -1, 3, -1, -1, },
{-1, 0, 1, 3, -1, -1, -1, 2, 4, -1, -1, },
{-1, 0, 1, -1, -1, -1, -1, 2, -1, -1, -1, },
};
  switch(Opcode) {
  case WebAssembly::ATOMIC_LOAD16_U_I32_A32:
  case WebAssembly::ATOMIC_LOAD16_U_I32_A64:
  case WebAssembly::ATOMIC_LOAD16_U_I64_A32:
  case WebAssembly::ATOMIC_LOAD16_U_I64_A64:
  case WebAssembly::ATOMIC_LOAD32_U_I64_A32:
  case WebAssembly::ATOMIC_LOAD32_U_I64_A64:
  case WebAssembly::ATOMIC_LOAD8_U_I32_A32:
  case WebAssembly::ATOMIC_LOAD8_U_I32_A64:
  case WebAssembly::ATOMIC_LOAD8_U_I64_A32:
  case WebAssembly::ATOMIC_LOAD8_U_I64_A64:
  case WebAssembly::ATOMIC_LOAD_I32_A32:
  case WebAssembly::ATOMIC_LOAD_I32_A64:
  case WebAssembly::ATOMIC_LOAD_I64_A32:
  case WebAssembly::ATOMIC_LOAD_I64_A64:
  case WebAssembly::LOAD16_SPLAT_A32:
  case WebAssembly::LOAD16_SPLAT_A64:
  case WebAssembly::LOAD16_S_I32_A32:
  case WebAssembly::LOAD16_S_I32_A64:
  case WebAssembly::LOAD16_S_I64_A32:
  case WebAssembly::LOAD16_S_I64_A64:
  case WebAssembly::LOAD16_U_I32_A32:
  case WebAssembly::LOAD16_U_I32_A64:
  case WebAssembly::LOAD16_U_I64_A32:
  case WebAssembly::LOAD16_U_I64_A64:
  case WebAssembly::LOAD32_SPLAT_A32:
  case WebAssembly::LOAD32_SPLAT_A64:
  case WebAssembly::LOAD32_S_I64_A32:
  case WebAssembly::LOAD32_S_I64_A64:
  case WebAssembly::LOAD32_U_I64_A32:
  case WebAssembly::LOAD32_U_I64_A64:
  case WebAssembly::LOAD64_SPLAT_A32:
  case WebAssembly::LOAD64_SPLAT_A64:
  case WebAssembly::LOAD8_SPLAT_A32:
  case WebAssembly::LOAD8_SPLAT_A64:
  case WebAssembly::LOAD8_S_I32_A32:
  case WebAssembly::LOAD8_S_I32_A64:
  case WebAssembly::LOAD8_S_I64_A32:
  case WebAssembly::LOAD8_S_I64_A64:
  case WebAssembly::LOAD8_U_I32_A32:
  case WebAssembly::LOAD8_U_I32_A64:
  case WebAssembly::LOAD8_U_I64_A32:
  case WebAssembly::LOAD8_U_I64_A64:
  case WebAssembly::LOAD_EXTEND_S_I16x8_A32:
  case WebAssembly::LOAD_EXTEND_S_I16x8_A64:
  case WebAssembly::LOAD_EXTEND_S_I32x4_A32:
  case WebAssembly::LOAD_EXTEND_S_I32x4_A64:
  case WebAssembly::LOAD_EXTEND_S_I64x2_A32:
  case WebAssembly::LOAD_EXTEND_S_I64x2_A64:
  case WebAssembly::LOAD_EXTEND_U_I16x8_A32:
  case WebAssembly::LOAD_EXTEND_U_I16x8_A64:
  case WebAssembly::LOAD_EXTEND_U_I32x4_A32:
  case WebAssembly::LOAD_EXTEND_U_I32x4_A64:
  case WebAssembly::LOAD_EXTEND_U_I64x2_A32:
  case WebAssembly::LOAD_EXTEND_U_I64x2_A64:
  case WebAssembly::LOAD_F32_A32:
  case WebAssembly::LOAD_F32_A64:
  case WebAssembly::LOAD_F64_A32:
  case WebAssembly::LOAD_F64_A64:
  case WebAssembly::LOAD_I32_A32:
  case WebAssembly::LOAD_I32_A64:
  case WebAssembly::LOAD_I64_A32:
  case WebAssembly::LOAD_I64_A64:
  case WebAssembly::LOAD_V128_A32:
  case WebAssembly::LOAD_V128_A64:
  case WebAssembly::LOAD_ZERO_I32x4_A32:
  case WebAssembly::LOAD_ZERO_I32x4_A64:
  case WebAssembly::LOAD_ZERO_I64x2_A32:
  case WebAssembly::LOAD_ZERO_I64x2_A64:
    return OperandMap[0][NamedIdx];
  case WebAssembly::ATOMIC_RMW16_U_ADD_I32_A32:
  case WebAssembly::ATOMIC_RMW16_U_ADD_I32_A64:
  case WebAssembly::ATOMIC_RMW16_U_ADD_I64_A32:
  case WebAssembly::ATOMIC_RMW16_U_ADD_I64_A64:
  case WebAssembly::ATOMIC_RMW16_U_AND_I32_A32:
  case WebAssembly::ATOMIC_RMW16_U_AND_I32_A64:
  case WebAssembly::ATOMIC_RMW16_U_AND_I64_A32:
  case WebAssembly::ATOMIC_RMW16_U_AND_I64_A64:
  case WebAssembly::ATOMIC_RMW16_U_OR_I32_A32:
  case WebAssembly::ATOMIC_RMW16_U_OR_I32_A64:
  case WebAssembly::ATOMIC_RMW16_U_OR_I64_A32:
  case WebAssembly::ATOMIC_RMW16_U_OR_I64_A64:
  case WebAssembly::ATOMIC_RMW16_U_SUB_I32_A32:
  case WebAssembly::ATOMIC_RMW16_U_SUB_I32_A64:
  case WebAssembly::ATOMIC_RMW16_U_SUB_I64_A32:
  case WebAssembly::ATOMIC_RMW16_U_SUB_I64_A64:
  case WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A32:
  case WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A64:
  case WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A32:
  case WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A64:
  case WebAssembly::ATOMIC_RMW16_U_XOR_I32_A32:
  case WebAssembly::ATOMIC_RMW16_U_XOR_I32_A64:
  case WebAssembly::ATOMIC_RMW16_U_XOR_I64_A32:
  case WebAssembly::ATOMIC_RMW16_U_XOR_I64_A64:
  case WebAssembly::ATOMIC_RMW32_U_ADD_I64_A32:
  case WebAssembly::ATOMIC_RMW32_U_ADD_I64_A64:
  case WebAssembly::ATOMIC_RMW32_U_AND_I64_A32:
  case WebAssembly::ATOMIC_RMW32_U_AND_I64_A64:
  case WebAssembly::ATOMIC_RMW32_U_OR_I64_A32:
  case WebAssembly::ATOMIC_RMW32_U_OR_I64_A64:
  case WebAssembly::ATOMIC_RMW32_U_SUB_I64_A32:
  case WebAssembly::ATOMIC_RMW32_U_SUB_I64_A64:
  case WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A32:
  case WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A64:
  case WebAssembly::ATOMIC_RMW32_U_XOR_I64_A32:
  case WebAssembly::ATOMIC_RMW32_U_XOR_I64_A64:
  case WebAssembly::ATOMIC_RMW8_U_ADD_I32_A32:
  case WebAssembly::ATOMIC_RMW8_U_ADD_I32_A64:
  case WebAssembly::ATOMIC_RMW8_U_ADD_I64_A32:
  case WebAssembly::ATOMIC_RMW8_U_ADD_I64_A64:
  case WebAssembly::ATOMIC_RMW8_U_AND_I32_A32:
  case WebAssembly::ATOMIC_RMW8_U_AND_I32_A64:
  case WebAssembly::ATOMIC_RMW8_U_AND_I64_A32:
  case WebAssembly::ATOMIC_RMW8_U_AND_I64_A64:
  case WebAssembly::ATOMIC_RMW8_U_OR_I32_A32:
  case WebAssembly::ATOMIC_RMW8_U_OR_I32_A64:
  case WebAssembly::ATOMIC_RMW8_U_OR_I64_A32:
  case WebAssembly::ATOMIC_RMW8_U_OR_I64_A64:
  case WebAssembly::ATOMIC_RMW8_U_SUB_I32_A32:
  case WebAssembly::ATOMIC_RMW8_U_SUB_I32_A64:
  case WebAssembly::ATOMIC_RMW8_U_SUB_I64_A32:
  case WebAssembly::ATOMIC_RMW8_U_SUB_I64_A64:
  case WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A32:
  case WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A64:
  case WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A32:
  case WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A64:
  case WebAssembly::ATOMIC_RMW8_U_XOR_I32_A32:
  case WebAssembly::ATOMIC_RMW8_U_XOR_I32_A64:
  case WebAssembly::ATOMIC_RMW8_U_XOR_I64_A32:
  case WebAssembly::ATOMIC_RMW8_U_XOR_I64_A64:
  case WebAssembly::ATOMIC_RMW_ADD_I32_A32:
  case WebAssembly::ATOMIC_RMW_ADD_I32_A64:
  case WebAssembly::ATOMIC_RMW_ADD_I64_A32:
  case WebAssembly::ATOMIC_RMW_ADD_I64_A64:
  case WebAssembly::ATOMIC_RMW_AND_I32_A32:
  case WebAssembly::ATOMIC_RMW_AND_I32_A64:
  case WebAssembly::ATOMIC_RMW_AND_I64_A32:
  case WebAssembly::ATOMIC_RMW_AND_I64_A64:
  case WebAssembly::ATOMIC_RMW_OR_I32_A32:
  case WebAssembly::ATOMIC_RMW_OR_I32_A64:
  case WebAssembly::ATOMIC_RMW_OR_I64_A32:
  case WebAssembly::ATOMIC_RMW_OR_I64_A64:
  case WebAssembly::ATOMIC_RMW_SUB_I32_A32:
  case WebAssembly::ATOMIC_RMW_SUB_I32_A64:
  case WebAssembly::ATOMIC_RMW_SUB_I64_A32:
  case WebAssembly::ATOMIC_RMW_SUB_I64_A64:
  case WebAssembly::ATOMIC_RMW_XCHG_I32_A32:
  case WebAssembly::ATOMIC_RMW_XCHG_I32_A64:
  case WebAssembly::ATOMIC_RMW_XCHG_I64_A32:
  case WebAssembly::ATOMIC_RMW_XCHG_I64_A64:
  case WebAssembly::ATOMIC_RMW_XOR_I32_A32:
  case WebAssembly::ATOMIC_RMW_XOR_I32_A64:
  case WebAssembly::ATOMIC_RMW_XOR_I64_A32:
  case WebAssembly::ATOMIC_RMW_XOR_I64_A64:
    return OperandMap[1][NamedIdx];
  case WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A32:
  case WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A64:
  case WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A32:
  case WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A64:
  case WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A32:
  case WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A64:
  case WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A32:
  case WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A64:
  case WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A32:
  case WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A64:
  case WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A32:
  case WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A64:
  case WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A32:
  case WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A64:
    return OperandMap[2][NamedIdx];
  case WebAssembly::MEMORY_ATOMIC_WAIT32_A32:
  case WebAssembly::MEMORY_ATOMIC_WAIT32_A64:
  case WebAssembly::MEMORY_ATOMIC_WAIT64_A32:
  case WebAssembly::MEMORY_ATOMIC_WAIT64_A64:
    return OperandMap[3][NamedIdx];
  case WebAssembly::MEMORY_ATOMIC_NOTIFY_A32:
  case WebAssembly::MEMORY_ATOMIC_NOTIFY_A64:
    return OperandMap[4][NamedIdx];
  case WebAssembly::LOAD_LANE_I16x8_A32:
  case WebAssembly::LOAD_LANE_I16x8_A64:
  case WebAssembly::LOAD_LANE_I32x4_A32:
  case WebAssembly::LOAD_LANE_I32x4_A64:
  case WebAssembly::LOAD_LANE_I64x2_A32:
  case WebAssembly::LOAD_LANE_I64x2_A64:
  case WebAssembly::LOAD_LANE_I8x16_A32:
  case WebAssembly::LOAD_LANE_I8x16_A64:
    return OperandMap[5][NamedIdx];
  case WebAssembly::ATOMIC_LOAD16_U_I32_A32_S:
  case WebAssembly::ATOMIC_LOAD16_U_I32_A64_S:
  case WebAssembly::ATOMIC_LOAD16_U_I64_A32_S:
  case WebAssembly::ATOMIC_LOAD16_U_I64_A64_S:
  case WebAssembly::ATOMIC_LOAD32_U_I64_A32_S:
  case WebAssembly::ATOMIC_LOAD32_U_I64_A64_S:
  case WebAssembly::ATOMIC_LOAD8_U_I32_A32_S:
  case WebAssembly::ATOMIC_LOAD8_U_I32_A64_S:
  case WebAssembly::ATOMIC_LOAD8_U_I64_A32_S:
  case WebAssembly::ATOMIC_LOAD8_U_I64_A64_S:
  case WebAssembly::ATOMIC_LOAD_I32_A32_S:
  case WebAssembly::ATOMIC_LOAD_I32_A64_S:
  case WebAssembly::ATOMIC_LOAD_I64_A32_S:
  case WebAssembly::ATOMIC_LOAD_I64_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_ADD_I32_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_ADD_I32_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_ADD_I64_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_ADD_I64_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_AND_I32_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_AND_I32_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_AND_I64_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_AND_I64_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_OR_I32_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_OR_I32_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_OR_I64_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_OR_I64_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_SUB_I32_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_SUB_I32_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_SUB_I64_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_SUB_I64_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_XOR_I32_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_XOR_I32_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_XOR_I64_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_XOR_I64_A64_S:
  case WebAssembly::ATOMIC_RMW32_U_ADD_I64_A32_S:
  case WebAssembly::ATOMIC_RMW32_U_ADD_I64_A64_S:
  case WebAssembly::ATOMIC_RMW32_U_AND_I64_A32_S:
  case WebAssembly::ATOMIC_RMW32_U_AND_I64_A64_S:
  case WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A32_S:
  case WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A64_S:
  case WebAssembly::ATOMIC_RMW32_U_OR_I64_A32_S:
  case WebAssembly::ATOMIC_RMW32_U_OR_I64_A64_S:
  case WebAssembly::ATOMIC_RMW32_U_SUB_I64_A32_S:
  case WebAssembly::ATOMIC_RMW32_U_SUB_I64_A64_S:
  case WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A32_S:
  case WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A64_S:
  case WebAssembly::ATOMIC_RMW32_U_XOR_I64_A32_S:
  case WebAssembly::ATOMIC_RMW32_U_XOR_I64_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_ADD_I32_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_ADD_I32_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_ADD_I64_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_ADD_I64_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_AND_I32_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_AND_I32_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_AND_I64_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_AND_I64_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_OR_I32_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_OR_I32_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_OR_I64_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_OR_I64_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_SUB_I32_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_SUB_I32_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_SUB_I64_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_SUB_I64_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_XOR_I32_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_XOR_I32_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_XOR_I64_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_XOR_I64_A64_S:
  case WebAssembly::ATOMIC_RMW_ADD_I32_A32_S:
  case WebAssembly::ATOMIC_RMW_ADD_I32_A64_S:
  case WebAssembly::ATOMIC_RMW_ADD_I64_A32_S:
  case WebAssembly::ATOMIC_RMW_ADD_I64_A64_S:
  case WebAssembly::ATOMIC_RMW_AND_I32_A32_S:
  case WebAssembly::ATOMIC_RMW_AND_I32_A64_S:
  case WebAssembly::ATOMIC_RMW_AND_I64_A32_S:
  case WebAssembly::ATOMIC_RMW_AND_I64_A64_S:
  case WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A32_S:
  case WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A64_S:
  case WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A32_S:
  case WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A64_S:
  case WebAssembly::ATOMIC_RMW_OR_I32_A32_S:
  case WebAssembly::ATOMIC_RMW_OR_I32_A64_S:
  case WebAssembly::ATOMIC_RMW_OR_I64_A32_S:
  case WebAssembly::ATOMIC_RMW_OR_I64_A64_S:
  case WebAssembly::ATOMIC_RMW_SUB_I32_A32_S:
  case WebAssembly::ATOMIC_RMW_SUB_I32_A64_S:
  case WebAssembly::ATOMIC_RMW_SUB_I64_A32_S:
  case WebAssembly::ATOMIC_RMW_SUB_I64_A64_S:
  case WebAssembly::ATOMIC_RMW_XCHG_I32_A32_S:
  case WebAssembly::ATOMIC_RMW_XCHG_I32_A64_S:
  case WebAssembly::ATOMIC_RMW_XCHG_I64_A32_S:
  case WebAssembly::ATOMIC_RMW_XCHG_I64_A64_S:
  case WebAssembly::ATOMIC_RMW_XOR_I32_A32_S:
  case WebAssembly::ATOMIC_RMW_XOR_I32_A64_S:
  case WebAssembly::ATOMIC_RMW_XOR_I64_A32_S:
  case WebAssembly::ATOMIC_RMW_XOR_I64_A64_S:
  case WebAssembly::ATOMIC_STORE16_I32_A32_S:
  case WebAssembly::ATOMIC_STORE16_I32_A64_S:
  case WebAssembly::ATOMIC_STORE16_I64_A32_S:
  case WebAssembly::ATOMIC_STORE16_I64_A64_S:
  case WebAssembly::ATOMIC_STORE32_I64_A32_S:
  case WebAssembly::ATOMIC_STORE32_I64_A64_S:
  case WebAssembly::ATOMIC_STORE8_I32_A32_S:
  case WebAssembly::ATOMIC_STORE8_I32_A64_S:
  case WebAssembly::ATOMIC_STORE8_I64_A32_S:
  case WebAssembly::ATOMIC_STORE8_I64_A64_S:
  case WebAssembly::ATOMIC_STORE_I32_A32_S:
  case WebAssembly::ATOMIC_STORE_I32_A64_S:
  case WebAssembly::ATOMIC_STORE_I64_A32_S:
  case WebAssembly::ATOMIC_STORE_I64_A64_S:
  case WebAssembly::LOAD16_SPLAT_A32_S:
  case WebAssembly::LOAD16_SPLAT_A64_S:
  case WebAssembly::LOAD16_S_I32_A32_S:
  case WebAssembly::LOAD16_S_I32_A64_S:
  case WebAssembly::LOAD16_S_I64_A32_S:
  case WebAssembly::LOAD16_S_I64_A64_S:
  case WebAssembly::LOAD16_U_I32_A32_S:
  case WebAssembly::LOAD16_U_I32_A64_S:
  case WebAssembly::LOAD16_U_I64_A32_S:
  case WebAssembly::LOAD16_U_I64_A64_S:
  case WebAssembly::LOAD32_SPLAT_A32_S:
  case WebAssembly::LOAD32_SPLAT_A64_S:
  case WebAssembly::LOAD32_S_I64_A32_S:
  case WebAssembly::LOAD32_S_I64_A64_S:
  case WebAssembly::LOAD32_U_I64_A32_S:
  case WebAssembly::LOAD32_U_I64_A64_S:
  case WebAssembly::LOAD64_SPLAT_A32_S:
  case WebAssembly::LOAD64_SPLAT_A64_S:
  case WebAssembly::LOAD8_SPLAT_A32_S:
  case WebAssembly::LOAD8_SPLAT_A64_S:
  case WebAssembly::LOAD8_S_I32_A32_S:
  case WebAssembly::LOAD8_S_I32_A64_S:
  case WebAssembly::LOAD8_S_I64_A32_S:
  case WebAssembly::LOAD8_S_I64_A64_S:
  case WebAssembly::LOAD8_U_I32_A32_S:
  case WebAssembly::LOAD8_U_I32_A64_S:
  case WebAssembly::LOAD8_U_I64_A32_S:
  case WebAssembly::LOAD8_U_I64_A64_S:
  case WebAssembly::LOAD_EXTEND_S_I16x8_A32_S:
  case WebAssembly::LOAD_EXTEND_S_I16x8_A64_S:
  case WebAssembly::LOAD_EXTEND_S_I32x4_A32_S:
  case WebAssembly::LOAD_EXTEND_S_I32x4_A64_S:
  case WebAssembly::LOAD_EXTEND_S_I64x2_A32_S:
  case WebAssembly::LOAD_EXTEND_S_I64x2_A64_S:
  case WebAssembly::LOAD_EXTEND_U_I16x8_A32_S:
  case WebAssembly::LOAD_EXTEND_U_I16x8_A64_S:
  case WebAssembly::LOAD_EXTEND_U_I32x4_A32_S:
  case WebAssembly::LOAD_EXTEND_U_I32x4_A64_S:
  case WebAssembly::LOAD_EXTEND_U_I64x2_A32_S:
  case WebAssembly::LOAD_EXTEND_U_I64x2_A64_S:
  case WebAssembly::LOAD_F32_A32_S:
  case WebAssembly::LOAD_F32_A64_S:
  case WebAssembly::LOAD_F64_A32_S:
  case WebAssembly::LOAD_F64_A64_S:
  case WebAssembly::LOAD_I32_A32_S:
  case WebAssembly::LOAD_I32_A64_S:
  case WebAssembly::LOAD_I64_A32_S:
  case WebAssembly::LOAD_I64_A64_S:
  case WebAssembly::LOAD_V128_A32_S:
  case WebAssembly::LOAD_V128_A64_S:
  case WebAssembly::LOAD_ZERO_I32x4_A32_S:
  case WebAssembly::LOAD_ZERO_I32x4_A64_S:
  case WebAssembly::LOAD_ZERO_I64x2_A32_S:
  case WebAssembly::LOAD_ZERO_I64x2_A64_S:
  case WebAssembly::MEMORY_ATOMIC_NOTIFY_A32_S:
  case WebAssembly::MEMORY_ATOMIC_NOTIFY_A64_S:
  case WebAssembly::MEMORY_ATOMIC_WAIT32_A32_S:
  case WebAssembly::MEMORY_ATOMIC_WAIT32_A64_S:
  case WebAssembly::MEMORY_ATOMIC_WAIT64_A32_S:
  case WebAssembly::MEMORY_ATOMIC_WAIT64_A64_S:
  case WebAssembly::STORE16_I32_A32_S:
  case WebAssembly::STORE16_I32_A64_S:
  case WebAssembly::STORE16_I64_A32_S:
  case WebAssembly::STORE16_I64_A64_S:
  case WebAssembly::STORE32_I64_A32_S:
  case WebAssembly::STORE32_I64_A64_S:
  case WebAssembly::STORE8_I32_A32_S:
  case WebAssembly::STORE8_I32_A64_S:
  case WebAssembly::STORE8_I64_A32_S:
  case WebAssembly::STORE8_I64_A64_S:
  case WebAssembly::STORE_F32_A32_S:
  case WebAssembly::STORE_F32_A64_S:
  case WebAssembly::STORE_F64_A32_S:
  case WebAssembly::STORE_F64_A64_S:
  case WebAssembly::STORE_I32_A32_S:
  case WebAssembly::STORE_I32_A64_S:
  case WebAssembly::STORE_I64_A32_S:
  case WebAssembly::STORE_I64_A64_S:
  case WebAssembly::STORE_V128_A32_S:
  case WebAssembly::STORE_V128_A64_S:
    return OperandMap[6][NamedIdx];
  case WebAssembly::ATOMIC_STORE16_I32_A32:
  case WebAssembly::ATOMIC_STORE16_I32_A64:
  case WebAssembly::ATOMIC_STORE16_I64_A32:
  case WebAssembly::ATOMIC_STORE16_I64_A64:
  case WebAssembly::ATOMIC_STORE32_I64_A32:
  case WebAssembly::ATOMIC_STORE32_I64_A64:
  case WebAssembly::ATOMIC_STORE8_I32_A32:
  case WebAssembly::ATOMIC_STORE8_I32_A64:
  case WebAssembly::ATOMIC_STORE8_I64_A32:
  case WebAssembly::ATOMIC_STORE8_I64_A64:
  case WebAssembly::ATOMIC_STORE_I32_A32:
  case WebAssembly::ATOMIC_STORE_I32_A64:
  case WebAssembly::ATOMIC_STORE_I64_A32:
  case WebAssembly::ATOMIC_STORE_I64_A64:
  case WebAssembly::STORE16_I32_A32:
  case WebAssembly::STORE16_I32_A64:
  case WebAssembly::STORE16_I64_A32:
  case WebAssembly::STORE16_I64_A64:
  case WebAssembly::STORE32_I64_A32:
  case WebAssembly::STORE32_I64_A64:
  case WebAssembly::STORE8_I32_A32:
  case WebAssembly::STORE8_I32_A64:
  case WebAssembly::STORE8_I64_A32:
  case WebAssembly::STORE8_I64_A64:
  case WebAssembly::STORE_F32_A32:
  case WebAssembly::STORE_F32_A64:
  case WebAssembly::STORE_F64_A32:
  case WebAssembly::STORE_F64_A64:
  case WebAssembly::STORE_I32_A32:
  case WebAssembly::STORE_I32_A64:
  case WebAssembly::STORE_I64_A32:
  case WebAssembly::STORE_I64_A64:
    return OperandMap[7][NamedIdx];
  case WebAssembly::STORE_V128_A32:
  case WebAssembly::STORE_V128_A64:
    return OperandMap[8][NamedIdx];
  case WebAssembly::STORE_LANE_I16x8_A32:
  case WebAssembly::STORE_LANE_I16x8_A64:
  case WebAssembly::STORE_LANE_I32x4_A32:
  case WebAssembly::STORE_LANE_I32x4_A64:
  case WebAssembly::STORE_LANE_I64x2_A32:
  case WebAssembly::STORE_LANE_I64x2_A64:
  case WebAssembly::STORE_LANE_I8x16_A32:
  case WebAssembly::STORE_LANE_I8x16_A64:
    return OperandMap[9][NamedIdx];
  case WebAssembly::LOAD_LANE_I16x8_A32_S:
  case WebAssembly::LOAD_LANE_I16x8_A64_S:
  case WebAssembly::LOAD_LANE_I32x4_A32_S:
  case WebAssembly::LOAD_LANE_I32x4_A64_S:
  case WebAssembly::LOAD_LANE_I64x2_A32_S:
  case WebAssembly::LOAD_LANE_I64x2_A64_S:
  case WebAssembly::LOAD_LANE_I8x16_A32_S:
  case WebAssembly::LOAD_LANE_I8x16_A64_S:
  case WebAssembly::STORE_LANE_I16x8_A32_S:
  case WebAssembly::STORE_LANE_I16x8_A64_S:
  case WebAssembly::STORE_LANE_I32x4_A32_S:
  case WebAssembly::STORE_LANE_I32x4_A64_S:
  case WebAssembly::STORE_LANE_I64x2_A32_S:
  case WebAssembly::STORE_LANE_I64x2_A64_S:
  case WebAssembly::STORE_LANE_I8x16_A32_S:
  case WebAssembly::STORE_LANE_I8x16_A64_S:
    return OperandMap[10][NamedIdx];
  default: return -1;
  }
}
} // end namespace WebAssembly
} // end namespace llvm
#endif //GET_INSTRINFO_NAMED_OPS

#ifdef GET_INSTRINFO_OPERAND_TYPES_ENUM
#undef GET_INSTRINFO_OPERAND_TYPES_ENUM
namespace llvm {
namespace WebAssembly {
namespace OpTypes {
enum OperandType {
  P2Align = 0,
  Signature = 1,
  TypeIndex = 2,
  bb_op = 3,
  brlist = 4,
  f32imm = 5,
  f32imm_op = 6,
  f64imm = 7,
  f64imm_op = 8,
  function32_op = 9,
  global_op32 = 10,
  global_op64 = 11,
  i1imm = 12,
  i8imm = 13,
  i16imm = 14,
  i32imm = 15,
  i32imm_op = 16,
  i64imm = 17,
  i64imm_op = 18,
  local_op = 19,
  offset32_op = 20,
  offset64_op = 21,
  ptype0 = 22,
  ptype1 = 23,
  ptype2 = 24,
  ptype3 = 25,
  ptype4 = 26,
  ptype5 = 27,
  table32_op = 28,
  tag_op = 29,
  type0 = 30,
  type1 = 31,
  type2 = 32,
  type3 = 33,
  type4 = 34,
  type5 = 35,
  untyped_imm_0 = 36,
  vec_i8imm_op = 37,
  vec_i16imm_op = 38,
  vec_i32imm_op = 39,
  vec_i64imm_op = 40,
  EXTERNREF = 41,
  F32 = 42,
  F64 = 43,
  FUNCREF = 44,
  I32 = 45,
  I64 = 46,
  V128 = 47,
  OPERAND_TYPE_LIST_END
};
} // end namespace OpTypes
} // end namespace WebAssembly
} // end namespace llvm
#endif // GET_INSTRINFO_OPERAND_TYPES_ENUM

#ifdef GET_INSTRINFO_OPERAND_TYPE
#undef GET_INSTRINFO_OPERAND_TYPE
namespace llvm {
namespace WebAssembly {
LLVM_READONLY
static int getOperandType(uint16_t Opcode, uint16_t OpIdx) {
  static const uint16_t Offsets[] = {
    /* PHI */
    0,
    /* INLINEASM */
    1,
    /* INLINEASM_BR */
    1,
    /* CFI_INSTRUCTION */
    1,
    /* EH_LABEL */
    2,
    /* GC_LABEL */
    3,
    /* ANNOTATION_LABEL */
    4,
    /* KILL */
    5,
    /* EXTRACT_SUBREG */
    5,
    /* INSERT_SUBREG */
    8,
    /* IMPLICIT_DEF */
    12,
    /* SUBREG_TO_REG */
    13,
    /* COPY_TO_REGCLASS */
    17,
    /* DBG_VALUE */
    20,
    /* DBG_VALUE_LIST */
    20,
    /* DBG_INSTR_REF */
    20,
    /* DBG_PHI */
    20,
    /* DBG_LABEL */
    20,
    /* REG_SEQUENCE */
    21,
    /* COPY */
    23,
    /* BUNDLE */
    25,
    /* LIFETIME_START */
    25,
    /* LIFETIME_END */
    26,
    /* PSEUDO_PROBE */
    27,
    /* ARITH_FENCE */
    31,
    /* STACKMAP */
    33,
    /* FENTRY_CALL */
    35,
    /* PATCHPOINT */
    35,
    /* LOAD_STACK_GUARD */
    41,
    /* PREALLOCATED_SETUP */
    42,
    /* PREALLOCATED_ARG */
    43,
    /* STATEPOINT */
    46,
    /* LOCAL_ESCAPE */
    46,
    /* FAULTING_OP */
    48,
    /* PATCHABLE_OP */
    49,
    /* PATCHABLE_FUNCTION_ENTER */
    49,
    /* PATCHABLE_RET */
    49,
    /* PATCHABLE_FUNCTION_EXIT */
    49,
    /* PATCHABLE_TAIL_CALL */
    49,
    /* PATCHABLE_EVENT_CALL */
    49,
    /* PATCHABLE_TYPED_EVENT_CALL */
    51,
    /* ICALL_BRANCH_FUNNEL */
    54,
    /* MEMBARRIER */
    54,
    /* G_ASSERT_SEXT */
    54,
    /* G_ASSERT_ZEXT */
    57,
    /* G_ASSERT_ALIGN */
    60,
    /* G_ADD */
    63,
    /* G_SUB */
    66,
    /* G_MUL */
    69,
    /* G_SDIV */
    72,
    /* G_UDIV */
    75,
    /* G_SREM */
    78,
    /* G_UREM */
    81,
    /* G_SDIVREM */
    84,
    /* G_UDIVREM */
    88,
    /* G_AND */
    92,
    /* G_OR */
    95,
    /* G_XOR */
    98,
    /* G_IMPLICIT_DEF */
    101,
    /* G_PHI */
    102,
    /* G_FRAME_INDEX */
    103,
    /* G_GLOBAL_VALUE */
    105,
    /* G_CONSTANT_POOL */
    107,
    /* G_EXTRACT */
    109,
    /* G_UNMERGE_VALUES */
    112,
    /* G_INSERT */
    114,
    /* G_MERGE_VALUES */
    118,
    /* G_BUILD_VECTOR */
    120,
    /* G_BUILD_VECTOR_TRUNC */
    122,
    /* G_CONCAT_VECTORS */
    124,
    /* G_PTRTOINT */
    126,
    /* G_INTTOPTR */
    128,
    /* G_BITCAST */
    130,
    /* G_FREEZE */
    132,
    /* G_CONSTANT_FOLD_BARRIER */
    134,
    /* G_INTRINSIC_FPTRUNC_ROUND */
    136,
    /* G_INTRINSIC_TRUNC */
    139,
    /* G_INTRINSIC_ROUND */
    141,
    /* G_INTRINSIC_LRINT */
    143,
    /* G_INTRINSIC_ROUNDEVEN */
    145,
    /* G_READCYCLECOUNTER */
    147,
    /* G_LOAD */
    148,
    /* G_SEXTLOAD */
    150,
    /* G_ZEXTLOAD */
    152,
    /* G_INDEXED_LOAD */
    154,
    /* G_INDEXED_SEXTLOAD */
    159,
    /* G_INDEXED_ZEXTLOAD */
    164,
    /* G_STORE */
    169,
    /* G_INDEXED_STORE */
    171,
    /* G_ATOMIC_CMPXCHG_WITH_SUCCESS */
    176,
    /* G_ATOMIC_CMPXCHG */
    181,
    /* G_ATOMICRMW_XCHG */
    185,
    /* G_ATOMICRMW_ADD */
    188,
    /* G_ATOMICRMW_SUB */
    191,
    /* G_ATOMICRMW_AND */
    194,
    /* G_ATOMICRMW_NAND */
    197,
    /* G_ATOMICRMW_OR */
    200,
    /* G_ATOMICRMW_XOR */
    203,
    /* G_ATOMICRMW_MAX */
    206,
    /* G_ATOMICRMW_MIN */
    209,
    /* G_ATOMICRMW_UMAX */
    212,
    /* G_ATOMICRMW_UMIN */
    215,
    /* G_ATOMICRMW_FADD */
    218,
    /* G_ATOMICRMW_FSUB */
    221,
    /* G_ATOMICRMW_FMAX */
    224,
    /* G_ATOMICRMW_FMIN */
    227,
    /* G_ATOMICRMW_UINC_WRAP */
    230,
    /* G_ATOMICRMW_UDEC_WRAP */
    233,
    /* G_FENCE */
    236,
    /* G_BRCOND */
    238,
    /* G_BRINDIRECT */
    240,
    /* G_INVOKE_REGION_START */
    241,
    /* G_INTRINSIC */
    241,
    /* G_INTRINSIC_W_SIDE_EFFECTS */
    242,
    /* G_ANYEXT */
    243,
    /* G_TRUNC */
    245,
    /* G_CONSTANT */
    247,
    /* G_FCONSTANT */
    249,
    /* G_VASTART */
    251,
    /* G_VAARG */
    252,
    /* G_SEXT */
    255,
    /* G_SEXT_INREG */
    257,
    /* G_ZEXT */
    260,
    /* G_SHL */
    262,
    /* G_LSHR */
    265,
    /* G_ASHR */
    268,
    /* G_FSHL */
    271,
    /* G_FSHR */
    275,
    /* G_ROTR */
    279,
    /* G_ROTL */
    282,
    /* G_ICMP */
    285,
    /* G_FCMP */
    289,
    /* G_SELECT */
    293,
    /* G_UADDO */
    297,
    /* G_UADDE */
    301,
    /* G_USUBO */
    306,
    /* G_USUBE */
    310,
    /* G_SADDO */
    315,
    /* G_SADDE */
    319,
    /* G_SSUBO */
    324,
    /* G_SSUBE */
    328,
    /* G_UMULO */
    333,
    /* G_SMULO */
    337,
    /* G_UMULH */
    341,
    /* G_SMULH */
    344,
    /* G_UADDSAT */
    347,
    /* G_SADDSAT */
    350,
    /* G_USUBSAT */
    353,
    /* G_SSUBSAT */
    356,
    /* G_USHLSAT */
    359,
    /* G_SSHLSAT */
    362,
    /* G_SMULFIX */
    365,
    /* G_UMULFIX */
    369,
    /* G_SMULFIXSAT */
    373,
    /* G_UMULFIXSAT */
    377,
    /* G_SDIVFIX */
    381,
    /* G_UDIVFIX */
    385,
    /* G_SDIVFIXSAT */
    389,
    /* G_UDIVFIXSAT */
    393,
    /* G_FADD */
    397,
    /* G_FSUB */
    400,
    /* G_FMUL */
    403,
    /* G_FMA */
    406,
    /* G_FMAD */
    410,
    /* G_FDIV */
    414,
    /* G_FREM */
    417,
    /* G_FPOW */
    420,
    /* G_FPOWI */
    423,
    /* G_FEXP */
    426,
    /* G_FEXP2 */
    428,
    /* G_FLOG */
    430,
    /* G_FLOG2 */
    432,
    /* G_FLOG10 */
    434,
    /* G_FLDEXP */
    436,
    /* G_FFREXP */
    439,
    /* G_FNEG */
    442,
    /* G_FPEXT */
    444,
    /* G_FPTRUNC */
    446,
    /* G_FPTOSI */
    448,
    /* G_FPTOUI */
    450,
    /* G_SITOFP */
    452,
    /* G_UITOFP */
    454,
    /* G_FABS */
    456,
    /* G_FCOPYSIGN */
    458,
    /* G_IS_FPCLASS */
    461,
    /* G_FCANONICALIZE */
    464,
    /* G_FMINNUM */
    466,
    /* G_FMAXNUM */
    469,
    /* G_FMINNUM_IEEE */
    472,
    /* G_FMAXNUM_IEEE */
    475,
    /* G_FMINIMUM */
    478,
    /* G_FMAXIMUM */
    481,
    /* G_PTR_ADD */
    484,
    /* G_PTRMASK */
    487,
    /* G_SMIN */
    490,
    /* G_SMAX */
    493,
    /* G_UMIN */
    496,
    /* G_UMAX */
    499,
    /* G_ABS */
    502,
    /* G_LROUND */
    504,
    /* G_LLROUND */
    506,
    /* G_BR */
    508,
    /* G_BRJT */
    509,
    /* G_INSERT_VECTOR_ELT */
    512,
    /* G_EXTRACT_VECTOR_ELT */
    516,
    /* G_SHUFFLE_VECTOR */
    519,
    /* G_CTTZ */
    523,
    /* G_CTTZ_ZERO_UNDEF */
    525,
    /* G_CTLZ */
    527,
    /* G_CTLZ_ZERO_UNDEF */
    529,
    /* G_CTPOP */
    531,
    /* G_BSWAP */
    533,
    /* G_BITREVERSE */
    535,
    /* G_FCEIL */
    537,
    /* G_FCOS */
    539,
    /* G_FSIN */
    541,
    /* G_FSQRT */
    543,
    /* G_FFLOOR */
    545,
    /* G_FRINT */
    547,
    /* G_FNEARBYINT */
    549,
    /* G_ADDRSPACE_CAST */
    551,
    /* G_BLOCK_ADDR */
    553,
    /* G_JUMP_TABLE */
    555,
    /* G_DYN_STACKALLOC */
    557,
    /* G_STRICT_FADD */
    560,
    /* G_STRICT_FSUB */
    563,
    /* G_STRICT_FMUL */
    566,
    /* G_STRICT_FDIV */
    569,
    /* G_STRICT_FREM */
    572,
    /* G_STRICT_FMA */
    575,
    /* G_STRICT_FSQRT */
    579,
    /* G_STRICT_FLDEXP */
    581,
    /* G_READ_REGISTER */
    584,
    /* G_WRITE_REGISTER */
    586,
    /* G_MEMCPY */
    588,
    /* G_MEMCPY_INLINE */
    592,
    /* G_MEMMOVE */
    595,
    /* G_MEMSET */
    599,
    /* G_BZERO */
    603,
    /* G_VECREDUCE_SEQ_FADD */
    606,
    /* G_VECREDUCE_SEQ_FMUL */
    609,
    /* G_VECREDUCE_FADD */
    612,
    /* G_VECREDUCE_FMUL */
    614,
    /* G_VECREDUCE_FMAX */
    616,
    /* G_VECREDUCE_FMIN */
    618,
    /* G_VECREDUCE_ADD */
    620,
    /* G_VECREDUCE_MUL */
    622,
    /* G_VECREDUCE_AND */
    624,
    /* G_VECREDUCE_OR */
    626,
    /* G_VECREDUCE_XOR */
    628,
    /* G_VECREDUCE_SMAX */
    630,
    /* G_VECREDUCE_SMIN */
    632,
    /* G_VECREDUCE_UMAX */
    634,
    /* G_VECREDUCE_UMIN */
    636,
    /* G_SBFX */
    638,
    /* G_UBFX */
    642,
    /* CALL_PARAMS */
    646,
    /* CALL_PARAMS_S */
    647,
    /* CALL_RESULTS */
    648,
    /* CALL_RESULTS_S */
    648,
    /* CATCHRET */
    648,
    /* CATCHRET_S */
    650,
    /* CLEANUPRET */
    652,
    /* CLEANUPRET_S */
    652,
    /* COMPILER_FENCE */
    652,
    /* COMPILER_FENCE_S */
    652,
    /* RET_CALL_RESULTS */
    652,
    /* RET_CALL_RESULTS_S */
    652,
    /* ABS_F32 */
    652,
    /* ABS_F32_S */
    654,
    /* ABS_F32x4 */
    654,
    /* ABS_F32x4_S */
    656,
    /* ABS_F64 */
    656,
    /* ABS_F64_S */
    658,
    /* ABS_F64x2 */
    658,
    /* ABS_F64x2_S */
    660,
    /* ABS_I16x8 */
    660,
    /* ABS_I16x8_S */
    662,
    /* ABS_I32x4 */
    662,
    /* ABS_I32x4_S */
    664,
    /* ABS_I64x2 */
    664,
    /* ABS_I64x2_S */
    666,
    /* ABS_I8x16 */
    666,
    /* ABS_I8x16_S */
    668,
    /* ADD_F32 */
    668,
    /* ADD_F32_S */
    671,
    /* ADD_F32x4 */
    671,
    /* ADD_F32x4_S */
    674,
    /* ADD_F64 */
    674,
    /* ADD_F64_S */
    677,
    /* ADD_F64x2 */
    677,
    /* ADD_F64x2_S */
    680,
    /* ADD_I16x8 */
    680,
    /* ADD_I16x8_S */
    683,
    /* ADD_I32 */
    683,
    /* ADD_I32_S */
    686,
    /* ADD_I32x4 */
    686,
    /* ADD_I32x4_S */
    689,
    /* ADD_I64 */
    689,
    /* ADD_I64_S */
    692,
    /* ADD_I64x2 */
    692,
    /* ADD_I64x2_S */
    695,
    /* ADD_I8x16 */
    695,
    /* ADD_I8x16_S */
    698,
    /* ADD_SAT_S_I16x8 */
    698,
    /* ADD_SAT_S_I16x8_S */
    701,
    /* ADD_SAT_S_I8x16 */
    701,
    /* ADD_SAT_S_I8x16_S */
    704,
    /* ADD_SAT_U_I16x8 */
    704,
    /* ADD_SAT_U_I16x8_S */
    707,
    /* ADD_SAT_U_I8x16 */
    707,
    /* ADD_SAT_U_I8x16_S */
    710,
    /* ADJCALLSTACKDOWN */
    710,
    /* ADJCALLSTACKDOWN_S */
    712,
    /* ADJCALLSTACKUP */
    714,
    /* ADJCALLSTACKUP_S */
    716,
    /* ALLTRUE_I16x8 */
    718,
    /* ALLTRUE_I16x8_S */
    720,
    /* ALLTRUE_I32x4 */
    720,
    /* ALLTRUE_I32x4_S */
    722,
    /* ALLTRUE_I64x2 */
    722,
    /* ALLTRUE_I64x2_S */
    724,
    /* ALLTRUE_I8x16 */
    724,
    /* ALLTRUE_I8x16_S */
    726,
    /* AND */
    726,
    /* ANDNOT */
    729,
    /* ANDNOT_S */
    732,
    /* AND_I32 */
    732,
    /* AND_I32_S */
    735,
    /* AND_I64 */
    735,
    /* AND_I64_S */
    738,
    /* AND_S */
    738,
    /* ANYTRUE */
    738,
    /* ANYTRUE_S */
    740,
    /* ARGUMENT_externref */
    740,
    /* ARGUMENT_externref_S */
    742,
    /* ARGUMENT_f32 */
    743,
    /* ARGUMENT_f32_S */
    745,
    /* ARGUMENT_f64 */
    746,
    /* ARGUMENT_f64_S */
    748,
    /* ARGUMENT_funcref */
    749,
    /* ARGUMENT_funcref_S */
    751,
    /* ARGUMENT_i32 */
    752,
    /* ARGUMENT_i32_S */
    754,
    /* ARGUMENT_i64 */
    755,
    /* ARGUMENT_i64_S */
    757,
    /* ARGUMENT_v16i8 */
    758,
    /* ARGUMENT_v16i8_S */
    760,
    /* ARGUMENT_v2f64 */
    761,
    /* ARGUMENT_v2f64_S */
    763,
    /* ARGUMENT_v2i64 */
    764,
    /* ARGUMENT_v2i64_S */
    766,
    /* ARGUMENT_v4f32 */
    767,
    /* ARGUMENT_v4f32_S */
    769,
    /* ARGUMENT_v4i32 */
    770,
    /* ARGUMENT_v4i32_S */
    772,
    /* ARGUMENT_v8i16 */
    773,
    /* ARGUMENT_v8i16_S */
    775,
    /* ATOMIC_FENCE */
    776,
    /* ATOMIC_FENCE_S */
    777,
    /* ATOMIC_LOAD16_U_I32_A32 */
    778,
    /* ATOMIC_LOAD16_U_I32_A32_S */
    782,
    /* ATOMIC_LOAD16_U_I32_A64 */
    784,
    /* ATOMIC_LOAD16_U_I32_A64_S */
    788,
    /* ATOMIC_LOAD16_U_I64_A32 */
    790,
    /* ATOMIC_LOAD16_U_I64_A32_S */
    794,
    /* ATOMIC_LOAD16_U_I64_A64 */
    796,
    /* ATOMIC_LOAD16_U_I64_A64_S */
    800,
    /* ATOMIC_LOAD32_U_I64_A32 */
    802,
    /* ATOMIC_LOAD32_U_I64_A32_S */
    806,
    /* ATOMIC_LOAD32_U_I64_A64 */
    808,
    /* ATOMIC_LOAD32_U_I64_A64_S */
    812,
    /* ATOMIC_LOAD8_U_I32_A32 */
    814,
    /* ATOMIC_LOAD8_U_I32_A32_S */
    818,
    /* ATOMIC_LOAD8_U_I32_A64 */
    820,
    /* ATOMIC_LOAD8_U_I32_A64_S */
    824,
    /* ATOMIC_LOAD8_U_I64_A32 */
    826,
    /* ATOMIC_LOAD8_U_I64_A32_S */
    830,
    /* ATOMIC_LOAD8_U_I64_A64 */
    832,
    /* ATOMIC_LOAD8_U_I64_A64_S */
    836,
    /* ATOMIC_LOAD_I32_A32 */
    838,
    /* ATOMIC_LOAD_I32_A32_S */
    842,
    /* ATOMIC_LOAD_I32_A64 */
    844,
    /* ATOMIC_LOAD_I32_A64_S */
    848,
    /* ATOMIC_LOAD_I64_A32 */
    850,
    /* ATOMIC_LOAD_I64_A32_S */
    854,
    /* ATOMIC_LOAD_I64_A64 */
    856,
    /* ATOMIC_LOAD_I64_A64_S */
    860,
    /* ATOMIC_RMW16_U_ADD_I32_A32 */
    862,
    /* ATOMIC_RMW16_U_ADD_I32_A32_S */
    867,
    /* ATOMIC_RMW16_U_ADD_I32_A64 */
    869,
    /* ATOMIC_RMW16_U_ADD_I32_A64_S */
    874,
    /* ATOMIC_RMW16_U_ADD_I64_A32 */
    876,
    /* ATOMIC_RMW16_U_ADD_I64_A32_S */
    881,
    /* ATOMIC_RMW16_U_ADD_I64_A64 */
    883,
    /* ATOMIC_RMW16_U_ADD_I64_A64_S */
    888,
    /* ATOMIC_RMW16_U_AND_I32_A32 */
    890,
    /* ATOMIC_RMW16_U_AND_I32_A32_S */
    895,
    /* ATOMIC_RMW16_U_AND_I32_A64 */
    897,
    /* ATOMIC_RMW16_U_AND_I32_A64_S */
    902,
    /* ATOMIC_RMW16_U_AND_I64_A32 */
    904,
    /* ATOMIC_RMW16_U_AND_I64_A32_S */
    909,
    /* ATOMIC_RMW16_U_AND_I64_A64 */
    911,
    /* ATOMIC_RMW16_U_AND_I64_A64_S */
    916,
    /* ATOMIC_RMW16_U_CMPXCHG_I32_A32 */
    918,
    /* ATOMIC_RMW16_U_CMPXCHG_I32_A32_S */
    924,
    /* ATOMIC_RMW16_U_CMPXCHG_I32_A64 */
    926,
    /* ATOMIC_RMW16_U_CMPXCHG_I32_A64_S */
    932,
    /* ATOMIC_RMW16_U_CMPXCHG_I64_A32 */
    934,
    /* ATOMIC_RMW16_U_CMPXCHG_I64_A32_S */
    940,
    /* ATOMIC_RMW16_U_CMPXCHG_I64_A64 */
    942,
    /* ATOMIC_RMW16_U_CMPXCHG_I64_A64_S */
    948,
    /* ATOMIC_RMW16_U_OR_I32_A32 */
    950,
    /* ATOMIC_RMW16_U_OR_I32_A32_S */
    955,
    /* ATOMIC_RMW16_U_OR_I32_A64 */
    957,
    /* ATOMIC_RMW16_U_OR_I32_A64_S */
    962,
    /* ATOMIC_RMW16_U_OR_I64_A32 */
    964,
    /* ATOMIC_RMW16_U_OR_I64_A32_S */
    969,
    /* ATOMIC_RMW16_U_OR_I64_A64 */
    971,
    /* ATOMIC_RMW16_U_OR_I64_A64_S */
    976,
    /* ATOMIC_RMW16_U_SUB_I32_A32 */
    978,
    /* ATOMIC_RMW16_U_SUB_I32_A32_S */
    983,
    /* ATOMIC_RMW16_U_SUB_I32_A64 */
    985,
    /* ATOMIC_RMW16_U_SUB_I32_A64_S */
    990,
    /* ATOMIC_RMW16_U_SUB_I64_A32 */
    992,
    /* ATOMIC_RMW16_U_SUB_I64_A32_S */
    997,
    /* ATOMIC_RMW16_U_SUB_I64_A64 */
    999,
    /* ATOMIC_RMW16_U_SUB_I64_A64_S */
    1004,
    /* ATOMIC_RMW16_U_XCHG_I32_A32 */
    1006,
    /* ATOMIC_RMW16_U_XCHG_I32_A32_S */
    1011,
    /* ATOMIC_RMW16_U_XCHG_I32_A64 */
    1013,
    /* ATOMIC_RMW16_U_XCHG_I32_A64_S */
    1018,
    /* ATOMIC_RMW16_U_XCHG_I64_A32 */
    1020,
    /* ATOMIC_RMW16_U_XCHG_I64_A32_S */
    1025,
    /* ATOMIC_RMW16_U_XCHG_I64_A64 */
    1027,
    /* ATOMIC_RMW16_U_XCHG_I64_A64_S */
    1032,
    /* ATOMIC_RMW16_U_XOR_I32_A32 */
    1034,
    /* ATOMIC_RMW16_U_XOR_I32_A32_S */
    1039,
    /* ATOMIC_RMW16_U_XOR_I32_A64 */
    1041,
    /* ATOMIC_RMW16_U_XOR_I32_A64_S */
    1046,
    /* ATOMIC_RMW16_U_XOR_I64_A32 */
    1048,
    /* ATOMIC_RMW16_U_XOR_I64_A32_S */
    1053,
    /* ATOMIC_RMW16_U_XOR_I64_A64 */
    1055,
    /* ATOMIC_RMW16_U_XOR_I64_A64_S */
    1060,
    /* ATOMIC_RMW32_U_ADD_I64_A32 */
    1062,
    /* ATOMIC_RMW32_U_ADD_I64_A32_S */
    1067,
    /* ATOMIC_RMW32_U_ADD_I64_A64 */
    1069,
    /* ATOMIC_RMW32_U_ADD_I64_A64_S */
    1074,
    /* ATOMIC_RMW32_U_AND_I64_A32 */
    1076,
    /* ATOMIC_RMW32_U_AND_I64_A32_S */
    1081,
    /* ATOMIC_RMW32_U_AND_I64_A64 */
    1083,
    /* ATOMIC_RMW32_U_AND_I64_A64_S */
    1088,
    /* ATOMIC_RMW32_U_CMPXCHG_I64_A32 */
    1090,
    /* ATOMIC_RMW32_U_CMPXCHG_I64_A32_S */
    1096,
    /* ATOMIC_RMW32_U_CMPXCHG_I64_A64 */
    1098,
    /* ATOMIC_RMW32_U_CMPXCHG_I64_A64_S */
    1104,
    /* ATOMIC_RMW32_U_OR_I64_A32 */
    1106,
    /* ATOMIC_RMW32_U_OR_I64_A32_S */
    1111,
    /* ATOMIC_RMW32_U_OR_I64_A64 */
    1113,
    /* ATOMIC_RMW32_U_OR_I64_A64_S */
    1118,
    /* ATOMIC_RMW32_U_SUB_I64_A32 */
    1120,
    /* ATOMIC_RMW32_U_SUB_I64_A32_S */
    1125,
    /* ATOMIC_RMW32_U_SUB_I64_A64 */
    1127,
    /* ATOMIC_RMW32_U_SUB_I64_A64_S */
    1132,
    /* ATOMIC_RMW32_U_XCHG_I64_A32 */
    1134,
    /* ATOMIC_RMW32_U_XCHG_I64_A32_S */
    1139,
    /* ATOMIC_RMW32_U_XCHG_I64_A64 */
    1141,
    /* ATOMIC_RMW32_U_XCHG_I64_A64_S */
    1146,
    /* ATOMIC_RMW32_U_XOR_I64_A32 */
    1148,
    /* ATOMIC_RMW32_U_XOR_I64_A32_S */
    1153,
    /* ATOMIC_RMW32_U_XOR_I64_A64 */
    1155,
    /* ATOMIC_RMW32_U_XOR_I64_A64_S */
    1160,
    /* ATOMIC_RMW8_U_ADD_I32_A32 */
    1162,
    /* ATOMIC_RMW8_U_ADD_I32_A32_S */
    1167,
    /* ATOMIC_RMW8_U_ADD_I32_A64 */
    1169,
    /* ATOMIC_RMW8_U_ADD_I32_A64_S */
    1174,
    /* ATOMIC_RMW8_U_ADD_I64_A32 */
    1176,
    /* ATOMIC_RMW8_U_ADD_I64_A32_S */
    1181,
    /* ATOMIC_RMW8_U_ADD_I64_A64 */
    1183,
    /* ATOMIC_RMW8_U_ADD_I64_A64_S */
    1188,
    /* ATOMIC_RMW8_U_AND_I32_A32 */
    1190,
    /* ATOMIC_RMW8_U_AND_I32_A32_S */
    1195,
    /* ATOMIC_RMW8_U_AND_I32_A64 */
    1197,
    /* ATOMIC_RMW8_U_AND_I32_A64_S */
    1202,
    /* ATOMIC_RMW8_U_AND_I64_A32 */
    1204,
    /* ATOMIC_RMW8_U_AND_I64_A32_S */
    1209,
    /* ATOMIC_RMW8_U_AND_I64_A64 */
    1211,
    /* ATOMIC_RMW8_U_AND_I64_A64_S */
    1216,
    /* ATOMIC_RMW8_U_CMPXCHG_I32_A32 */
    1218,
    /* ATOMIC_RMW8_U_CMPXCHG_I32_A32_S */
    1224,
    /* ATOMIC_RMW8_U_CMPXCHG_I32_A64 */
    1226,
    /* ATOMIC_RMW8_U_CMPXCHG_I32_A64_S */
    1232,
    /* ATOMIC_RMW8_U_CMPXCHG_I64_A32 */
    1234,
    /* ATOMIC_RMW8_U_CMPXCHG_I64_A32_S */
    1240,
    /* ATOMIC_RMW8_U_CMPXCHG_I64_A64 */
    1242,
    /* ATOMIC_RMW8_U_CMPXCHG_I64_A64_S */
    1248,
    /* ATOMIC_RMW8_U_OR_I32_A32 */
    1250,
    /* ATOMIC_RMW8_U_OR_I32_A32_S */
    1255,
    /* ATOMIC_RMW8_U_OR_I32_A64 */
    1257,
    /* ATOMIC_RMW8_U_OR_I32_A64_S */
    1262,
    /* ATOMIC_RMW8_U_OR_I64_A32 */
    1264,
    /* ATOMIC_RMW8_U_OR_I64_A32_S */
    1269,
    /* ATOMIC_RMW8_U_OR_I64_A64 */
    1271,
    /* ATOMIC_RMW8_U_OR_I64_A64_S */
    1276,
    /* ATOMIC_RMW8_U_SUB_I32_A32 */
    1278,
    /* ATOMIC_RMW8_U_SUB_I32_A32_S */
    1283,
    /* ATOMIC_RMW8_U_SUB_I32_A64 */
    1285,
    /* ATOMIC_RMW8_U_SUB_I32_A64_S */
    1290,
    /* ATOMIC_RMW8_U_SUB_I64_A32 */
    1292,
    /* ATOMIC_RMW8_U_SUB_I64_A32_S */
    1297,
    /* ATOMIC_RMW8_U_SUB_I64_A64 */
    1299,
    /* ATOMIC_RMW8_U_SUB_I64_A64_S */
    1304,
    /* ATOMIC_RMW8_U_XCHG_I32_A32 */
    1306,
    /* ATOMIC_RMW8_U_XCHG_I32_A32_S */
    1311,
    /* ATOMIC_RMW8_U_XCHG_I32_A64 */
    1313,
    /* ATOMIC_RMW8_U_XCHG_I32_A64_S */
    1318,
    /* ATOMIC_RMW8_U_XCHG_I64_A32 */
    1320,
    /* ATOMIC_RMW8_U_XCHG_I64_A32_S */
    1325,
    /* ATOMIC_RMW8_U_XCHG_I64_A64 */
    1327,
    /* ATOMIC_RMW8_U_XCHG_I64_A64_S */
    1332,
    /* ATOMIC_RMW8_U_XOR_I32_A32 */
    1334,
    /* ATOMIC_RMW8_U_XOR_I32_A32_S */
    1339,
    /* ATOMIC_RMW8_U_XOR_I32_A64 */
    1341,
    /* ATOMIC_RMW8_U_XOR_I32_A64_S */
    1346,
    /* ATOMIC_RMW8_U_XOR_I64_A32 */
    1348,
    /* ATOMIC_RMW8_U_XOR_I64_A32_S */
    1353,
    /* ATOMIC_RMW8_U_XOR_I64_A64 */
    1355,
    /* ATOMIC_RMW8_U_XOR_I64_A64_S */
    1360,
    /* ATOMIC_RMW_ADD_I32_A32 */
    1362,
    /* ATOMIC_RMW_ADD_I32_A32_S */
    1367,
    /* ATOMIC_RMW_ADD_I32_A64 */
    1369,
    /* ATOMIC_RMW_ADD_I32_A64_S */
    1374,
    /* ATOMIC_RMW_ADD_I64_A32 */
    1376,
    /* ATOMIC_RMW_ADD_I64_A32_S */
    1381,
    /* ATOMIC_RMW_ADD_I64_A64 */
    1383,
    /* ATOMIC_RMW_ADD_I64_A64_S */
    1388,
    /* ATOMIC_RMW_AND_I32_A32 */
    1390,
    /* ATOMIC_RMW_AND_I32_A32_S */
    1395,
    /* ATOMIC_RMW_AND_I32_A64 */
    1397,
    /* ATOMIC_RMW_AND_I32_A64_S */
    1402,
    /* ATOMIC_RMW_AND_I64_A32 */
    1404,
    /* ATOMIC_RMW_AND_I64_A32_S */
    1409,
    /* ATOMIC_RMW_AND_I64_A64 */
    1411,
    /* ATOMIC_RMW_AND_I64_A64_S */
    1416,
    /* ATOMIC_RMW_CMPXCHG_I32_A32 */
    1418,
    /* ATOMIC_RMW_CMPXCHG_I32_A32_S */
    1424,
    /* ATOMIC_RMW_CMPXCHG_I32_A64 */
    1426,
    /* ATOMIC_RMW_CMPXCHG_I32_A64_S */
    1432,
    /* ATOMIC_RMW_CMPXCHG_I64_A32 */
    1434,
    /* ATOMIC_RMW_CMPXCHG_I64_A32_S */
    1440,
    /* ATOMIC_RMW_CMPXCHG_I64_A64 */
    1442,
    /* ATOMIC_RMW_CMPXCHG_I64_A64_S */
    1448,
    /* ATOMIC_RMW_OR_I32_A32 */
    1450,
    /* ATOMIC_RMW_OR_I32_A32_S */
    1455,
    /* ATOMIC_RMW_OR_I32_A64 */
    1457,
    /* ATOMIC_RMW_OR_I32_A64_S */
    1462,
    /* ATOMIC_RMW_OR_I64_A32 */
    1464,
    /* ATOMIC_RMW_OR_I64_A32_S */
    1469,
    /* ATOMIC_RMW_OR_I64_A64 */
    1471,
    /* ATOMIC_RMW_OR_I64_A64_S */
    1476,
    /* ATOMIC_RMW_SUB_I32_A32 */
    1478,
    /* ATOMIC_RMW_SUB_I32_A32_S */
    1483,
    /* ATOMIC_RMW_SUB_I32_A64 */
    1485,
    /* ATOMIC_RMW_SUB_I32_A64_S */
    1490,
    /* ATOMIC_RMW_SUB_I64_A32 */
    1492,
    /* ATOMIC_RMW_SUB_I64_A32_S */
    1497,
    /* ATOMIC_RMW_SUB_I64_A64 */
    1499,
    /* ATOMIC_RMW_SUB_I64_A64_S */
    1504,
    /* ATOMIC_RMW_XCHG_I32_A32 */
    1506,
    /* ATOMIC_RMW_XCHG_I32_A32_S */
    1511,
    /* ATOMIC_RMW_XCHG_I32_A64 */
    1513,
    /* ATOMIC_RMW_XCHG_I32_A64_S */
    1518,
    /* ATOMIC_RMW_XCHG_I64_A32 */
    1520,
    /* ATOMIC_RMW_XCHG_I64_A32_S */
    1525,
    /* ATOMIC_RMW_XCHG_I64_A64 */
    1527,
    /* ATOMIC_RMW_XCHG_I64_A64_S */
    1532,
    /* ATOMIC_RMW_XOR_I32_A32 */
    1534,
    /* ATOMIC_RMW_XOR_I32_A32_S */
    1539,
    /* ATOMIC_RMW_XOR_I32_A64 */
    1541,
    /* ATOMIC_RMW_XOR_I32_A64_S */
    1546,
    /* ATOMIC_RMW_XOR_I64_A32 */
    1548,
    /* ATOMIC_RMW_XOR_I64_A32_S */
    1553,
    /* ATOMIC_RMW_XOR_I64_A64 */
    1555,
    /* ATOMIC_RMW_XOR_I64_A64_S */
    1560,
    /* ATOMIC_STORE16_I32_A32 */
    1562,
    /* ATOMIC_STORE16_I32_A32_S */
    1566,
    /* ATOMIC_STORE16_I32_A64 */
    1568,
    /* ATOMIC_STORE16_I32_A64_S */
    1572,
    /* ATOMIC_STORE16_I64_A32 */
    1574,
    /* ATOMIC_STORE16_I64_A32_S */
    1578,
    /* ATOMIC_STORE16_I64_A64 */
    1580,
    /* ATOMIC_STORE16_I64_A64_S */
    1584,
    /* ATOMIC_STORE32_I64_A32 */
    1586,
    /* ATOMIC_STORE32_I64_A32_S */
    1590,
    /* ATOMIC_STORE32_I64_A64 */
    1592,
    /* ATOMIC_STORE32_I64_A64_S */
    1596,
    /* ATOMIC_STORE8_I32_A32 */
    1598,
    /* ATOMIC_STORE8_I32_A32_S */
    1602,
    /* ATOMIC_STORE8_I32_A64 */
    1604,
    /* ATOMIC_STORE8_I32_A64_S */
    1608,
    /* ATOMIC_STORE8_I64_A32 */
    1610,
    /* ATOMIC_STORE8_I64_A32_S */
    1614,
    /* ATOMIC_STORE8_I64_A64 */
    1616,
    /* ATOMIC_STORE8_I64_A64_S */
    1620,
    /* ATOMIC_STORE_I32_A32 */
    1622,
    /* ATOMIC_STORE_I32_A32_S */
    1626,
    /* ATOMIC_STORE_I32_A64 */
    1628,
    /* ATOMIC_STORE_I32_A64_S */
    1632,
    /* ATOMIC_STORE_I64_A32 */
    1634,
    /* ATOMIC_STORE_I64_A32_S */
    1638,
    /* ATOMIC_STORE_I64_A64 */
    1640,
    /* ATOMIC_STORE_I64_A64_S */
    1644,
    /* AVGR_U_I16x8 */
    1646,
    /* AVGR_U_I16x8_S */
    1649,
    /* AVGR_U_I8x16 */
    1649,
    /* AVGR_U_I8x16_S */
    1652,
    /* BITMASK_I16x8 */
    1652,
    /* BITMASK_I16x8_S */
    1654,
    /* BITMASK_I32x4 */
    1654,
    /* BITMASK_I32x4_S */
    1656,
    /* BITMASK_I64x2 */
    1656,
    /* BITMASK_I64x2_S */
    1658,
    /* BITMASK_I8x16 */
    1658,
    /* BITMASK_I8x16_S */
    1660,
    /* BITSELECT */
    1660,
    /* BITSELECT_S */
    1664,
    /* BLOCK */
    1664,
    /* BLOCK_S */
    1665,
    /* BR */
    1666,
    /* BR_IF */
    1667,
    /* BR_IF_S */
    1669,
    /* BR_S */
    1670,
    /* BR_TABLE_I32 */
    1671,
    /* BR_TABLE_I32_S */
    1672,
    /* BR_TABLE_I64 */
    1673,
    /* BR_TABLE_I64_S */
    1674,
    /* BR_UNLESS */
    1675,
    /* BR_UNLESS_S */
    1677,
    /* CALL */
    1678,
    /* CALL_INDIRECT */
    1679,
    /* CALL_INDIRECT_S */
    1681,
    /* CALL_S */
    1683,
    /* CATCH */
    1684,
    /* CATCH_ALL */
    1685,
    /* CATCH_ALL_S */
    1685,
    /* CATCH_S */
    1685,
    /* CEIL_F32 */
    1686,
    /* CEIL_F32_S */
    1688,
    /* CEIL_F32x4 */
    1688,
    /* CEIL_F32x4_S */
    1690,
    /* CEIL_F64 */
    1690,
    /* CEIL_F64_S */
    1692,
    /* CEIL_F64x2 */
    1692,
    /* CEIL_F64x2_S */
    1694,
    /* CLZ_I32 */
    1694,
    /* CLZ_I32_S */
    1696,
    /* CLZ_I64 */
    1696,
    /* CLZ_I64_S */
    1698,
    /* CONST_F32 */
    1698,
    /* CONST_F32_S */
    1700,
    /* CONST_F64 */
    1701,
    /* CONST_F64_S */
    1703,
    /* CONST_I32 */
    1704,
    /* CONST_I32_S */
    1706,
    /* CONST_I64 */
    1707,
    /* CONST_I64_S */
    1709,
    /* CONST_V128_F32x4 */
    1710,
    /* CONST_V128_F32x4_S */
    1715,
    /* CONST_V128_F64x2 */
    1719,
    /* CONST_V128_F64x2_S */
    1722,
    /* CONST_V128_I16x8 */
    1724,
    /* CONST_V128_I16x8_S */
    1733,
    /* CONST_V128_I32x4 */
    1741,
    /* CONST_V128_I32x4_S */
    1746,
    /* CONST_V128_I64x2 */
    1750,
    /* CONST_V128_I64x2_S */
    1753,
    /* CONST_V128_I8x16 */
    1755,
    /* CONST_V128_I8x16_S */
    1772,
    /* COPYSIGN_F32 */
    1788,
    /* COPYSIGN_F32_S */
    1791,
    /* COPYSIGN_F64 */
    1791,
    /* COPYSIGN_F64_S */
    1794,
    /* COPY_EXTERNREF */
    1794,
    /* COPY_EXTERNREF_S */
    1796,
    /* COPY_F32 */
    1796,
    /* COPY_F32_S */
    1798,
    /* COPY_F64 */
    1798,
    /* COPY_F64_S */
    1800,
    /* COPY_FUNCREF */
    1800,
    /* COPY_FUNCREF_S */
    1802,
    /* COPY_I32 */
    1802,
    /* COPY_I32_S */
    1804,
    /* COPY_I64 */
    1804,
    /* COPY_I64_S */
    1806,
    /* COPY_V128 */
    1806,
    /* COPY_V128_S */
    1808,
    /* CTZ_I32 */
    1808,
    /* CTZ_I32_S */
    1810,
    /* CTZ_I64 */
    1810,
    /* CTZ_I64_S */
    1812,
    /* DEBUG_UNREACHABLE */
    1812,
    /* DEBUG_UNREACHABLE_S */
    1812,
    /* DELEGATE */
    1812,
    /* DELEGATE_S */
    1813,
    /* DIV_F32 */
    1814,
    /* DIV_F32_S */
    1817,
    /* DIV_F32x4 */
    1817,
    /* DIV_F32x4_S */
    1820,
    /* DIV_F64 */
    1820,
    /* DIV_F64_S */
    1823,
    /* DIV_F64x2 */
    1823,
    /* DIV_F64x2_S */
    1826,
    /* DIV_S_I32 */
    1826,
    /* DIV_S_I32_S */
    1829,
    /* DIV_S_I64 */
    1829,
    /* DIV_S_I64_S */
    1832,
    /* DIV_U_I32 */
    1832,
    /* DIV_U_I32_S */
    1835,
    /* DIV_U_I64 */
    1835,
    /* DIV_U_I64_S */
    1838,
    /* DOT */
    1838,
    /* DOT_S */
    1841,
    /* DROP_EXTERNREF */
    1841,
    /* DROP_EXTERNREF_S */
    1842,
    /* DROP_F32 */
    1842,
    /* DROP_F32_S */
    1843,
    /* DROP_F64 */
    1843,
    /* DROP_F64_S */
    1844,
    /* DROP_FUNCREF */
    1844,
    /* DROP_FUNCREF_S */
    1845,
    /* DROP_I32 */
    1845,
    /* DROP_I32_S */
    1846,
    /* DROP_I64 */
    1846,
    /* DROP_I64_S */
    1847,
    /* DROP_V128 */
    1847,
    /* DROP_V128_S */
    1848,
    /* ELSE */
    1848,
    /* ELSE_S */
    1848,
    /* END */
    1848,
    /* END_BLOCK */
    1848,
    /* END_BLOCK_S */
    1848,
    /* END_FUNCTION */
    1848,
    /* END_FUNCTION_S */
    1848,
    /* END_IF */
    1848,
    /* END_IF_S */
    1848,
    /* END_LOOP */
    1848,
    /* END_LOOP_S */
    1848,
    /* END_S */
    1848,
    /* END_TRY */
    1848,
    /* END_TRY_S */
    1848,
    /* EQZ_I32 */
    1848,
    /* EQZ_I32_S */
    1850,
    /* EQZ_I64 */
    1850,
    /* EQZ_I64_S */
    1852,
    /* EQ_F32 */
    1852,
    /* EQ_F32_S */
    1855,
    /* EQ_F32x4 */
    1855,
    /* EQ_F32x4_S */
    1858,
    /* EQ_F64 */
    1858,
    /* EQ_F64_S */
    1861,
    /* EQ_F64x2 */
    1861,
    /* EQ_F64x2_S */
    1864,
    /* EQ_I16x8 */
    1864,
    /* EQ_I16x8_S */
    1867,
    /* EQ_I32 */
    1867,
    /* EQ_I32_S */
    1870,
    /* EQ_I32x4 */
    1870,
    /* EQ_I32x4_S */
    1873,
    /* EQ_I64 */
    1873,
    /* EQ_I64_S */
    1876,
    /* EQ_I64x2 */
    1876,
    /* EQ_I64x2_S */
    1879,
    /* EQ_I8x16 */
    1879,
    /* EQ_I8x16_S */
    1882,
    /* EXTMUL_HIGH_S_I16x8 */
    1882,
    /* EXTMUL_HIGH_S_I16x8_S */
    1885,
    /* EXTMUL_HIGH_S_I32x4 */
    1885,
    /* EXTMUL_HIGH_S_I32x4_S */
    1888,
    /* EXTMUL_HIGH_S_I64x2 */
    1888,
    /* EXTMUL_HIGH_S_I64x2_S */
    1891,
    /* EXTMUL_HIGH_U_I16x8 */
    1891,
    /* EXTMUL_HIGH_U_I16x8_S */
    1894,
    /* EXTMUL_HIGH_U_I32x4 */
    1894,
    /* EXTMUL_HIGH_U_I32x4_S */
    1897,
    /* EXTMUL_HIGH_U_I64x2 */
    1897,
    /* EXTMUL_HIGH_U_I64x2_S */
    1900,
    /* EXTMUL_LOW_S_I16x8 */
    1900,
    /* EXTMUL_LOW_S_I16x8_S */
    1903,
    /* EXTMUL_LOW_S_I32x4 */
    1903,
    /* EXTMUL_LOW_S_I32x4_S */
    1906,
    /* EXTMUL_LOW_S_I64x2 */
    1906,
    /* EXTMUL_LOW_S_I64x2_S */
    1909,
    /* EXTMUL_LOW_U_I16x8 */
    1909,
    /* EXTMUL_LOW_U_I16x8_S */
    1912,
    /* EXTMUL_LOW_U_I32x4 */
    1912,
    /* EXTMUL_LOW_U_I32x4_S */
    1915,
    /* EXTMUL_LOW_U_I64x2 */
    1915,
    /* EXTMUL_LOW_U_I64x2_S */
    1918,
    /* EXTRACT_LANE_F32x4 */
    1918,
    /* EXTRACT_LANE_F32x4_S */
    1921,
    /* EXTRACT_LANE_F64x2 */
    1922,
    /* EXTRACT_LANE_F64x2_S */
    1925,
    /* EXTRACT_LANE_I16x8_s */
    1926,
    /* EXTRACT_LANE_I16x8_s_S */
    1929,
    /* EXTRACT_LANE_I16x8_u */
    1930,
    /* EXTRACT_LANE_I16x8_u_S */
    1933,
    /* EXTRACT_LANE_I32x4 */
    1934,
    /* EXTRACT_LANE_I32x4_S */
    1937,
    /* EXTRACT_LANE_I64x2 */
    1938,
    /* EXTRACT_LANE_I64x2_S */
    1941,
    /* EXTRACT_LANE_I8x16_s */
    1942,
    /* EXTRACT_LANE_I8x16_s_S */
    1945,
    /* EXTRACT_LANE_I8x16_u */
    1946,
    /* EXTRACT_LANE_I8x16_u_S */
    1949,
    /* F32_CONVERT_S_I32 */
    1950,
    /* F32_CONVERT_S_I32_S */
    1952,
    /* F32_CONVERT_S_I64 */
    1952,
    /* F32_CONVERT_S_I64_S */
    1954,
    /* F32_CONVERT_U_I32 */
    1954,
    /* F32_CONVERT_U_I32_S */
    1956,
    /* F32_CONVERT_U_I64 */
    1956,
    /* F32_CONVERT_U_I64_S */
    1958,
    /* F32_DEMOTE_F64 */
    1958,
    /* F32_DEMOTE_F64_S */
    1960,
    /* F32_REINTERPRET_I32 */
    1960,
    /* F32_REINTERPRET_I32_S */
    1962,
    /* F64_CONVERT_S_I32 */
    1962,
    /* F64_CONVERT_S_I32_S */
    1964,
    /* F64_CONVERT_S_I64 */
    1964,
    /* F64_CONVERT_S_I64_S */
    1966,
    /* F64_CONVERT_U_I32 */
    1966,
    /* F64_CONVERT_U_I32_S */
    1968,
    /* F64_CONVERT_U_I64 */
    1968,
    /* F64_CONVERT_U_I64_S */
    1970,
    /* F64_PROMOTE_F32 */
    1970,
    /* F64_PROMOTE_F32_S */
    1972,
    /* F64_REINTERPRET_I64 */
    1972,
    /* F64_REINTERPRET_I64_S */
    1974,
    /* FALLTHROUGH_RETURN */
    1974,
    /* FALLTHROUGH_RETURN_S */
    1974,
    /* FLOOR_F32 */
    1974,
    /* FLOOR_F32_S */
    1976,
    /* FLOOR_F32x4 */
    1976,
    /* FLOOR_F32x4_S */
    1978,
    /* FLOOR_F64 */
    1978,
    /* FLOOR_F64_S */
    1980,
    /* FLOOR_F64x2 */
    1980,
    /* FLOOR_F64x2_S */
    1982,
    /* FP_TO_SINT_I32_F32 */
    1982,
    /* FP_TO_SINT_I32_F32_S */
    1984,
    /* FP_TO_SINT_I32_F64 */
    1984,
    /* FP_TO_SINT_I32_F64_S */
    1986,
    /* FP_TO_SINT_I64_F32 */
    1986,
    /* FP_TO_SINT_I64_F32_S */
    1988,
    /* FP_TO_SINT_I64_F64 */
    1988,
    /* FP_TO_SINT_I64_F64_S */
    1990,
    /* FP_TO_UINT_I32_F32 */
    1990,
    /* FP_TO_UINT_I32_F32_S */
    1992,
    /* FP_TO_UINT_I32_F64 */
    1992,
    /* FP_TO_UINT_I32_F64_S */
    1994,
    /* FP_TO_UINT_I64_F32 */
    1994,
    /* FP_TO_UINT_I64_F32_S */
    1996,
    /* FP_TO_UINT_I64_F64 */
    1996,
    /* FP_TO_UINT_I64_F64_S */
    1998,
    /* GE_F32 */
    1998,
    /* GE_F32_S */
    2001,
    /* GE_F32x4 */
    2001,
    /* GE_F32x4_S */
    2004,
    /* GE_F64 */
    2004,
    /* GE_F64_S */
    2007,
    /* GE_F64x2 */
    2007,
    /* GE_F64x2_S */
    2010,
    /* GE_S_I16x8 */
    2010,
    /* GE_S_I16x8_S */
    2013,
    /* GE_S_I32 */
    2013,
    /* GE_S_I32_S */
    2016,
    /* GE_S_I32x4 */
    2016,
    /* GE_S_I32x4_S */
    2019,
    /* GE_S_I64 */
    2019,
    /* GE_S_I64_S */
    2022,
    /* GE_S_I64x2 */
    2022,
    /* GE_S_I64x2_S */
    2025,
    /* GE_S_I8x16 */
    2025,
    /* GE_S_I8x16_S */
    2028,
    /* GE_U_I16x8 */
    2028,
    /* GE_U_I16x8_S */
    2031,
    /* GE_U_I32 */
    2031,
    /* GE_U_I32_S */
    2034,
    /* GE_U_I32x4 */
    2034,
    /* GE_U_I32x4_S */
    2037,
    /* GE_U_I64 */
    2037,
    /* GE_U_I64_S */
    2040,
    /* GE_U_I8x16 */
    2040,
    /* GE_U_I8x16_S */
    2043,
    /* GLOBAL_GET_EXTERNREF */
    2043,
    /* GLOBAL_GET_EXTERNREF_S */
    2045,
    /* GLOBAL_GET_F32 */
    2046,
    /* GLOBAL_GET_F32_S */
    2048,
    /* GLOBAL_GET_F64 */
    2049,
    /* GLOBAL_GET_F64_S */
    2051,
    /* GLOBAL_GET_FUNCREF */
    2052,
    /* GLOBAL_GET_FUNCREF_S */
    2054,
    /* GLOBAL_GET_I32 */
    2055,
    /* GLOBAL_GET_I32_S */
    2057,
    /* GLOBAL_GET_I64 */
    2058,
    /* GLOBAL_GET_I64_S */
    2060,
    /* GLOBAL_GET_V128 */
    2061,
    /* GLOBAL_GET_V128_S */
    2063,
    /* GLOBAL_SET_EXTERNREF */
    2064,
    /* GLOBAL_SET_EXTERNREF_S */
    2066,
    /* GLOBAL_SET_F32 */
    2067,
    /* GLOBAL_SET_F32_S */
    2069,
    /* GLOBAL_SET_F64 */
    2070,
    /* GLOBAL_SET_F64_S */
    2072,
    /* GLOBAL_SET_FUNCREF */
    2073,
    /* GLOBAL_SET_FUNCREF_S */
    2075,
    /* GLOBAL_SET_I32 */
    2076,
    /* GLOBAL_SET_I32_S */
    2078,
    /* GLOBAL_SET_I64 */
    2079,
    /* GLOBAL_SET_I64_S */
    2081,
    /* GLOBAL_SET_V128 */
    2082,
    /* GLOBAL_SET_V128_S */
    2084,
    /* GT_F32 */
    2085,
    /* GT_F32_S */
    2088,
    /* GT_F32x4 */
    2088,
    /* GT_F32x4_S */
    2091,
    /* GT_F64 */
    2091,
    /* GT_F64_S */
    2094,
    /* GT_F64x2 */
    2094,
    /* GT_F64x2_S */
    2097,
    /* GT_S_I16x8 */
    2097,
    /* GT_S_I16x8_S */
    2100,
    /* GT_S_I32 */
    2100,
    /* GT_S_I32_S */
    2103,
    /* GT_S_I32x4 */
    2103,
    /* GT_S_I32x4_S */
    2106,
    /* GT_S_I64 */
    2106,
    /* GT_S_I64_S */
    2109,
    /* GT_S_I64x2 */
    2109,
    /* GT_S_I64x2_S */
    2112,
    /* GT_S_I8x16 */
    2112,
    /* GT_S_I8x16_S */
    2115,
    /* GT_U_I16x8 */
    2115,
    /* GT_U_I16x8_S */
    2118,
    /* GT_U_I32 */
    2118,
    /* GT_U_I32_S */
    2121,
    /* GT_U_I32x4 */
    2121,
    /* GT_U_I32x4_S */
    2124,
    /* GT_U_I64 */
    2124,
    /* GT_U_I64_S */
    2127,
    /* GT_U_I8x16 */
    2127,
    /* GT_U_I8x16_S */
    2130,
    /* I32_EXTEND16_S_I32 */
    2130,
    /* I32_EXTEND16_S_I32_S */
    2132,
    /* I32_EXTEND8_S_I32 */
    2132,
    /* I32_EXTEND8_S_I32_S */
    2134,
    /* I32_REINTERPRET_F32 */
    2134,
    /* I32_REINTERPRET_F32_S */
    2136,
    /* I32_TRUNC_S_F32 */
    2136,
    /* I32_TRUNC_S_F32_S */
    2138,
    /* I32_TRUNC_S_F64 */
    2138,
    /* I32_TRUNC_S_F64_S */
    2140,
    /* I32_TRUNC_S_SAT_F32 */
    2140,
    /* I32_TRUNC_S_SAT_F32_S */
    2142,
    /* I32_TRUNC_S_SAT_F64 */
    2142,
    /* I32_TRUNC_S_SAT_F64_S */
    2144,
    /* I32_TRUNC_U_F32 */
    2144,
    /* I32_TRUNC_U_F32_S */
    2146,
    /* I32_TRUNC_U_F64 */
    2146,
    /* I32_TRUNC_U_F64_S */
    2148,
    /* I32_TRUNC_U_SAT_F32 */
    2148,
    /* I32_TRUNC_U_SAT_F32_S */
    2150,
    /* I32_TRUNC_U_SAT_F64 */
    2150,
    /* I32_TRUNC_U_SAT_F64_S */
    2152,
    /* I32_WRAP_I64 */
    2152,
    /* I32_WRAP_I64_S */
    2154,
    /* I64_EXTEND16_S_I64 */
    2154,
    /* I64_EXTEND16_S_I64_S */
    2156,
    /* I64_EXTEND32_S_I64 */
    2156,
    /* I64_EXTEND32_S_I64_S */
    2158,
    /* I64_EXTEND8_S_I64 */
    2158,
    /* I64_EXTEND8_S_I64_S */
    2160,
    /* I64_EXTEND_S_I32 */
    2160,
    /* I64_EXTEND_S_I32_S */
    2162,
    /* I64_EXTEND_U_I32 */
    2162,
    /* I64_EXTEND_U_I32_S */
    2164,
    /* I64_REINTERPRET_F64 */
    2164,
    /* I64_REINTERPRET_F64_S */
    2166,
    /* I64_TRUNC_S_F32 */
    2166,
    /* I64_TRUNC_S_F32_S */
    2168,
    /* I64_TRUNC_S_F64 */
    2168,
    /* I64_TRUNC_S_F64_S */
    2170,
    /* I64_TRUNC_S_SAT_F32 */
    2170,
    /* I64_TRUNC_S_SAT_F32_S */
    2172,
    /* I64_TRUNC_S_SAT_F64 */
    2172,
    /* I64_TRUNC_S_SAT_F64_S */
    2174,
    /* I64_TRUNC_U_F32 */
    2174,
    /* I64_TRUNC_U_F32_S */
    2176,
    /* I64_TRUNC_U_F64 */
    2176,
    /* I64_TRUNC_U_F64_S */
    2178,
    /* I64_TRUNC_U_SAT_F32 */
    2178,
    /* I64_TRUNC_U_SAT_F32_S */
    2180,
    /* I64_TRUNC_U_SAT_F64 */
    2180,
    /* I64_TRUNC_U_SAT_F64_S */
    2182,
    /* IF */
    2182,
    /* IF_S */
    2184,
    /* LANESELECT_I16x8 */
    2185,
    /* LANESELECT_I16x8_S */
    2189,
    /* LANESELECT_I32x4 */
    2189,
    /* LANESELECT_I32x4_S */
    2193,
    /* LANESELECT_I64x2 */
    2193,
    /* LANESELECT_I64x2_S */
    2197,
    /* LANESELECT_I8x16 */
    2197,
    /* LANESELECT_I8x16_S */
    2201,
    /* LE_F32 */
    2201,
    /* LE_F32_S */
    2204,
    /* LE_F32x4 */
    2204,
    /* LE_F32x4_S */
    2207,
    /* LE_F64 */
    2207,
    /* LE_F64_S */
    2210,
    /* LE_F64x2 */
    2210,
    /* LE_F64x2_S */
    2213,
    /* LE_S_I16x8 */
    2213,
    /* LE_S_I16x8_S */
    2216,
    /* LE_S_I32 */
    2216,
    /* LE_S_I32_S */
    2219,
    /* LE_S_I32x4 */
    2219,
    /* LE_S_I32x4_S */
    2222,
    /* LE_S_I64 */
    2222,
    /* LE_S_I64_S */
    2225,
    /* LE_S_I64x2 */
    2225,
    /* LE_S_I64x2_S */
    2228,
    /* LE_S_I8x16 */
    2228,
    /* LE_S_I8x16_S */
    2231,
    /* LE_U_I16x8 */
    2231,
    /* LE_U_I16x8_S */
    2234,
    /* LE_U_I32 */
    2234,
    /* LE_U_I32_S */
    2237,
    /* LE_U_I32x4 */
    2237,
    /* LE_U_I32x4_S */
    2240,
    /* LE_U_I64 */
    2240,
    /* LE_U_I64_S */
    2243,
    /* LE_U_I8x16 */
    2243,
    /* LE_U_I8x16_S */
    2246,
    /* LOAD16_SPLAT_A32 */
    2246,
    /* LOAD16_SPLAT_A32_S */
    2250,
    /* LOAD16_SPLAT_A64 */
    2252,
    /* LOAD16_SPLAT_A64_S */
    2256,
    /* LOAD16_S_I32_A32 */
    2258,
    /* LOAD16_S_I32_A32_S */
    2262,
    /* LOAD16_S_I32_A64 */
    2264,
    /* LOAD16_S_I32_A64_S */
    2268,
    /* LOAD16_S_I64_A32 */
    2270,
    /* LOAD16_S_I64_A32_S */
    2274,
    /* LOAD16_S_I64_A64 */
    2276,
    /* LOAD16_S_I64_A64_S */
    2280,
    /* LOAD16_U_I32_A32 */
    2282,
    /* LOAD16_U_I32_A32_S */
    2286,
    /* LOAD16_U_I32_A64 */
    2288,
    /* LOAD16_U_I32_A64_S */
    2292,
    /* LOAD16_U_I64_A32 */
    2294,
    /* LOAD16_U_I64_A32_S */
    2298,
    /* LOAD16_U_I64_A64 */
    2300,
    /* LOAD16_U_I64_A64_S */
    2304,
    /* LOAD32_SPLAT_A32 */
    2306,
    /* LOAD32_SPLAT_A32_S */
    2310,
    /* LOAD32_SPLAT_A64 */
    2312,
    /* LOAD32_SPLAT_A64_S */
    2316,
    /* LOAD32_S_I64_A32 */
    2318,
    /* LOAD32_S_I64_A32_S */
    2322,
    /* LOAD32_S_I64_A64 */
    2324,
    /* LOAD32_S_I64_A64_S */
    2328,
    /* LOAD32_U_I64_A32 */
    2330,
    /* LOAD32_U_I64_A32_S */
    2334,
    /* LOAD32_U_I64_A64 */
    2336,
    /* LOAD32_U_I64_A64_S */
    2340,
    /* LOAD64_SPLAT_A32 */
    2342,
    /* LOAD64_SPLAT_A32_S */
    2346,
    /* LOAD64_SPLAT_A64 */
    2348,
    /* LOAD64_SPLAT_A64_S */
    2352,
    /* LOAD8_SPLAT_A32 */
    2354,
    /* LOAD8_SPLAT_A32_S */
    2358,
    /* LOAD8_SPLAT_A64 */
    2360,
    /* LOAD8_SPLAT_A64_S */
    2364,
    /* LOAD8_S_I32_A32 */
    2366,
    /* LOAD8_S_I32_A32_S */
    2370,
    /* LOAD8_S_I32_A64 */
    2372,
    /* LOAD8_S_I32_A64_S */
    2376,
    /* LOAD8_S_I64_A32 */
    2378,
    /* LOAD8_S_I64_A32_S */
    2382,
    /* LOAD8_S_I64_A64 */
    2384,
    /* LOAD8_S_I64_A64_S */
    2388,
    /* LOAD8_U_I32_A32 */
    2390,
    /* LOAD8_U_I32_A32_S */
    2394,
    /* LOAD8_U_I32_A64 */
    2396,
    /* LOAD8_U_I32_A64_S */
    2400,
    /* LOAD8_U_I64_A32 */
    2402,
    /* LOAD8_U_I64_A32_S */
    2406,
    /* LOAD8_U_I64_A64 */
    2408,
    /* LOAD8_U_I64_A64_S */
    2412,
    /* LOAD_EXTEND_S_I16x8_A32 */
    2414,
    /* LOAD_EXTEND_S_I16x8_A32_S */
    2418,
    /* LOAD_EXTEND_S_I16x8_A64 */
    2420,
    /* LOAD_EXTEND_S_I16x8_A64_S */
    2424,
    /* LOAD_EXTEND_S_I32x4_A32 */
    2426,
    /* LOAD_EXTEND_S_I32x4_A32_S */
    2430,
    /* LOAD_EXTEND_S_I32x4_A64 */
    2432,
    /* LOAD_EXTEND_S_I32x4_A64_S */
    2436,
    /* LOAD_EXTEND_S_I64x2_A32 */
    2438,
    /* LOAD_EXTEND_S_I64x2_A32_S */
    2442,
    /* LOAD_EXTEND_S_I64x2_A64 */
    2444,
    /* LOAD_EXTEND_S_I64x2_A64_S */
    2448,
    /* LOAD_EXTEND_U_I16x8_A32 */
    2450,
    /* LOAD_EXTEND_U_I16x8_A32_S */
    2454,
    /* LOAD_EXTEND_U_I16x8_A64 */
    2456,
    /* LOAD_EXTEND_U_I16x8_A64_S */
    2460,
    /* LOAD_EXTEND_U_I32x4_A32 */
    2462,
    /* LOAD_EXTEND_U_I32x4_A32_S */
    2466,
    /* LOAD_EXTEND_U_I32x4_A64 */
    2468,
    /* LOAD_EXTEND_U_I32x4_A64_S */
    2472,
    /* LOAD_EXTEND_U_I64x2_A32 */
    2474,
    /* LOAD_EXTEND_U_I64x2_A32_S */
    2478,
    /* LOAD_EXTEND_U_I64x2_A64 */
    2480,
    /* LOAD_EXTEND_U_I64x2_A64_S */
    2484,
    /* LOAD_F32_A32 */
    2486,
    /* LOAD_F32_A32_S */
    2490,
    /* LOAD_F32_A64 */
    2492,
    /* LOAD_F32_A64_S */
    2496,
    /* LOAD_F64_A32 */
    2498,
    /* LOAD_F64_A32_S */
    2502,
    /* LOAD_F64_A64 */
    2504,
    /* LOAD_F64_A64_S */
    2508,
    /* LOAD_I32_A32 */
    2510,
    /* LOAD_I32_A32_S */
    2514,
    /* LOAD_I32_A64 */
    2516,
    /* LOAD_I32_A64_S */
    2520,
    /* LOAD_I64_A32 */
    2522,
    /* LOAD_I64_A32_S */
    2526,
    /* LOAD_I64_A64 */
    2528,
    /* LOAD_I64_A64_S */
    2532,
    /* LOAD_LANE_I16x8_A32 */
    2534,
    /* LOAD_LANE_I16x8_A32_S */
    2540,
    /* LOAD_LANE_I16x8_A64 */
    2543,
    /* LOAD_LANE_I16x8_A64_S */
    2549,
    /* LOAD_LANE_I32x4_A32 */
    2552,
    /* LOAD_LANE_I32x4_A32_S */
    2558,
    /* LOAD_LANE_I32x4_A64 */
    2561,
    /* LOAD_LANE_I32x4_A64_S */
    2567,
    /* LOAD_LANE_I64x2_A32 */
    2570,
    /* LOAD_LANE_I64x2_A32_S */
    2576,
    /* LOAD_LANE_I64x2_A64 */
    2579,
    /* LOAD_LANE_I64x2_A64_S */
    2585,
    /* LOAD_LANE_I8x16_A32 */
    2588,
    /* LOAD_LANE_I8x16_A32_S */
    2594,
    /* LOAD_LANE_I8x16_A64 */
    2597,
    /* LOAD_LANE_I8x16_A64_S */
    2603,
    /* LOAD_V128_A32 */
    2606,
    /* LOAD_V128_A32_S */
    2610,
    /* LOAD_V128_A64 */
    2612,
    /* LOAD_V128_A64_S */
    2616,
    /* LOAD_ZERO_I32x4_A32 */
    2618,
    /* LOAD_ZERO_I32x4_A32_S */
    2622,
    /* LOAD_ZERO_I32x4_A64 */
    2624,
    /* LOAD_ZERO_I32x4_A64_S */
    2628,
    /* LOAD_ZERO_I64x2_A32 */
    2630,
    /* LOAD_ZERO_I64x2_A32_S */
    2634,
    /* LOAD_ZERO_I64x2_A64 */
    2636,
    /* LOAD_ZERO_I64x2_A64_S */
    2640,
    /* LOCAL_GET_EXTERNREF */
    2642,
    /* LOCAL_GET_EXTERNREF_S */
    2644,
    /* LOCAL_GET_F32 */
    2645,
    /* LOCAL_GET_F32_S */
    2647,
    /* LOCAL_GET_F64 */
    2648,
    /* LOCAL_GET_F64_S */
    2650,
    /* LOCAL_GET_FUNCREF */
    2651,
    /* LOCAL_GET_FUNCREF_S */
    2653,
    /* LOCAL_GET_I32 */
    2654,
    /* LOCAL_GET_I32_S */
    2656,
    /* LOCAL_GET_I64 */
    2657,
    /* LOCAL_GET_I64_S */
    2659,
    /* LOCAL_GET_V128 */
    2660,
    /* LOCAL_GET_V128_S */
    2662,
    /* LOCAL_SET_EXTERNREF */
    2663,
    /* LOCAL_SET_EXTERNREF_S */
    2665,
    /* LOCAL_SET_F32 */
    2666,
    /* LOCAL_SET_F32_S */
    2668,
    /* LOCAL_SET_F64 */
    2669,
    /* LOCAL_SET_F64_S */
    2671,
    /* LOCAL_SET_FUNCREF */
    2672,
    /* LOCAL_SET_FUNCREF_S */
    2674,
    /* LOCAL_SET_I32 */
    2675,
    /* LOCAL_SET_I32_S */
    2677,
    /* LOCAL_SET_I64 */
    2678,
    /* LOCAL_SET_I64_S */
    2680,
    /* LOCAL_SET_V128 */
    2681,
    /* LOCAL_SET_V128_S */
    2683,
    /* LOCAL_TEE_EXTERNREF */
    2684,
    /* LOCAL_TEE_EXTERNREF_S */
    2687,
    /* LOCAL_TEE_F32 */
    2688,
    /* LOCAL_TEE_F32_S */
    2691,
    /* LOCAL_TEE_F64 */
    2692,
    /* LOCAL_TEE_F64_S */
    2695,
    /* LOCAL_TEE_FUNCREF */
    2696,
    /* LOCAL_TEE_FUNCREF_S */
    2699,
    /* LOCAL_TEE_I32 */
    2700,
    /* LOCAL_TEE_I32_S */
    2703,
    /* LOCAL_TEE_I64 */
    2704,
    /* LOCAL_TEE_I64_S */
    2707,
    /* LOCAL_TEE_V128 */
    2708,
    /* LOCAL_TEE_V128_S */
    2711,
    /* LOOP */
    2712,
    /* LOOP_S */
    2713,
    /* LT_F32 */
    2714,
    /* LT_F32_S */
    2717,
    /* LT_F32x4 */
    2717,
    /* LT_F32x4_S */
    2720,
    /* LT_F64 */
    2720,
    /* LT_F64_S */
    2723,
    /* LT_F64x2 */
    2723,
    /* LT_F64x2_S */
    2726,
    /* LT_S_I16x8 */
    2726,
    /* LT_S_I16x8_S */
    2729,
    /* LT_S_I32 */
    2729,
    /* LT_S_I32_S */
    2732,
    /* LT_S_I32x4 */
    2732,
    /* LT_S_I32x4_S */
    2735,
    /* LT_S_I64 */
    2735,
    /* LT_S_I64_S */
    2738,
    /* LT_S_I64x2 */
    2738,
    /* LT_S_I64x2_S */
    2741,
    /* LT_S_I8x16 */
    2741,
    /* LT_S_I8x16_S */
    2744,
    /* LT_U_I16x8 */
    2744,
    /* LT_U_I16x8_S */
    2747,
    /* LT_U_I32 */
    2747,
    /* LT_U_I32_S */
    2750,
    /* LT_U_I32x4 */
    2750,
    /* LT_U_I32x4_S */
    2753,
    /* LT_U_I64 */
    2753,
    /* LT_U_I64_S */
    2756,
    /* LT_U_I8x16 */
    2756,
    /* LT_U_I8x16_S */
    2759,
    /* MADD_F32x4 */
    2759,
    /* MADD_F32x4_S */
    2763,
    /* MADD_F64x2 */
    2763,
    /* MADD_F64x2_S */
    2767,
    /* MAX_F32 */
    2767,
    /* MAX_F32_S */
    2770,
    /* MAX_F32x4 */
    2770,
    /* MAX_F32x4_S */
    2773,
    /* MAX_F64 */
    2773,
    /* MAX_F64_S */
    2776,
    /* MAX_F64x2 */
    2776,
    /* MAX_F64x2_S */
    2779,
    /* MAX_S_I16x8 */
    2779,
    /* MAX_S_I16x8_S */
    2782,
    /* MAX_S_I32x4 */
    2782,
    /* MAX_S_I32x4_S */
    2785,
    /* MAX_S_I8x16 */
    2785,
    /* MAX_S_I8x16_S */
    2788,
    /* MAX_U_I16x8 */
    2788,
    /* MAX_U_I16x8_S */
    2791,
    /* MAX_U_I32x4 */
    2791,
    /* MAX_U_I32x4_S */
    2794,
    /* MAX_U_I8x16 */
    2794,
    /* MAX_U_I8x16_S */
    2797,
    /* MEMORY_ATOMIC_NOTIFY_A32 */
    2797,
    /* MEMORY_ATOMIC_NOTIFY_A32_S */
    2802,
    /* MEMORY_ATOMIC_NOTIFY_A64 */
    2804,
    /* MEMORY_ATOMIC_NOTIFY_A64_S */
    2809,
    /* MEMORY_ATOMIC_WAIT32_A32 */
    2811,
    /* MEMORY_ATOMIC_WAIT32_A32_S */
    2817,
    /* MEMORY_ATOMIC_WAIT32_A64 */
    2819,
    /* MEMORY_ATOMIC_WAIT32_A64_S */
    2825,
    /* MEMORY_ATOMIC_WAIT64_A32 */
    2827,
    /* MEMORY_ATOMIC_WAIT64_A32_S */
    2833,
    /* MEMORY_ATOMIC_WAIT64_A64 */
    2835,
    /* MEMORY_ATOMIC_WAIT64_A64_S */
    2841,
    /* MIN_F32 */
    2843,
    /* MIN_F32_S */
    2846,
    /* MIN_F32x4 */
    2846,
    /* MIN_F32x4_S */
    2849,
    /* MIN_F64 */
    2849,
    /* MIN_F64_S */
    2852,
    /* MIN_F64x2 */
    2852,
    /* MIN_F64x2_S */
    2855,
    /* MIN_S_I16x8 */
    2855,
    /* MIN_S_I16x8_S */
    2858,
    /* MIN_S_I32x4 */
    2858,
    /* MIN_S_I32x4_S */
    2861,
    /* MIN_S_I8x16 */
    2861,
    /* MIN_S_I8x16_S */
    2864,
    /* MIN_U_I16x8 */
    2864,
    /* MIN_U_I16x8_S */
    2867,
    /* MIN_U_I32x4 */
    2867,
    /* MIN_U_I32x4_S */
    2870,
    /* MIN_U_I8x16 */
    2870,
    /* MIN_U_I8x16_S */
    2873,
    /* MUL_F32 */
    2873,
    /* MUL_F32_S */
    2876,
    /* MUL_F32x4 */
    2876,
    /* MUL_F32x4_S */
    2879,
    /* MUL_F64 */
    2879,
    /* MUL_F64_S */
    2882,
    /* MUL_F64x2 */
    2882,
    /* MUL_F64x2_S */
    2885,
    /* MUL_I16x8 */
    2885,
    /* MUL_I16x8_S */
    2888,
    /* MUL_I32 */
    2888,
    /* MUL_I32_S */
    2891,
    /* MUL_I32x4 */
    2891,
    /* MUL_I32x4_S */
    2894,
    /* MUL_I64 */
    2894,
    /* MUL_I64_S */
    2897,
    /* MUL_I64x2 */
    2897,
    /* MUL_I64x2_S */
    2900,
    /* NARROW_S_I16x8 */
    2900,
    /* NARROW_S_I16x8_S */
    2903,
    /* NARROW_S_I8x16 */
    2903,
    /* NARROW_S_I8x16_S */
    2906,
    /* NARROW_U_I16x8 */
    2906,
    /* NARROW_U_I16x8_S */
    2909,
    /* NARROW_U_I8x16 */
    2909,
    /* NARROW_U_I8x16_S */
    2912,
    /* NEAREST_F32 */
    2912,
    /* NEAREST_F32_S */
    2914,
    /* NEAREST_F32x4 */
    2914,
    /* NEAREST_F32x4_S */
    2916,
    /* NEAREST_F64 */
    2916,
    /* NEAREST_F64_S */
    2918,
    /* NEAREST_F64x2 */
    2918,
    /* NEAREST_F64x2_S */
    2920,
    /* NEG_F32 */
    2920,
    /* NEG_F32_S */
    2922,
    /* NEG_F32x4 */
    2922,
    /* NEG_F32x4_S */
    2924,
    /* NEG_F64 */
    2924,
    /* NEG_F64_S */
    2926,
    /* NEG_F64x2 */
    2926,
    /* NEG_F64x2_S */
    2928,
    /* NEG_I16x8 */
    2928,
    /* NEG_I16x8_S */
    2930,
    /* NEG_I32x4 */
    2930,
    /* NEG_I32x4_S */
    2932,
    /* NEG_I64x2 */
    2932,
    /* NEG_I64x2_S */
    2934,
    /* NEG_I8x16 */
    2934,
    /* NEG_I8x16_S */
    2936,
    /* NE_F32 */
    2936,
    /* NE_F32_S */
    2939,
    /* NE_F32x4 */
    2939,
    /* NE_F32x4_S */
    2942,
    /* NE_F64 */
    2942,
    /* NE_F64_S */
    2945,
    /* NE_F64x2 */
    2945,
    /* NE_F64x2_S */
    2948,
    /* NE_I16x8 */
    2948,
    /* NE_I16x8_S */
    2951,
    /* NE_I32 */
    2951,
    /* NE_I32_S */
    2954,
    /* NE_I32x4 */
    2954,
    /* NE_I32x4_S */
    2957,
    /* NE_I64 */
    2957,
    /* NE_I64_S */
    2960,
    /* NE_I64x2 */
    2960,
    /* NE_I64x2_S */
    2963,
    /* NE_I8x16 */
    2963,
    /* NE_I8x16_S */
    2966,
    /* NMADD_F32x4 */
    2966,
    /* NMADD_F32x4_S */
    2970,
    /* NMADD_F64x2 */
    2970,
    /* NMADD_F64x2_S */
    2974,
    /* NOP */
    2974,
    /* NOP_S */
    2974,
    /* NOT */
    2974,
    /* NOT_S */
    2976,
    /* OR */
    2976,
    /* OR_I32 */
    2979,
    /* OR_I32_S */
    2982,
    /* OR_I64 */
    2982,
    /* OR_I64_S */
    2985,
    /* OR_S */
    2985,
    /* PMAX_F32x4 */
    2985,
    /* PMAX_F32x4_S */
    2988,
    /* PMAX_F64x2 */
    2988,
    /* PMAX_F64x2_S */
    2991,
    /* PMIN_F32x4 */
    2991,
    /* PMIN_F32x4_S */
    2994,
    /* PMIN_F64x2 */
    2994,
    /* PMIN_F64x2_S */
    2997,
    /* POPCNT_I32 */
    2997,
    /* POPCNT_I32_S */
    2999,
    /* POPCNT_I64 */
    2999,
    /* POPCNT_I64_S */
    3001,
    /* POPCNT_I8x16 */
    3001,
    /* POPCNT_I8x16_S */
    3003,
    /* Q15MULR_SAT_S_I16x8 */
    3003,
    /* Q15MULR_SAT_S_I16x8_S */
    3006,
    /* REF_IS_NULL_EXTERNREF */
    3006,
    /* REF_IS_NULL_EXTERNREF_S */
    3008,
    /* REF_IS_NULL_FUNCREF */
    3008,
    /* REF_IS_NULL_FUNCREF_S */
    3010,
    /* REF_NULL_EXTERNREF */
    3010,
    /* REF_NULL_EXTERNREF_S */
    3011,
    /* REF_NULL_FUNCREF */
    3011,
    /* REF_NULL_FUNCREF_S */
    3012,
    /* RELAXED_DOT */
    3012,
    /* RELAXED_DOT_ADD */
    3015,
    /* RELAXED_DOT_ADD_S */
    3019,
    /* RELAXED_DOT_BFLOAT */
    3019,
    /* RELAXED_DOT_BFLOAT_S */
    3023,
    /* RELAXED_DOT_S */
    3023,
    /* RELAXED_Q15MULR_S_I16x8 */
    3023,
    /* RELAXED_Q15MULR_S_I16x8_S */
    3026,
    /* RELAXED_SWIZZLE */
    3026,
    /* RELAXED_SWIZZLE_S */
    3029,
    /* REM_S_I32 */
    3029,
    /* REM_S_I32_S */
    3032,
    /* REM_S_I64 */
    3032,
    /* REM_S_I64_S */
    3035,
    /* REM_U_I32 */
    3035,
    /* REM_U_I32_S */
    3038,
    /* REM_U_I64 */
    3038,
    /* REM_U_I64_S */
    3041,
    /* REPLACE_LANE_F32x4 */
    3041,
    /* REPLACE_LANE_F32x4_S */
    3045,
    /* REPLACE_LANE_F64x2 */
    3046,
    /* REPLACE_LANE_F64x2_S */
    3050,
    /* REPLACE_LANE_I16x8 */
    3051,
    /* REPLACE_LANE_I16x8_S */
    3055,
    /* REPLACE_LANE_I32x4 */
    3056,
    /* REPLACE_LANE_I32x4_S */
    3060,
    /* REPLACE_LANE_I64x2 */
    3061,
    /* REPLACE_LANE_I64x2_S */
    3065,
    /* REPLACE_LANE_I8x16 */
    3066,
    /* REPLACE_LANE_I8x16_S */
    3070,
    /* RETHROW */
    3071,
    /* RETHROW_S */
    3072,
    /* RETURN */
    3073,
    /* RETURN_S */
    3073,
    /* RET_CALL */
    3073,
    /* RET_CALL_INDIRECT */
    3074,
    /* RET_CALL_INDIRECT_S */
    3076,
    /* RET_CALL_S */
    3078,
    /* ROTL_I32 */
    3079,
    /* ROTL_I32_S */
    3082,
    /* ROTL_I64 */
    3082,
    /* ROTL_I64_S */
    3085,
    /* ROTR_I32 */
    3085,
    /* ROTR_I32_S */
    3088,
    /* ROTR_I64 */
    3088,
    /* ROTR_I64_S */
    3091,
    /* SELECT_EXTERNREF */
    3091,
    /* SELECT_EXTERNREF_S */
    3095,
    /* SELECT_F32 */
    3095,
    /* SELECT_F32_S */
    3099,
    /* SELECT_F64 */
    3099,
    /* SELECT_F64_S */
    3103,
    /* SELECT_FUNCREF */
    3103,
    /* SELECT_FUNCREF_S */
    3107,
    /* SELECT_I32 */
    3107,
    /* SELECT_I32_S */
    3111,
    /* SELECT_I64 */
    3111,
    /* SELECT_I64_S */
    3115,
    /* SELECT_V128 */
    3115,
    /* SELECT_V128_S */
    3119,
    /* SHL_I16x8 */
    3119,
    /* SHL_I16x8_S */
    3122,
    /* SHL_I32 */
    3122,
    /* SHL_I32_S */
    3125,
    /* SHL_I32x4 */
    3125,
    /* SHL_I32x4_S */
    3128,
    /* SHL_I64 */
    3128,
    /* SHL_I64_S */
    3131,
    /* SHL_I64x2 */
    3131,
    /* SHL_I64x2_S */
    3134,
    /* SHL_I8x16 */
    3134,
    /* SHL_I8x16_S */
    3137,
    /* SHR_S_I16x8 */
    3137,
    /* SHR_S_I16x8_S */
    3140,
    /* SHR_S_I32 */
    3140,
    /* SHR_S_I32_S */
    3143,
    /* SHR_S_I32x4 */
    3143,
    /* SHR_S_I32x4_S */
    3146,
    /* SHR_S_I64 */
    3146,
    /* SHR_S_I64_S */
    3149,
    /* SHR_S_I64x2 */
    3149,
    /* SHR_S_I64x2_S */
    3152,
    /* SHR_S_I8x16 */
    3152,
    /* SHR_S_I8x16_S */
    3155,
    /* SHR_U_I16x8 */
    3155,
    /* SHR_U_I16x8_S */
    3158,
    /* SHR_U_I32 */
    3158,
    /* SHR_U_I32_S */
    3161,
    /* SHR_U_I32x4 */
    3161,
    /* SHR_U_I32x4_S */
    3164,
    /* SHR_U_I64 */
    3164,
    /* SHR_U_I64_S */
    3167,
    /* SHR_U_I64x2 */
    3167,
    /* SHR_U_I64x2_S */
    3170,
    /* SHR_U_I8x16 */
    3170,
    /* SHR_U_I8x16_S */
    3173,
    /* SHUFFLE */
    3173,
    /* SHUFFLE_S */
    3192,
    /* SIMD_RELAXED_FMAX_F32x4 */
    3208,
    /* SIMD_RELAXED_FMAX_F32x4_S */
    3211,
    /* SIMD_RELAXED_FMAX_F64x2 */
    3211,
    /* SIMD_RELAXED_FMAX_F64x2_S */
    3214,
    /* SIMD_RELAXED_FMIN_F32x4 */
    3214,
    /* SIMD_RELAXED_FMIN_F32x4_S */
    3217,
    /* SIMD_RELAXED_FMIN_F64x2 */
    3217,
    /* SIMD_RELAXED_FMIN_F64x2_S */
    3220,
    /* SPLAT_F32x4 */
    3220,
    /* SPLAT_F32x4_S */
    3222,
    /* SPLAT_F64x2 */
    3222,
    /* SPLAT_F64x2_S */
    3224,
    /* SPLAT_I16x8 */
    3224,
    /* SPLAT_I16x8_S */
    3226,
    /* SPLAT_I32x4 */
    3226,
    /* SPLAT_I32x4_S */
    3228,
    /* SPLAT_I64x2 */
    3228,
    /* SPLAT_I64x2_S */
    3230,
    /* SPLAT_I8x16 */
    3230,
    /* SPLAT_I8x16_S */
    3232,
    /* SQRT_F32 */
    3232,
    /* SQRT_F32_S */
    3234,
    /* SQRT_F32x4 */
    3234,
    /* SQRT_F32x4_S */
    3236,
    /* SQRT_F64 */
    3236,
    /* SQRT_F64_S */
    3238,
    /* SQRT_F64x2 */
    3238,
    /* SQRT_F64x2_S */
    3240,
    /* STORE16_I32_A32 */
    3240,
    /* STORE16_I32_A32_S */
    3244,
    /* STORE16_I32_A64 */
    3246,
    /* STORE16_I32_A64_S */
    3250,
    /* STORE16_I64_A32 */
    3252,
    /* STORE16_I64_A32_S */
    3256,
    /* STORE16_I64_A64 */
    3258,
    /* STORE16_I64_A64_S */
    3262,
    /* STORE32_I64_A32 */
    3264,
    /* STORE32_I64_A32_S */
    3268,
    /* STORE32_I64_A64 */
    3270,
    /* STORE32_I64_A64_S */
    3274,
    /* STORE8_I32_A32 */
    3276,
    /* STORE8_I32_A32_S */
    3280,
    /* STORE8_I32_A64 */
    3282,
    /* STORE8_I32_A64_S */
    3286,
    /* STORE8_I64_A32 */
    3288,
    /* STORE8_I64_A32_S */
    3292,
    /* STORE8_I64_A64 */
    3294,
    /* STORE8_I64_A64_S */
    3298,
    /* STORE_F32_A32 */
    3300,
    /* STORE_F32_A32_S */
    3304,
    /* STORE_F32_A64 */
    3306,
    /* STORE_F32_A64_S */
    3310,
    /* STORE_F64_A32 */
    3312,
    /* STORE_F64_A32_S */
    3316,
    /* STORE_F64_A64 */
    3318,
    /* STORE_F64_A64_S */
    3322,
    /* STORE_I32_A32 */
    3324,
    /* STORE_I32_A32_S */
    3328,
    /* STORE_I32_A64 */
    3330,
    /* STORE_I32_A64_S */
    3334,
    /* STORE_I64_A32 */
    3336,
    /* STORE_I64_A32_S */
    3340,
    /* STORE_I64_A64 */
    3342,
    /* STORE_I64_A64_S */
    3346,
    /* STORE_LANE_I16x8_A32 */
    3348,
    /* STORE_LANE_I16x8_A32_S */
    3353,
    /* STORE_LANE_I16x8_A64 */
    3356,
    /* STORE_LANE_I16x8_A64_S */
    3361,
    /* STORE_LANE_I32x4_A32 */
    3364,
    /* STORE_LANE_I32x4_A32_S */
    3369,
    /* STORE_LANE_I32x4_A64 */
    3372,
    /* STORE_LANE_I32x4_A64_S */
    3377,
    /* STORE_LANE_I64x2_A32 */
    3380,
    /* STORE_LANE_I64x2_A32_S */
    3385,
    /* STORE_LANE_I64x2_A64 */
    3388,
    /* STORE_LANE_I64x2_A64_S */
    3393,
    /* STORE_LANE_I8x16_A32 */
    3396,
    /* STORE_LANE_I8x16_A32_S */
    3401,
    /* STORE_LANE_I8x16_A64 */
    3404,
    /* STORE_LANE_I8x16_A64_S */
    3409,
    /* STORE_V128_A32 */
    3412,
    /* STORE_V128_A32_S */
    3416,
    /* STORE_V128_A64 */
    3418,
    /* STORE_V128_A64_S */
    3422,
    /* SUB_F32 */
    3424,
    /* SUB_F32_S */
    3427,
    /* SUB_F32x4 */
    3427,
    /* SUB_F32x4_S */
    3430,
    /* SUB_F64 */
    3430,
    /* SUB_F64_S */
    3433,
    /* SUB_F64x2 */
    3433,
    /* SUB_F64x2_S */
    3436,
    /* SUB_I16x8 */
    3436,
    /* SUB_I16x8_S */
    3439,
    /* SUB_I32 */
    3439,
    /* SUB_I32_S */
    3442,
    /* SUB_I32x4 */
    3442,
    /* SUB_I32x4_S */
    3445,
    /* SUB_I64 */
    3445,
    /* SUB_I64_S */
    3448,
    /* SUB_I64x2 */
    3448,
    /* SUB_I64x2_S */
    3451,
    /* SUB_I8x16 */
    3451,
    /* SUB_I8x16_S */
    3454,
    /* SUB_SAT_S_I16x8 */
    3454,
    /* SUB_SAT_S_I16x8_S */
    3457,
    /* SUB_SAT_S_I8x16 */
    3457,
    /* SUB_SAT_S_I8x16_S */
    3460,
    /* SUB_SAT_U_I16x8 */
    3460,
    /* SUB_SAT_U_I16x8_S */
    3463,
    /* SUB_SAT_U_I8x16 */
    3463,
    /* SUB_SAT_U_I8x16_S */
    3466,
    /* SWIZZLE */
    3466,
    /* SWIZZLE_S */
    3469,
    /* TABLE_COPY */
    3469,
    /* TABLE_COPY_S */
    3474,
    /* TABLE_FILL_EXTERNREF */
    3476,
    /* TABLE_FILL_EXTERNREF_S */
    3480,
    /* TABLE_FILL_FUNCREF */
    3481,
    /* TABLE_FILL_FUNCREF_S */
    3485,
    /* TABLE_GET_EXTERNREF */
    3486,
    /* TABLE_GET_EXTERNREF_S */
    3489,
    /* TABLE_GET_FUNCREF */
    3490,
    /* TABLE_GET_FUNCREF_S */
    3493,
    /* TABLE_GROW_EXTERNREF */
    3494,
    /* TABLE_GROW_EXTERNREF_S */
    3498,
    /* TABLE_GROW_FUNCREF */
    3499,
    /* TABLE_GROW_FUNCREF_S */
    3503,
    /* TABLE_SET_EXTERNREF */
    3504,
    /* TABLE_SET_EXTERNREF_S */
    3507,
    /* TABLE_SET_FUNCREF */
    3508,
    /* TABLE_SET_FUNCREF_S */
    3511,
    /* TABLE_SIZE */
    3512,
    /* TABLE_SIZE_S */
    3514,
    /* TEE_EXTERNREF */
    3515,
    /* TEE_EXTERNREF_S */
    3518,
    /* TEE_F32 */
    3518,
    /* TEE_F32_S */
    3521,
    /* TEE_F64 */
    3521,
    /* TEE_F64_S */
    3524,
    /* TEE_FUNCREF */
    3524,
    /* TEE_FUNCREF_S */
    3527,
    /* TEE_I32 */
    3527,
    /* TEE_I32_S */
    3530,
    /* TEE_I64 */
    3530,
    /* TEE_I64_S */
    3533,
    /* TEE_V128 */
    3533,
    /* TEE_V128_S */
    3536,
    /* THROW */
    3536,
    /* THROW_S */
    3537,
    /* TRUNC_F32 */
    3538,
    /* TRUNC_F32_S */
    3540,
    /* TRUNC_F32x4 */
    3540,
    /* TRUNC_F32x4_S */
    3542,
    /* TRUNC_F64 */
    3542,
    /* TRUNC_F64_S */
    3544,
    /* TRUNC_F64x2 */
    3544,
    /* TRUNC_F64x2_S */
    3546,
    /* TRY */
    3546,
    /* TRY_S */
    3547,
    /* UNREACHABLE */
    3548,
    /* UNREACHABLE_S */
    3548,
    /* XOR */
    3548,
    /* XOR_I32 */
    3551,
    /* XOR_I32_S */
    3554,
    /* XOR_I64 */
    3554,
    /* XOR_I64_S */
    3557,
    /* XOR_S */
    3557,
    /* anonymous_7070MEMORY_GROW_A32 */
    3557,
    /* anonymous_7070MEMORY_GROW_A32_S */
    3560,
    /* anonymous_7070MEMORY_SIZE_A32 */
    3561,
    /* anonymous_7070MEMORY_SIZE_A32_S */
    3563,
    /* anonymous_7071MEMORY_GROW_A64 */
    3564,
    /* anonymous_7071MEMORY_GROW_A64_S */
    3567,
    /* anonymous_7071MEMORY_SIZE_A64 */
    3568,
    /* anonymous_7071MEMORY_SIZE_A64_S */
    3570,
    /* anonymous_7752DATA_DROP */
    3571,
    /* anonymous_7752DATA_DROP_S */
    3572,
    /* anonymous_7752MEMORY_COPY_A32 */
    3573,
    /* anonymous_7752MEMORY_COPY_A32_S */
    3578,
    /* anonymous_7752MEMORY_FILL_A32 */
    3580,
    /* anonymous_7752MEMORY_FILL_A32_S */
    3584,
    /* anonymous_7752MEMORY_INIT_A32 */
    3585,
    /* anonymous_7752MEMORY_INIT_A32_S */
    3590,
    /* anonymous_7753DATA_DROP */
    3592,
    /* anonymous_7753DATA_DROP_S */
    3593,
    /* anonymous_7753MEMORY_COPY_A64 */
    3594,
    /* anonymous_7753MEMORY_COPY_A64_S */
    3599,
    /* anonymous_7753MEMORY_FILL_A64 */
    3601,
    /* anonymous_7753MEMORY_FILL_A64_S */
    3605,
    /* anonymous_7753MEMORY_INIT_A64 */
    3606,
    /* anonymous_7753MEMORY_INIT_A64_S */
    3611,
    /* convert_low_s_F64x2 */
    3613,
    /* convert_low_s_F64x2_S */
    3615,
    /* convert_low_u_F64x2 */
    3615,
    /* convert_low_u_F64x2_S */
    3617,
    /* demote_zero_F32x4 */
    3617,
    /* demote_zero_F32x4_S */
    3619,
    /* extend_high_s_I16x8 */
    3619,
    /* extend_high_s_I16x8_S */
    3621,
    /* extend_high_s_I32x4 */
    3621,
    /* extend_high_s_I32x4_S */
    3623,
    /* extend_high_s_I64x2 */
    3623,
    /* extend_high_s_I64x2_S */
    3625,
    /* extend_high_u_I16x8 */
    3625,
    /* extend_high_u_I16x8_S */
    3627,
    /* extend_high_u_I32x4 */
    3627,
    /* extend_high_u_I32x4_S */
    3629,
    /* extend_high_u_I64x2 */
    3629,
    /* extend_high_u_I64x2_S */
    3631,
    /* extend_low_s_I16x8 */
    3631,
    /* extend_low_s_I16x8_S */
    3633,
    /* extend_low_s_I32x4 */
    3633,
    /* extend_low_s_I32x4_S */
    3635,
    /* extend_low_s_I64x2 */
    3635,
    /* extend_low_s_I64x2_S */
    3637,
    /* extend_low_u_I16x8 */
    3637,
    /* extend_low_u_I16x8_S */
    3639,
    /* extend_low_u_I32x4 */
    3639,
    /* extend_low_u_I32x4_S */
    3641,
    /* extend_low_u_I64x2 */
    3641,
    /* extend_low_u_I64x2_S */
    3643,
    /* fp_to_sint_I32x4 */
    3643,
    /* fp_to_sint_I32x4_S */
    3645,
    /* fp_to_uint_I32x4 */
    3645,
    /* fp_to_uint_I32x4_S */
    3647,
    /* int_wasm_extadd_pairwise_signed_I16x8 */
    3647,
    /* int_wasm_extadd_pairwise_signed_I16x8_S */
    3649,
    /* int_wasm_extadd_pairwise_signed_I32x4 */
    3649,
    /* int_wasm_extadd_pairwise_signed_I32x4_S */
    3651,
    /* int_wasm_extadd_pairwise_unsigned_I16x8 */
    3651,
    /* int_wasm_extadd_pairwise_unsigned_I16x8_S */
    3653,
    /* int_wasm_extadd_pairwise_unsigned_I32x4 */
    3653,
    /* int_wasm_extadd_pairwise_unsigned_I32x4_S */
    3655,
    /* int_wasm_relaxed_trunc_signed_I32x4 */
    3655,
    /* int_wasm_relaxed_trunc_signed_I32x4_S */
    3657,
    /* int_wasm_relaxed_trunc_signed_zero_I32x4 */
    3657,
    /* int_wasm_relaxed_trunc_signed_zero_I32x4_S */
    3659,
    /* int_wasm_relaxed_trunc_unsigned_I32x4 */
    3659,
    /* int_wasm_relaxed_trunc_unsigned_I32x4_S */
    3661,
    /* int_wasm_relaxed_trunc_unsigned_zero_I32x4 */
    3661,
    /* int_wasm_relaxed_trunc_unsigned_zero_I32x4_S */
    3663,
    /* promote_low_F64x2 */
    3663,
    /* promote_low_F64x2_S */
    3665,
    /* sint_to_fp_F32x4 */
    3665,
    /* sint_to_fp_F32x4_S */
    3667,
    /* trunc_sat_zero_s_I32x4 */
    3667,
    /* trunc_sat_zero_s_I32x4_S */
    3669,
    /* trunc_sat_zero_u_I32x4 */
    3669,
    /* trunc_sat_zero_u_I32x4_S */
    3671,
    /* uint_to_fp_F32x4 */
    3671,
    /* uint_to_fp_F32x4_S */
    3673,
  };

  using namespace OpTypes;
  static const int8_t OpcodeOperandTypes[] = {
    
    /* PHI */
    -1, 
    /* INLINEASM */
    /* INLINEASM_BR */
    /* CFI_INSTRUCTION */
    i32imm, 
    /* EH_LABEL */
    i32imm, 
    /* GC_LABEL */
    i32imm, 
    /* ANNOTATION_LABEL */
    i32imm, 
    /* KILL */
    /* EXTRACT_SUBREG */
    -1, -1, i32imm, 
    /* INSERT_SUBREG */
    -1, -1, -1, i32imm, 
    /* IMPLICIT_DEF */
    -1, 
    /* SUBREG_TO_REG */
    -1, -1, -1, i32imm, 
    /* COPY_TO_REGCLASS */
    -1, -1, i32imm, 
    /* DBG_VALUE */
    /* DBG_VALUE_LIST */
    /* DBG_INSTR_REF */
    /* DBG_PHI */
    /* DBG_LABEL */
    -1, 
    /* REG_SEQUENCE */
    -1, -1, 
    /* COPY */
    -1, -1, 
    /* BUNDLE */
    /* LIFETIME_START */
    i32imm, 
    /* LIFETIME_END */
    i32imm, 
    /* PSEUDO_PROBE */
    i64imm, i64imm, i8imm, i32imm, 
    /* ARITH_FENCE */
    -1, -1, 
    /* STACKMAP */
    i64imm, i32imm, 
    /* FENTRY_CALL */
    /* PATCHPOINT */
    -1, i64imm, i32imm, -1, i32imm, i32imm, 
    /* LOAD_STACK_GUARD */
    -1, 
    /* PREALLOCATED_SETUP */
    i32imm, 
    /* PREALLOCATED_ARG */
    -1, i32imm, i32imm, 
    /* STATEPOINT */
    /* LOCAL_ESCAPE */
    -1, i32imm, 
    /* FAULTING_OP */
    -1, 
    /* PATCHABLE_OP */
    /* PATCHABLE_FUNCTION_ENTER */
    /* PATCHABLE_RET */
    /* PATCHABLE_FUNCTION_EXIT */
    /* PATCHABLE_TAIL_CALL */
    /* PATCHABLE_EVENT_CALL */
    -1, -1, 
    /* PATCHABLE_TYPED_EVENT_CALL */
    -1, -1, -1, 
    /* ICALL_BRANCH_FUNNEL */
    /* MEMBARRIER */
    /* G_ASSERT_SEXT */
    type0, type0, untyped_imm_0, 
    /* G_ASSERT_ZEXT */
    type0, type0, untyped_imm_0, 
    /* G_ASSERT_ALIGN */
    type0, type0, untyped_imm_0, 
    /* G_ADD */
    type0, type0, type0, 
    /* G_SUB */
    type0, type0, type0, 
    /* G_MUL */
    type0, type0, type0, 
    /* G_SDIV */
    type0, type0, type0, 
    /* G_UDIV */
    type0, type0, type0, 
    /* G_SREM */
    type0, type0, type0, 
    /* G_UREM */
    type0, type0, type0, 
    /* G_SDIVREM */
    type0, type0, type0, type0, 
    /* G_UDIVREM */
    type0, type0, type0, type0, 
    /* G_AND */
    type0, type0, type0, 
    /* G_OR */
    type0, type0, type0, 
    /* G_XOR */
    type0, type0, type0, 
    /* G_IMPLICIT_DEF */
    type0, 
    /* G_PHI */
    type0, 
    /* G_FRAME_INDEX */
    type0, -1, 
    /* G_GLOBAL_VALUE */
    type0, -1, 
    /* G_CONSTANT_POOL */
    type0, -1, 
    /* G_EXTRACT */
    type0, type1, untyped_imm_0, 
    /* G_UNMERGE_VALUES */
    type0, type1, 
    /* G_INSERT */
    type0, type0, type1, untyped_imm_0, 
    /* G_MERGE_VALUES */
    type0, type1, 
    /* G_BUILD_VECTOR */
    type0, type1, 
    /* G_BUILD_VECTOR_TRUNC */
    type0, type1, 
    /* G_CONCAT_VECTORS */
    type0, type1, 
    /* G_PTRTOINT */
    type0, type1, 
    /* G_INTTOPTR */
    type0, type1, 
    /* G_BITCAST */
    type0, type1, 
    /* G_FREEZE */
    type0, type0, 
    /* G_CONSTANT_FOLD_BARRIER */
    type0, type0, 
    /* G_INTRINSIC_FPTRUNC_ROUND */
    type0, type1, i32imm, 
    /* G_INTRINSIC_TRUNC */
    type0, type0, 
    /* G_INTRINSIC_ROUND */
    type0, type0, 
    /* G_INTRINSIC_LRINT */
    type0, type1, 
    /* G_INTRINSIC_ROUNDEVEN */
    type0, type0, 
    /* G_READCYCLECOUNTER */
    type0, 
    /* G_LOAD */
    type0, ptype1, 
    /* G_SEXTLOAD */
    type0, ptype1, 
    /* G_ZEXTLOAD */
    type0, ptype1, 
    /* G_INDEXED_LOAD */
    type0, ptype1, ptype1, type2, -1, 
    /* G_INDEXED_SEXTLOAD */
    type0, ptype1, ptype1, type2, -1, 
    /* G_INDEXED_ZEXTLOAD */
    type0, ptype1, ptype1, type2, -1, 
    /* G_STORE */
    type0, ptype1, 
    /* G_INDEXED_STORE */
    ptype0, type1, ptype0, ptype2, -1, 
    /* G_ATOMIC_CMPXCHG_WITH_SUCCESS */
    type0, type1, type2, type0, type0, 
    /* G_ATOMIC_CMPXCHG */
    type0, ptype1, type0, type0, 
    /* G_ATOMICRMW_XCHG */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_ADD */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_SUB */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_AND */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_NAND */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_OR */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_XOR */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_MAX */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_MIN */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_UMAX */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_UMIN */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_FADD */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_FSUB */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_FMAX */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_FMIN */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_UINC_WRAP */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_UDEC_WRAP */
    type0, ptype1, type0, 
    /* G_FENCE */
    i32imm, i32imm, 
    /* G_BRCOND */
    type0, -1, 
    /* G_BRINDIRECT */
    type0, 
    /* G_INVOKE_REGION_START */
    /* G_INTRINSIC */
    -1, 
    /* G_INTRINSIC_W_SIDE_EFFECTS */
    -1, 
    /* G_ANYEXT */
    type0, type1, 
    /* G_TRUNC */
    type0, type1, 
    /* G_CONSTANT */
    type0, -1, 
    /* G_FCONSTANT */
    type0, -1, 
    /* G_VASTART */
    type0, 
    /* G_VAARG */
    type0, type1, -1, 
    /* G_SEXT */
    type0, type1, 
    /* G_SEXT_INREG */
    type0, type0, untyped_imm_0, 
    /* G_ZEXT */
    type0, type1, 
    /* G_SHL */
    type0, type0, type1, 
    /* G_LSHR */
    type0, type0, type1, 
    /* G_ASHR */
    type0, type0, type1, 
    /* G_FSHL */
    type0, type0, type0, type1, 
    /* G_FSHR */
    type0, type0, type0, type1, 
    /* G_ROTR */
    type0, type0, type1, 
    /* G_ROTL */
    type0, type0, type1, 
    /* G_ICMP */
    type0, -1, type1, type1, 
    /* G_FCMP */
    type0, -1, type1, type1, 
    /* G_SELECT */
    type0, type1, type0, type0, 
    /* G_UADDO */
    type0, type1, type0, type0, 
    /* G_UADDE */
    type0, type1, type0, type0, type1, 
    /* G_USUBO */
    type0, type1, type0, type0, 
    /* G_USUBE */
    type0, type1, type0, type0, type1, 
    /* G_SADDO */
    type0, type1, type0, type0, 
    /* G_SADDE */
    type0, type1, type0, type0, type1, 
    /* G_SSUBO */
    type0, type1, type0, type0, 
    /* G_SSUBE */
    type0, type1, type0, type0, type1, 
    /* G_UMULO */
    type0, type1, type0, type0, 
    /* G_SMULO */
    type0, type1, type0, type0, 
    /* G_UMULH */
    type0, type0, type0, 
    /* G_SMULH */
    type0, type0, type0, 
    /* G_UADDSAT */
    type0, type0, type0, 
    /* G_SADDSAT */
    type0, type0, type0, 
    /* G_USUBSAT */
    type0, type0, type0, 
    /* G_SSUBSAT */
    type0, type0, type0, 
    /* G_USHLSAT */
    type0, type0, type1, 
    /* G_SSHLSAT */
    type0, type0, type1, 
    /* G_SMULFIX */
    type0, type0, type0, untyped_imm_0, 
    /* G_UMULFIX */
    type0, type0, type0, untyped_imm_0, 
    /* G_SMULFIXSAT */
    type0, type0, type0, untyped_imm_0, 
    /* G_UMULFIXSAT */
    type0, type0, type0, untyped_imm_0, 
    /* G_SDIVFIX */
    type0, type0, type0, untyped_imm_0, 
    /* G_UDIVFIX */
    type0, type0, type0, untyped_imm_0, 
    /* G_SDIVFIXSAT */
    type0, type0, type0, untyped_imm_0, 
    /* G_UDIVFIXSAT */
    type0, type0, type0, untyped_imm_0, 
    /* G_FADD */
    type0, type0, type0, 
    /* G_FSUB */
    type0, type0, type0, 
    /* G_FMUL */
    type0, type0, type0, 
    /* G_FMA */
    type0, type0, type0, type0, 
    /* G_FMAD */
    type0, type0, type0, type0, 
    /* G_FDIV */
    type0, type0, type0, 
    /* G_FREM */
    type0, type0, type0, 
    /* G_FPOW */
    type0, type0, type0, 
    /* G_FPOWI */
    type0, type0, type1, 
    /* G_FEXP */
    type0, type0, 
    /* G_FEXP2 */
    type0, type0, 
    /* G_FLOG */
    type0, type0, 
    /* G_FLOG2 */
    type0, type0, 
    /* G_FLOG10 */
    type0, type0, 
    /* G_FLDEXP */
    type0, type0, type1, 
    /* G_FFREXP */
    type0, type1, type0, 
    /* G_FNEG */
    type0, type0, 
    /* G_FPEXT */
    type0, type1, 
    /* G_FPTRUNC */
    type0, type1, 
    /* G_FPTOSI */
    type0, type1, 
    /* G_FPTOUI */
    type0, type1, 
    /* G_SITOFP */
    type0, type1, 
    /* G_UITOFP */
    type0, type1, 
    /* G_FABS */
    type0, type0, 
    /* G_FCOPYSIGN */
    type0, type0, type1, 
    /* G_IS_FPCLASS */
    type0, type1, -1, 
    /* G_FCANONICALIZE */
    type0, type0, 
    /* G_FMINNUM */
    type0, type0, type0, 
    /* G_FMAXNUM */
    type0, type0, type0, 
    /* G_FMINNUM_IEEE */
    type0, type0, type0, 
    /* G_FMAXNUM_IEEE */
    type0, type0, type0, 
    /* G_FMINIMUM */
    type0, type0, type0, 
    /* G_FMAXIMUM */
    type0, type0, type0, 
    /* G_PTR_ADD */
    ptype0, ptype0, type1, 
    /* G_PTRMASK */
    ptype0, ptype0, type1, 
    /* G_SMIN */
    type0, type0, type0, 
    /* G_SMAX */
    type0, type0, type0, 
    /* G_UMIN */
    type0, type0, type0, 
    /* G_UMAX */
    type0, type0, type0, 
    /* G_ABS */
    type0, type0, 
    /* G_LROUND */
    type0, type1, 
    /* G_LLROUND */
    type0, type1, 
    /* G_BR */
    -1, 
    /* G_BRJT */
    ptype0, -1, type1, 
    /* G_INSERT_VECTOR_ELT */
    type0, type0, type1, type2, 
    /* G_EXTRACT_VECTOR_ELT */
    type0, type1, type2, 
    /* G_SHUFFLE_VECTOR */
    type0, type1, type1, -1, 
    /* G_CTTZ */
    type0, type1, 
    /* G_CTTZ_ZERO_UNDEF */
    type0, type1, 
    /* G_CTLZ */
    type0, type1, 
    /* G_CTLZ_ZERO_UNDEF */
    type0, type1, 
    /* G_CTPOP */
    type0, type1, 
    /* G_BSWAP */
    type0, type0, 
    /* G_BITREVERSE */
    type0, type0, 
    /* G_FCEIL */
    type0, type0, 
    /* G_FCOS */
    type0, type0, 
    /* G_FSIN */
    type0, type0, 
    /* G_FSQRT */
    type0, type0, 
    /* G_FFLOOR */
    type0, type0, 
    /* G_FRINT */
    type0, type0, 
    /* G_FNEARBYINT */
    type0, type0, 
    /* G_ADDRSPACE_CAST */
    type0, type1, 
    /* G_BLOCK_ADDR */
    type0, -1, 
    /* G_JUMP_TABLE */
    type0, -1, 
    /* G_DYN_STACKALLOC */
    ptype0, type1, i32imm, 
    /* G_STRICT_FADD */
    type0, type0, type0, 
    /* G_STRICT_FSUB */
    type0, type0, type0, 
    /* G_STRICT_FMUL */
    type0, type0, type0, 
    /* G_STRICT_FDIV */
    type0, type0, type0, 
    /* G_STRICT_FREM */
    type0, type0, type0, 
    /* G_STRICT_FMA */
    type0, type0, type0, type0, 
    /* G_STRICT_FSQRT */
    type0, type0, 
    /* G_STRICT_FLDEXP */
    type0, type0, type1, 
    /* G_READ_REGISTER */
    type0, -1, 
    /* G_WRITE_REGISTER */
    -1, type0, 
    /* G_MEMCPY */
    ptype0, ptype1, type2, untyped_imm_0, 
    /* G_MEMCPY_INLINE */
    ptype0, ptype1, type2, 
    /* G_MEMMOVE */
    ptype0, ptype1, type2, untyped_imm_0, 
    /* G_MEMSET */
    ptype0, type1, type2, untyped_imm_0, 
    /* G_BZERO */
    ptype0, type1, untyped_imm_0, 
    /* G_VECREDUCE_SEQ_FADD */
    type0, type1, type2, 
    /* G_VECREDUCE_SEQ_FMUL */
    type0, type1, type2, 
    /* G_VECREDUCE_FADD */
    type0, type1, 
    /* G_VECREDUCE_FMUL */
    type0, type1, 
    /* G_VECREDUCE_FMAX */
    type0, type1, 
    /* G_VECREDUCE_FMIN */
    type0, type1, 
    /* G_VECREDUCE_ADD */
    type0, type1, 
    /* G_VECREDUCE_MUL */
    type0, type1, 
    /* G_VECREDUCE_AND */
    type0, type1, 
    /* G_VECREDUCE_OR */
    type0, type1, 
    /* G_VECREDUCE_XOR */
    type0, type1, 
    /* G_VECREDUCE_SMAX */
    type0, type1, 
    /* G_VECREDUCE_SMIN */
    type0, type1, 
    /* G_VECREDUCE_UMAX */
    type0, type1, 
    /* G_VECREDUCE_UMIN */
    type0, type1, 
    /* G_SBFX */
    type0, type0, type1, type1, 
    /* G_UBFX */
    type0, type0, type1, type1, 
    /* CALL_PARAMS */
    function32_op, 
    /* CALL_PARAMS_S */
    function32_op, 
    /* CALL_RESULTS */
    /* CALL_RESULTS_S */
    /* CATCHRET */
    bb_op, bb_op, 
    /* CATCHRET_S */
    bb_op, bb_op, 
    /* CLEANUPRET */
    /* CLEANUPRET_S */
    /* COMPILER_FENCE */
    /* COMPILER_FENCE_S */
    /* RET_CALL_RESULTS */
    /* RET_CALL_RESULTS_S */
    /* ABS_F32 */
    F32, F32, 
    /* ABS_F32_S */
    /* ABS_F32x4 */
    V128, V128, 
    /* ABS_F32x4_S */
    /* ABS_F64 */
    F64, F64, 
    /* ABS_F64_S */
    /* ABS_F64x2 */
    V128, V128, 
    /* ABS_F64x2_S */
    /* ABS_I16x8 */
    V128, V128, 
    /* ABS_I16x8_S */
    /* ABS_I32x4 */
    V128, V128, 
    /* ABS_I32x4_S */
    /* ABS_I64x2 */
    V128, V128, 
    /* ABS_I64x2_S */
    /* ABS_I8x16 */
    V128, V128, 
    /* ABS_I8x16_S */
    /* ADD_F32 */
    F32, F32, F32, 
    /* ADD_F32_S */
    /* ADD_F32x4 */
    V128, V128, V128, 
    /* ADD_F32x4_S */
    /* ADD_F64 */
    F64, F64, F64, 
    /* ADD_F64_S */
    /* ADD_F64x2 */
    V128, V128, V128, 
    /* ADD_F64x2_S */
    /* ADD_I16x8 */
    V128, V128, V128, 
    /* ADD_I16x8_S */
    /* ADD_I32 */
    I32, I32, I32, 
    /* ADD_I32_S */
    /* ADD_I32x4 */
    V128, V128, V128, 
    /* ADD_I32x4_S */
    /* ADD_I64 */
    I64, I64, I64, 
    /* ADD_I64_S */
    /* ADD_I64x2 */
    V128, V128, V128, 
    /* ADD_I64x2_S */
    /* ADD_I8x16 */
    V128, V128, V128, 
    /* ADD_I8x16_S */
    /* ADD_SAT_S_I16x8 */
    V128, V128, V128, 
    /* ADD_SAT_S_I16x8_S */
    /* ADD_SAT_S_I8x16 */
    V128, V128, V128, 
    /* ADD_SAT_S_I8x16_S */
    /* ADD_SAT_U_I16x8 */
    V128, V128, V128, 
    /* ADD_SAT_U_I16x8_S */
    /* ADD_SAT_U_I8x16 */
    V128, V128, V128, 
    /* ADD_SAT_U_I8x16_S */
    /* ADJCALLSTACKDOWN */
    i32imm, i32imm, 
    /* ADJCALLSTACKDOWN_S */
    i32imm, i32imm, 
    /* ADJCALLSTACKUP */
    i32imm, i32imm, 
    /* ADJCALLSTACKUP_S */
    i32imm, i32imm, 
    /* ALLTRUE_I16x8 */
    I32, V128, 
    /* ALLTRUE_I16x8_S */
    /* ALLTRUE_I32x4 */
    I32, V128, 
    /* ALLTRUE_I32x4_S */
    /* ALLTRUE_I64x2 */
    I32, V128, 
    /* ALLTRUE_I64x2_S */
    /* ALLTRUE_I8x16 */
    I32, V128, 
    /* ALLTRUE_I8x16_S */
    /* AND */
    V128, V128, V128, 
    /* ANDNOT */
    V128, V128, V128, 
    /* ANDNOT_S */
    /* AND_I32 */
    I32, I32, I32, 
    /* AND_I32_S */
    /* AND_I64 */
    I64, I64, I64, 
    /* AND_I64_S */
    /* AND_S */
    /* ANYTRUE */
    I32, V128, 
    /* ANYTRUE_S */
    /* ARGUMENT_externref */
    EXTERNREF, i32imm, 
    /* ARGUMENT_externref_S */
    i32imm, 
    /* ARGUMENT_f32 */
    F32, i32imm, 
    /* ARGUMENT_f32_S */
    i32imm, 
    /* ARGUMENT_f64 */
    F64, i32imm, 
    /* ARGUMENT_f64_S */
    i32imm, 
    /* ARGUMENT_funcref */
    FUNCREF, i32imm, 
    /* ARGUMENT_funcref_S */
    i32imm, 
    /* ARGUMENT_i32 */
    I32, i32imm, 
    /* ARGUMENT_i32_S */
    i32imm, 
    /* ARGUMENT_i64 */
    I64, i32imm, 
    /* ARGUMENT_i64_S */
    i32imm, 
    /* ARGUMENT_v16i8 */
    V128, i32imm, 
    /* ARGUMENT_v16i8_S */
    i32imm, 
    /* ARGUMENT_v2f64 */
    V128, i32imm, 
    /* ARGUMENT_v2f64_S */
    i32imm, 
    /* ARGUMENT_v2i64 */
    V128, i32imm, 
    /* ARGUMENT_v2i64_S */
    i32imm, 
    /* ARGUMENT_v4f32 */
    V128, i32imm, 
    /* ARGUMENT_v4f32_S */
    i32imm, 
    /* ARGUMENT_v4i32 */
    V128, i32imm, 
    /* ARGUMENT_v4i32_S */
    i32imm, 
    /* ARGUMENT_v8i16 */
    V128, i32imm, 
    /* ARGUMENT_v8i16_S */
    i32imm, 
    /* ATOMIC_FENCE */
    i8imm, 
    /* ATOMIC_FENCE_S */
    i8imm, 
    /* ATOMIC_LOAD16_U_I32_A32 */
    I32, P2Align, offset32_op, I32, 
    /* ATOMIC_LOAD16_U_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_LOAD16_U_I32_A64 */
    I32, P2Align, offset64_op, I64, 
    /* ATOMIC_LOAD16_U_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_LOAD16_U_I64_A32 */
    I64, P2Align, offset32_op, I32, 
    /* ATOMIC_LOAD16_U_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_LOAD16_U_I64_A64 */
    I64, P2Align, offset64_op, I64, 
    /* ATOMIC_LOAD16_U_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_LOAD32_U_I64_A32 */
    I64, P2Align, offset32_op, I32, 
    /* ATOMIC_LOAD32_U_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_LOAD32_U_I64_A64 */
    I64, P2Align, offset64_op, I64, 
    /* ATOMIC_LOAD32_U_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_LOAD8_U_I32_A32 */
    I32, P2Align, offset32_op, I32, 
    /* ATOMIC_LOAD8_U_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_LOAD8_U_I32_A64 */
    I32, P2Align, offset64_op, I64, 
    /* ATOMIC_LOAD8_U_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_LOAD8_U_I64_A32 */
    I64, P2Align, offset32_op, I32, 
    /* ATOMIC_LOAD8_U_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_LOAD8_U_I64_A64 */
    I64, P2Align, offset64_op, I64, 
    /* ATOMIC_LOAD8_U_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_LOAD_I32_A32 */
    I32, P2Align, offset32_op, I32, 
    /* ATOMIC_LOAD_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_LOAD_I32_A64 */
    I32, P2Align, offset64_op, I64, 
    /* ATOMIC_LOAD_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_LOAD_I64_A32 */
    I64, P2Align, offset32_op, I32, 
    /* ATOMIC_LOAD_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_LOAD_I64_A64 */
    I64, P2Align, offset64_op, I64, 
    /* ATOMIC_LOAD_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW16_U_ADD_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW16_U_ADD_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW16_U_ADD_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW16_U_ADD_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW16_U_ADD_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW16_U_ADD_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW16_U_ADD_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW16_U_ADD_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW16_U_AND_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW16_U_AND_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW16_U_AND_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW16_U_AND_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW16_U_AND_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW16_U_AND_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW16_U_AND_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW16_U_AND_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW16_U_CMPXCHG_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, I32, 
    /* ATOMIC_RMW16_U_CMPXCHG_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW16_U_CMPXCHG_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, I32, 
    /* ATOMIC_RMW16_U_CMPXCHG_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW16_U_CMPXCHG_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, I64, 
    /* ATOMIC_RMW16_U_CMPXCHG_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW16_U_CMPXCHG_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, I64, 
    /* ATOMIC_RMW16_U_CMPXCHG_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW16_U_OR_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW16_U_OR_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW16_U_OR_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW16_U_OR_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW16_U_OR_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW16_U_OR_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW16_U_OR_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW16_U_OR_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW16_U_SUB_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW16_U_SUB_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW16_U_SUB_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW16_U_SUB_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW16_U_SUB_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW16_U_SUB_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW16_U_SUB_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW16_U_SUB_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW16_U_XCHG_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW16_U_XCHG_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW16_U_XCHG_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW16_U_XCHG_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW16_U_XCHG_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW16_U_XCHG_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW16_U_XCHG_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW16_U_XCHG_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW16_U_XOR_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW16_U_XOR_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW16_U_XOR_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW16_U_XOR_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW16_U_XOR_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW16_U_XOR_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW16_U_XOR_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW16_U_XOR_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW32_U_ADD_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW32_U_ADD_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW32_U_ADD_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW32_U_ADD_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW32_U_AND_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW32_U_AND_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW32_U_AND_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW32_U_AND_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW32_U_CMPXCHG_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, I64, 
    /* ATOMIC_RMW32_U_CMPXCHG_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW32_U_CMPXCHG_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, I64, 
    /* ATOMIC_RMW32_U_CMPXCHG_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW32_U_OR_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW32_U_OR_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW32_U_OR_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW32_U_OR_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW32_U_SUB_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW32_U_SUB_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW32_U_SUB_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW32_U_SUB_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW32_U_XCHG_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW32_U_XCHG_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW32_U_XCHG_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW32_U_XCHG_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW32_U_XOR_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW32_U_XOR_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW32_U_XOR_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW32_U_XOR_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW8_U_ADD_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW8_U_ADD_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW8_U_ADD_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW8_U_ADD_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW8_U_ADD_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW8_U_ADD_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW8_U_ADD_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW8_U_ADD_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW8_U_AND_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW8_U_AND_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW8_U_AND_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW8_U_AND_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW8_U_AND_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW8_U_AND_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW8_U_AND_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW8_U_AND_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW8_U_CMPXCHG_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, I32, 
    /* ATOMIC_RMW8_U_CMPXCHG_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW8_U_CMPXCHG_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, I32, 
    /* ATOMIC_RMW8_U_CMPXCHG_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW8_U_CMPXCHG_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, I64, 
    /* ATOMIC_RMW8_U_CMPXCHG_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW8_U_CMPXCHG_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, I64, 
    /* ATOMIC_RMW8_U_CMPXCHG_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW8_U_OR_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW8_U_OR_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW8_U_OR_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW8_U_OR_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW8_U_OR_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW8_U_OR_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW8_U_OR_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW8_U_OR_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW8_U_SUB_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW8_U_SUB_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW8_U_SUB_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW8_U_SUB_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW8_U_SUB_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW8_U_SUB_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW8_U_SUB_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW8_U_SUB_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW8_U_XCHG_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW8_U_XCHG_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW8_U_XCHG_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW8_U_XCHG_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW8_U_XCHG_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW8_U_XCHG_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW8_U_XCHG_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW8_U_XCHG_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW8_U_XOR_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW8_U_XOR_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW8_U_XOR_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW8_U_XOR_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW8_U_XOR_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW8_U_XOR_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW8_U_XOR_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW8_U_XOR_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW_ADD_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW_ADD_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW_ADD_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW_ADD_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW_ADD_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW_ADD_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW_ADD_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW_ADD_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW_AND_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW_AND_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW_AND_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW_AND_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW_AND_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW_AND_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW_AND_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW_AND_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW_CMPXCHG_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, I32, 
    /* ATOMIC_RMW_CMPXCHG_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW_CMPXCHG_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, I32, 
    /* ATOMIC_RMW_CMPXCHG_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW_CMPXCHG_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, I64, 
    /* ATOMIC_RMW_CMPXCHG_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW_CMPXCHG_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, I64, 
    /* ATOMIC_RMW_CMPXCHG_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW_OR_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW_OR_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW_OR_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW_OR_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW_OR_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW_OR_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW_OR_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW_OR_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW_SUB_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW_SUB_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW_SUB_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW_SUB_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW_SUB_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW_SUB_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW_SUB_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW_SUB_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW_XCHG_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW_XCHG_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW_XCHG_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW_XCHG_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW_XCHG_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW_XCHG_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW_XCHG_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW_XCHG_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW_XOR_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW_XOR_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW_XOR_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW_XOR_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW_XOR_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW_XOR_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW_XOR_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW_XOR_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_STORE16_I32_A32 */
    P2Align, offset32_op, I32, I32, 
    /* ATOMIC_STORE16_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_STORE16_I32_A64 */
    P2Align, offset64_op, I64, I32, 
    /* ATOMIC_STORE16_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_STORE16_I64_A32 */
    P2Align, offset32_op, I32, I64, 
    /* ATOMIC_STORE16_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_STORE16_I64_A64 */
    P2Align, offset64_op, I64, I64, 
    /* ATOMIC_STORE16_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_STORE32_I64_A32 */
    P2Align, offset32_op, I32, I64, 
    /* ATOMIC_STORE32_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_STORE32_I64_A64 */
    P2Align, offset64_op, I64, I64, 
    /* ATOMIC_STORE32_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_STORE8_I32_A32 */
    P2Align, offset32_op, I32, I32, 
    /* ATOMIC_STORE8_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_STORE8_I32_A64 */
    P2Align, offset64_op, I64, I32, 
    /* ATOMIC_STORE8_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_STORE8_I64_A32 */
    P2Align, offset32_op, I32, I64, 
    /* ATOMIC_STORE8_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_STORE8_I64_A64 */
    P2Align, offset64_op, I64, I64, 
    /* ATOMIC_STORE8_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_STORE_I32_A32 */
    P2Align, offset32_op, I32, I32, 
    /* ATOMIC_STORE_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_STORE_I32_A64 */
    P2Align, offset64_op, I64, I32, 
    /* ATOMIC_STORE_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_STORE_I64_A32 */
    P2Align, offset32_op, I32, I64, 
    /* ATOMIC_STORE_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_STORE_I64_A64 */
    P2Align, offset64_op, I64, I64, 
    /* ATOMIC_STORE_I64_A64_S */
    P2Align, offset64_op, 
    /* AVGR_U_I16x8 */
    V128, V128, V128, 
    /* AVGR_U_I16x8_S */
    /* AVGR_U_I8x16 */
    V128, V128, V128, 
    /* AVGR_U_I8x16_S */
    /* BITMASK_I16x8 */
    I32, V128, 
    /* BITMASK_I16x8_S */
    /* BITMASK_I32x4 */
    I32, V128, 
    /* BITMASK_I32x4_S */
    /* BITMASK_I64x2 */
    I32, V128, 
    /* BITMASK_I64x2_S */
    /* BITMASK_I8x16 */
    I32, V128, 
    /* BITMASK_I8x16_S */
    /* BITSELECT */
    V128, V128, V128, V128, 
    /* BITSELECT_S */
    /* BLOCK */
    Signature, 
    /* BLOCK_S */
    Signature, 
    /* BR */
    bb_op, 
    /* BR_IF */
    bb_op, I32, 
    /* BR_IF_S */
    bb_op, 
    /* BR_S */
    bb_op, 
    /* BR_TABLE_I32 */
    I32, 
    /* BR_TABLE_I32_S */
    brlist, 
    /* BR_TABLE_I64 */
    I64, 
    /* BR_TABLE_I64_S */
    brlist, 
    /* BR_UNLESS */
    bb_op, I32, 
    /* BR_UNLESS_S */
    bb_op, 
    /* CALL */
    function32_op, 
    /* CALL_INDIRECT */
    TypeIndex, table32_op, 
    /* CALL_INDIRECT_S */
    TypeIndex, table32_op, 
    /* CALL_S */
    function32_op, 
    /* CATCH */
    tag_op, 
    /* CATCH_ALL */
    /* CATCH_ALL_S */
    /* CATCH_S */
    tag_op, 
    /* CEIL_F32 */
    F32, F32, 
    /* CEIL_F32_S */
    /* CEIL_F32x4 */
    V128, V128, 
    /* CEIL_F32x4_S */
    /* CEIL_F64 */
    F64, F64, 
    /* CEIL_F64_S */
    /* CEIL_F64x2 */
    V128, V128, 
    /* CEIL_F64x2_S */
    /* CLZ_I32 */
    I32, I32, 
    /* CLZ_I32_S */
    /* CLZ_I64 */
    I64, I64, 
    /* CLZ_I64_S */
    /* CONST_F32 */
    F32, f32imm_op, 
    /* CONST_F32_S */
    f32imm_op, 
    /* CONST_F64 */
    F64, f64imm_op, 
    /* CONST_F64_S */
    f64imm_op, 
    /* CONST_I32 */
    I32, i32imm_op, 
    /* CONST_I32_S */
    i32imm_op, 
    /* CONST_I64 */
    I64, i64imm_op, 
    /* CONST_I64_S */
    i64imm_op, 
    /* CONST_V128_F32x4 */
    V128, f32imm_op, f32imm_op, f32imm_op, f32imm_op, 
    /* CONST_V128_F32x4_S */
    f32imm_op, f32imm_op, f32imm_op, f32imm_op, 
    /* CONST_V128_F64x2 */
    V128, f64imm_op, f64imm_op, 
    /* CONST_V128_F64x2_S */
    f64imm_op, f64imm_op, 
    /* CONST_V128_I16x8 */
    V128, vec_i16imm_op, vec_i16imm_op, vec_i16imm_op, vec_i16imm_op, vec_i16imm_op, vec_i16imm_op, vec_i16imm_op, vec_i16imm_op, 
    /* CONST_V128_I16x8_S */
    vec_i16imm_op, vec_i16imm_op, vec_i16imm_op, vec_i16imm_op, vec_i16imm_op, vec_i16imm_op, vec_i16imm_op, vec_i16imm_op, 
    /* CONST_V128_I32x4 */
    V128, vec_i32imm_op, vec_i32imm_op, vec_i32imm_op, vec_i32imm_op, 
    /* CONST_V128_I32x4_S */
    vec_i32imm_op, vec_i32imm_op, vec_i32imm_op, vec_i32imm_op, 
    /* CONST_V128_I64x2 */
    V128, vec_i64imm_op, vec_i64imm_op, 
    /* CONST_V128_I64x2_S */
    vec_i64imm_op, vec_i64imm_op, 
    /* CONST_V128_I8x16 */
    V128, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, 
    /* CONST_V128_I8x16_S */
    vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, 
    /* COPYSIGN_F32 */
    F32, F32, F32, 
    /* COPYSIGN_F32_S */
    /* COPYSIGN_F64 */
    F64, F64, F64, 
    /* COPYSIGN_F64_S */
    /* COPY_EXTERNREF */
    EXTERNREF, EXTERNREF, 
    /* COPY_EXTERNREF_S */
    /* COPY_F32 */
    F32, F32, 
    /* COPY_F32_S */
    /* COPY_F64 */
    F64, F64, 
    /* COPY_F64_S */
    /* COPY_FUNCREF */
    FUNCREF, FUNCREF, 
    /* COPY_FUNCREF_S */
    /* COPY_I32 */
    I32, I32, 
    /* COPY_I32_S */
    /* COPY_I64 */
    I64, I64, 
    /* COPY_I64_S */
    /* COPY_V128 */
    V128, V128, 
    /* COPY_V128_S */
    /* CTZ_I32 */
    I32, I32, 
    /* CTZ_I32_S */
    /* CTZ_I64 */
    I64, I64, 
    /* CTZ_I64_S */
    /* DEBUG_UNREACHABLE */
    /* DEBUG_UNREACHABLE_S */
    /* DELEGATE */
    bb_op, 
    /* DELEGATE_S */
    bb_op, 
    /* DIV_F32 */
    F32, F32, F32, 
    /* DIV_F32_S */
    /* DIV_F32x4 */
    V128, V128, V128, 
    /* DIV_F32x4_S */
    /* DIV_F64 */
    F64, F64, F64, 
    /* DIV_F64_S */
    /* DIV_F64x2 */
    V128, V128, V128, 
    /* DIV_F64x2_S */
    /* DIV_S_I32 */
    I32, I32, I32, 
    /* DIV_S_I32_S */
    /* DIV_S_I64 */
    I64, I64, I64, 
    /* DIV_S_I64_S */
    /* DIV_U_I32 */
    I32, I32, I32, 
    /* DIV_U_I32_S */
    /* DIV_U_I64 */
    I64, I64, I64, 
    /* DIV_U_I64_S */
    /* DOT */
    V128, V128, V128, 
    /* DOT_S */
    /* DROP_EXTERNREF */
    EXTERNREF, 
    /* DROP_EXTERNREF_S */
    /* DROP_F32 */
    F32, 
    /* DROP_F32_S */
    /* DROP_F64 */
    F64, 
    /* DROP_F64_S */
    /* DROP_FUNCREF */
    FUNCREF, 
    /* DROP_FUNCREF_S */
    /* DROP_I32 */
    I32, 
    /* DROP_I32_S */
    /* DROP_I64 */
    I64, 
    /* DROP_I64_S */
    /* DROP_V128 */
    V128, 
    /* DROP_V128_S */
    /* ELSE */
    /* ELSE_S */
    /* END */
    /* END_BLOCK */
    /* END_BLOCK_S */
    /* END_FUNCTION */
    /* END_FUNCTION_S */
    /* END_IF */
    /* END_IF_S */
    /* END_LOOP */
    /* END_LOOP_S */
    /* END_S */
    /* END_TRY */
    /* END_TRY_S */
    /* EQZ_I32 */
    I32, I32, 
    /* EQZ_I32_S */
    /* EQZ_I64 */
    I32, I64, 
    /* EQZ_I64_S */
    /* EQ_F32 */
    I32, F32, F32, 
    /* EQ_F32_S */
    /* EQ_F32x4 */
    V128, V128, V128, 
    /* EQ_F32x4_S */
    /* EQ_F64 */
    I32, F64, F64, 
    /* EQ_F64_S */
    /* EQ_F64x2 */
    V128, V128, V128, 
    /* EQ_F64x2_S */
    /* EQ_I16x8 */
    V128, V128, V128, 
    /* EQ_I16x8_S */
    /* EQ_I32 */
    I32, I32, I32, 
    /* EQ_I32_S */
    /* EQ_I32x4 */
    V128, V128, V128, 
    /* EQ_I32x4_S */
    /* EQ_I64 */
    I32, I64, I64, 
    /* EQ_I64_S */
    /* EQ_I64x2 */
    V128, V128, V128, 
    /* EQ_I64x2_S */
    /* EQ_I8x16 */
    V128, V128, V128, 
    /* EQ_I8x16_S */
    /* EXTMUL_HIGH_S_I16x8 */
    V128, V128, V128, 
    /* EXTMUL_HIGH_S_I16x8_S */
    /* EXTMUL_HIGH_S_I32x4 */
    V128, V128, V128, 
    /* EXTMUL_HIGH_S_I32x4_S */
    /* EXTMUL_HIGH_S_I64x2 */
    V128, V128, V128, 
    /* EXTMUL_HIGH_S_I64x2_S */
    /* EXTMUL_HIGH_U_I16x8 */
    V128, V128, V128, 
    /* EXTMUL_HIGH_U_I16x8_S */
    /* EXTMUL_HIGH_U_I32x4 */
    V128, V128, V128, 
    /* EXTMUL_HIGH_U_I32x4_S */
    /* EXTMUL_HIGH_U_I64x2 */
    V128, V128, V128, 
    /* EXTMUL_HIGH_U_I64x2_S */
    /* EXTMUL_LOW_S_I16x8 */
    V128, V128, V128, 
    /* EXTMUL_LOW_S_I16x8_S */
    /* EXTMUL_LOW_S_I32x4 */
    V128, V128, V128, 
    /* EXTMUL_LOW_S_I32x4_S */
    /* EXTMUL_LOW_S_I64x2 */
    V128, V128, V128, 
    /* EXTMUL_LOW_S_I64x2_S */
    /* EXTMUL_LOW_U_I16x8 */
    V128, V128, V128, 
    /* EXTMUL_LOW_U_I16x8_S */
    /* EXTMUL_LOW_U_I32x4 */
    V128, V128, V128, 
    /* EXTMUL_LOW_U_I32x4_S */
    /* EXTMUL_LOW_U_I64x2 */
    V128, V128, V128, 
    /* EXTMUL_LOW_U_I64x2_S */
    /* EXTRACT_LANE_F32x4 */
    F32, V128, vec_i8imm_op, 
    /* EXTRACT_LANE_F32x4_S */
    vec_i8imm_op, 
    /* EXTRACT_LANE_F64x2 */
    F64, V128, vec_i8imm_op, 
    /* EXTRACT_LANE_F64x2_S */
    vec_i8imm_op, 
    /* EXTRACT_LANE_I16x8_s */
    I32, V128, vec_i8imm_op, 
    /* EXTRACT_LANE_I16x8_s_S */
    vec_i8imm_op, 
    /* EXTRACT_LANE_I16x8_u */
    I32, V128, vec_i8imm_op, 
    /* EXTRACT_LANE_I16x8_u_S */
    vec_i8imm_op, 
    /* EXTRACT_LANE_I32x4 */
    I32, V128, vec_i8imm_op, 
    /* EXTRACT_LANE_I32x4_S */
    vec_i8imm_op, 
    /* EXTRACT_LANE_I64x2 */
    I64, V128, vec_i8imm_op, 
    /* EXTRACT_LANE_I64x2_S */
    vec_i8imm_op, 
    /* EXTRACT_LANE_I8x16_s */
    I32, V128, vec_i8imm_op, 
    /* EXTRACT_LANE_I8x16_s_S */
    vec_i8imm_op, 
    /* EXTRACT_LANE_I8x16_u */
    I32, V128, vec_i8imm_op, 
    /* EXTRACT_LANE_I8x16_u_S */
    vec_i8imm_op, 
    /* F32_CONVERT_S_I32 */
    F32, I32, 
    /* F32_CONVERT_S_I32_S */
    /* F32_CONVERT_S_I64 */
    F32, I64, 
    /* F32_CONVERT_S_I64_S */
    /* F32_CONVERT_U_I32 */
    F32, I32, 
    /* F32_CONVERT_U_I32_S */
    /* F32_CONVERT_U_I64 */
    F32, I64, 
    /* F32_CONVERT_U_I64_S */
    /* F32_DEMOTE_F64 */
    F32, F64, 
    /* F32_DEMOTE_F64_S */
    /* F32_REINTERPRET_I32 */
    F32, I32, 
    /* F32_REINTERPRET_I32_S */
    /* F64_CONVERT_S_I32 */
    F64, I32, 
    /* F64_CONVERT_S_I32_S */
    /* F64_CONVERT_S_I64 */
    F64, I64, 
    /* F64_CONVERT_S_I64_S */
    /* F64_CONVERT_U_I32 */
    F64, I32, 
    /* F64_CONVERT_U_I32_S */
    /* F64_CONVERT_U_I64 */
    F64, I64, 
    /* F64_CONVERT_U_I64_S */
    /* F64_PROMOTE_F32 */
    F64, F32, 
    /* F64_PROMOTE_F32_S */
    /* F64_REINTERPRET_I64 */
    F64, I64, 
    /* F64_REINTERPRET_I64_S */
    /* FALLTHROUGH_RETURN */
    /* FALLTHROUGH_RETURN_S */
    /* FLOOR_F32 */
    F32, F32, 
    /* FLOOR_F32_S */
    /* FLOOR_F32x4 */
    V128, V128, 
    /* FLOOR_F32x4_S */
    /* FLOOR_F64 */
    F64, F64, 
    /* FLOOR_F64_S */
    /* FLOOR_F64x2 */
    V128, V128, 
    /* FLOOR_F64x2_S */
    /* FP_TO_SINT_I32_F32 */
    I32, F32, 
    /* FP_TO_SINT_I32_F32_S */
    /* FP_TO_SINT_I32_F64 */
    I32, F64, 
    /* FP_TO_SINT_I32_F64_S */
    /* FP_TO_SINT_I64_F32 */
    I64, F32, 
    /* FP_TO_SINT_I64_F32_S */
    /* FP_TO_SINT_I64_F64 */
    I64, F64, 
    /* FP_TO_SINT_I64_F64_S */
    /* FP_TO_UINT_I32_F32 */
    I32, F32, 
    /* FP_TO_UINT_I32_F32_S */
    /* FP_TO_UINT_I32_F64 */
    I32, F64, 
    /* FP_TO_UINT_I32_F64_S */
    /* FP_TO_UINT_I64_F32 */
    I64, F32, 
    /* FP_TO_UINT_I64_F32_S */
    /* FP_TO_UINT_I64_F64 */
    I64, F64, 
    /* FP_TO_UINT_I64_F64_S */
    /* GE_F32 */
    I32, F32, F32, 
    /* GE_F32_S */
    /* GE_F32x4 */
    V128, V128, V128, 
    /* GE_F32x4_S */
    /* GE_F64 */
    I32, F64, F64, 
    /* GE_F64_S */
    /* GE_F64x2 */
    V128, V128, V128, 
    /* GE_F64x2_S */
    /* GE_S_I16x8 */
    V128, V128, V128, 
    /* GE_S_I16x8_S */
    /* GE_S_I32 */
    I32, I32, I32, 
    /* GE_S_I32_S */
    /* GE_S_I32x4 */
    V128, V128, V128, 
    /* GE_S_I32x4_S */
    /* GE_S_I64 */
    I32, I64, I64, 
    /* GE_S_I64_S */
    /* GE_S_I64x2 */
    V128, V128, V128, 
    /* GE_S_I64x2_S */
    /* GE_S_I8x16 */
    V128, V128, V128, 
    /* GE_S_I8x16_S */
    /* GE_U_I16x8 */
    V128, V128, V128, 
    /* GE_U_I16x8_S */
    /* GE_U_I32 */
    I32, I32, I32, 
    /* GE_U_I32_S */
    /* GE_U_I32x4 */
    V128, V128, V128, 
    /* GE_U_I32x4_S */
    /* GE_U_I64 */
    I32, I64, I64, 
    /* GE_U_I64_S */
    /* GE_U_I8x16 */
    V128, V128, V128, 
    /* GE_U_I8x16_S */
    /* GLOBAL_GET_EXTERNREF */
    EXTERNREF, global_op32, 
    /* GLOBAL_GET_EXTERNREF_S */
    global_op32, 
    /* GLOBAL_GET_F32 */
    F32, global_op32, 
    /* GLOBAL_GET_F32_S */
    global_op32, 
    /* GLOBAL_GET_F64 */
    F64, global_op32, 
    /* GLOBAL_GET_F64_S */
    global_op32, 
    /* GLOBAL_GET_FUNCREF */
    FUNCREF, global_op32, 
    /* GLOBAL_GET_FUNCREF_S */
    global_op32, 
    /* GLOBAL_GET_I32 */
    I32, global_op32, 
    /* GLOBAL_GET_I32_S */
    global_op32, 
    /* GLOBAL_GET_I64 */
    I64, global_op64, 
    /* GLOBAL_GET_I64_S */
    global_op64, 
    /* GLOBAL_GET_V128 */
    V128, global_op32, 
    /* GLOBAL_GET_V128_S */
    global_op32, 
    /* GLOBAL_SET_EXTERNREF */
    global_op32, EXTERNREF, 
    /* GLOBAL_SET_EXTERNREF_S */
    global_op32, 
    /* GLOBAL_SET_F32 */
    global_op32, F32, 
    /* GLOBAL_SET_F32_S */
    global_op32, 
    /* GLOBAL_SET_F64 */
    global_op32, F64, 
    /* GLOBAL_SET_F64_S */
    global_op32, 
    /* GLOBAL_SET_FUNCREF */
    global_op32, FUNCREF, 
    /* GLOBAL_SET_FUNCREF_S */
    global_op32, 
    /* GLOBAL_SET_I32 */
    global_op32, I32, 
    /* GLOBAL_SET_I32_S */
    global_op32, 
    /* GLOBAL_SET_I64 */
    global_op64, I64, 
    /* GLOBAL_SET_I64_S */
    global_op64, 
    /* GLOBAL_SET_V128 */
    global_op32, V128, 
    /* GLOBAL_SET_V128_S */
    global_op32, 
    /* GT_F32 */
    I32, F32, F32, 
    /* GT_F32_S */
    /* GT_F32x4 */
    V128, V128, V128, 
    /* GT_F32x4_S */
    /* GT_F64 */
    I32, F64, F64, 
    /* GT_F64_S */
    /* GT_F64x2 */
    V128, V128, V128, 
    /* GT_F64x2_S */
    /* GT_S_I16x8 */
    V128, V128, V128, 
    /* GT_S_I16x8_S */
    /* GT_S_I32 */
    I32, I32, I32, 
    /* GT_S_I32_S */
    /* GT_S_I32x4 */
    V128, V128, V128, 
    /* GT_S_I32x4_S */
    /* GT_S_I64 */
    I32, I64, I64, 
    /* GT_S_I64_S */
    /* GT_S_I64x2 */
    V128, V128, V128, 
    /* GT_S_I64x2_S */
    /* GT_S_I8x16 */
    V128, V128, V128, 
    /* GT_S_I8x16_S */
    /* GT_U_I16x8 */
    V128, V128, V128, 
    /* GT_U_I16x8_S */
    /* GT_U_I32 */
    I32, I32, I32, 
    /* GT_U_I32_S */
    /* GT_U_I32x4 */
    V128, V128, V128, 
    /* GT_U_I32x4_S */
    /* GT_U_I64 */
    I32, I64, I64, 
    /* GT_U_I64_S */
    /* GT_U_I8x16 */
    V128, V128, V128, 
    /* GT_U_I8x16_S */
    /* I32_EXTEND16_S_I32 */
    I32, I32, 
    /* I32_EXTEND16_S_I32_S */
    /* I32_EXTEND8_S_I32 */
    I32, I32, 
    /* I32_EXTEND8_S_I32_S */
    /* I32_REINTERPRET_F32 */
    I32, F32, 
    /* I32_REINTERPRET_F32_S */
    /* I32_TRUNC_S_F32 */
    I32, F32, 
    /* I32_TRUNC_S_F32_S */
    /* I32_TRUNC_S_F64 */
    I32, F64, 
    /* I32_TRUNC_S_F64_S */
    /* I32_TRUNC_S_SAT_F32 */
    I32, F32, 
    /* I32_TRUNC_S_SAT_F32_S */
    /* I32_TRUNC_S_SAT_F64 */
    I32, F64, 
    /* I32_TRUNC_S_SAT_F64_S */
    /* I32_TRUNC_U_F32 */
    I32, F32, 
    /* I32_TRUNC_U_F32_S */
    /* I32_TRUNC_U_F64 */
    I32, F64, 
    /* I32_TRUNC_U_F64_S */
    /* I32_TRUNC_U_SAT_F32 */
    I32, F32, 
    /* I32_TRUNC_U_SAT_F32_S */
    /* I32_TRUNC_U_SAT_F64 */
    I32, F64, 
    /* I32_TRUNC_U_SAT_F64_S */
    /* I32_WRAP_I64 */
    I32, I64, 
    /* I32_WRAP_I64_S */
    /* I64_EXTEND16_S_I64 */
    I64, I64, 
    /* I64_EXTEND16_S_I64_S */
    /* I64_EXTEND32_S_I64 */
    I64, I64, 
    /* I64_EXTEND32_S_I64_S */
    /* I64_EXTEND8_S_I64 */
    I64, I64, 
    /* I64_EXTEND8_S_I64_S */
    /* I64_EXTEND_S_I32 */
    I64, I32, 
    /* I64_EXTEND_S_I32_S */
    /* I64_EXTEND_U_I32 */
    I64, I32, 
    /* I64_EXTEND_U_I32_S */
    /* I64_REINTERPRET_F64 */
    I64, F64, 
    /* I64_REINTERPRET_F64_S */
    /* I64_TRUNC_S_F32 */
    I64, F32, 
    /* I64_TRUNC_S_F32_S */
    /* I64_TRUNC_S_F64 */
    I64, F64, 
    /* I64_TRUNC_S_F64_S */
    /* I64_TRUNC_S_SAT_F32 */
    I64, F32, 
    /* I64_TRUNC_S_SAT_F32_S */
    /* I64_TRUNC_S_SAT_F64 */
    I64, F64, 
    /* I64_TRUNC_S_SAT_F64_S */
    /* I64_TRUNC_U_F32 */
    I64, F32, 
    /* I64_TRUNC_U_F32_S */
    /* I64_TRUNC_U_F64 */
    I64, F64, 
    /* I64_TRUNC_U_F64_S */
    /* I64_TRUNC_U_SAT_F32 */
    I64, F32, 
    /* I64_TRUNC_U_SAT_F32_S */
    /* I64_TRUNC_U_SAT_F64 */
    I64, F64, 
    /* I64_TRUNC_U_SAT_F64_S */
    /* IF */
    Signature, I32, 
    /* IF_S */
    Signature, 
    /* LANESELECT_I16x8 */
    V128, V128, V128, V128, 
    /* LANESELECT_I16x8_S */
    /* LANESELECT_I32x4 */
    V128, V128, V128, V128, 
    /* LANESELECT_I32x4_S */
    /* LANESELECT_I64x2 */
    V128, V128, V128, V128, 
    /* LANESELECT_I64x2_S */
    /* LANESELECT_I8x16 */
    V128, V128, V128, V128, 
    /* LANESELECT_I8x16_S */
    /* LE_F32 */
    I32, F32, F32, 
    /* LE_F32_S */
    /* LE_F32x4 */
    V128, V128, V128, 
    /* LE_F32x4_S */
    /* LE_F64 */
    I32, F64, F64, 
    /* LE_F64_S */
    /* LE_F64x2 */
    V128, V128, V128, 
    /* LE_F64x2_S */
    /* LE_S_I16x8 */
    V128, V128, V128, 
    /* LE_S_I16x8_S */
    /* LE_S_I32 */
    I32, I32, I32, 
    /* LE_S_I32_S */
    /* LE_S_I32x4 */
    V128, V128, V128, 
    /* LE_S_I32x4_S */
    /* LE_S_I64 */
    I32, I64, I64, 
    /* LE_S_I64_S */
    /* LE_S_I64x2 */
    V128, V128, V128, 
    /* LE_S_I64x2_S */
    /* LE_S_I8x16 */
    V128, V128, V128, 
    /* LE_S_I8x16_S */
    /* LE_U_I16x8 */
    V128, V128, V128, 
    /* LE_U_I16x8_S */
    /* LE_U_I32 */
    I32, I32, I32, 
    /* LE_U_I32_S */
    /* LE_U_I32x4 */
    V128, V128, V128, 
    /* LE_U_I32x4_S */
    /* LE_U_I64 */
    I32, I64, I64, 
    /* LE_U_I64_S */
    /* LE_U_I8x16 */
    V128, V128, V128, 
    /* LE_U_I8x16_S */
    /* LOAD16_SPLAT_A32 */
    V128, P2Align, offset32_op, I32, 
    /* LOAD16_SPLAT_A32_S */
    P2Align, offset32_op, 
    /* LOAD16_SPLAT_A64 */
    V128, P2Align, offset64_op, I64, 
    /* LOAD16_SPLAT_A64_S */
    P2Align, offset64_op, 
    /* LOAD16_S_I32_A32 */
    I32, P2Align, offset32_op, I32, 
    /* LOAD16_S_I32_A32_S */
    P2Align, offset32_op, 
    /* LOAD16_S_I32_A64 */
    I32, P2Align, offset64_op, I64, 
    /* LOAD16_S_I32_A64_S */
    P2Align, offset64_op, 
    /* LOAD16_S_I64_A32 */
    I64, P2Align, offset32_op, I32, 
    /* LOAD16_S_I64_A32_S */
    P2Align, offset32_op, 
    /* LOAD16_S_I64_A64 */
    I64, P2Align, offset64_op, I64, 
    /* LOAD16_S_I64_A64_S */
    P2Align, offset64_op, 
    /* LOAD16_U_I32_A32 */
    I32, P2Align, offset32_op, I32, 
    /* LOAD16_U_I32_A32_S */
    P2Align, offset32_op, 
    /* LOAD16_U_I32_A64 */
    I32, P2Align, offset64_op, I64, 
    /* LOAD16_U_I32_A64_S */
    P2Align, offset64_op, 
    /* LOAD16_U_I64_A32 */
    I64, P2Align, offset32_op, I32, 
    /* LOAD16_U_I64_A32_S */
    P2Align, offset32_op, 
    /* LOAD16_U_I64_A64 */
    I64, P2Align, offset64_op, I64, 
    /* LOAD16_U_I64_A64_S */
    P2Align, offset64_op, 
    /* LOAD32_SPLAT_A32 */
    V128, P2Align, offset32_op, I32, 
    /* LOAD32_SPLAT_A32_S */
    P2Align, offset32_op, 
    /* LOAD32_SPLAT_A64 */
    V128, P2Align, offset64_op, I64, 
    /* LOAD32_SPLAT_A64_S */
    P2Align, offset64_op, 
    /* LOAD32_S_I64_A32 */
    I64, P2Align, offset32_op, I32, 
    /* LOAD32_S_I64_A32_S */
    P2Align, offset32_op, 
    /* LOAD32_S_I64_A64 */
    I64, P2Align, offset64_op, I64, 
    /* LOAD32_S_I64_A64_S */
    P2Align, offset64_op, 
    /* LOAD32_U_I64_A32 */
    I64, P2Align, offset32_op, I32, 
    /* LOAD32_U_I64_A32_S */
    P2Align, offset32_op, 
    /* LOAD32_U_I64_A64 */
    I64, P2Align, offset64_op, I64, 
    /* LOAD32_U_I64_A64_S */
    P2Align, offset64_op, 
    /* LOAD64_SPLAT_A32 */
    V128, P2Align, offset32_op, I32, 
    /* LOAD64_SPLAT_A32_S */
    P2Align, offset32_op, 
    /* LOAD64_SPLAT_A64 */
    V128, P2Align, offset64_op, I64, 
    /* LOAD64_SPLAT_A64_S */
    P2Align, offset64_op, 
    /* LOAD8_SPLAT_A32 */
    V128, P2Align, offset32_op, I32, 
    /* LOAD8_SPLAT_A32_S */
    P2Align, offset32_op, 
    /* LOAD8_SPLAT_A64 */
    V128, P2Align, offset64_op, I64, 
    /* LOAD8_SPLAT_A64_S */
    P2Align, offset64_op, 
    /* LOAD8_S_I32_A32 */
    I32, P2Align, offset32_op, I32, 
    /* LOAD8_S_I32_A32_S */
    P2Align, offset32_op, 
    /* LOAD8_S_I32_A64 */
    I32, P2Align, offset64_op, I64, 
    /* LOAD8_S_I32_A64_S */
    P2Align, offset64_op, 
    /* LOAD8_S_I64_A32 */
    I64, P2Align, offset32_op, I32, 
    /* LOAD8_S_I64_A32_S */
    P2Align, offset32_op, 
    /* LOAD8_S_I64_A64 */
    I64, P2Align, offset64_op, I64, 
    /* LOAD8_S_I64_A64_S */
    P2Align, offset64_op, 
    /* LOAD8_U_I32_A32 */
    I32, P2Align, offset32_op, I32, 
    /* LOAD8_U_I32_A32_S */
    P2Align, offset32_op, 
    /* LOAD8_U_I32_A64 */
    I32, P2Align, offset64_op, I64, 
    /* LOAD8_U_I32_A64_S */
    P2Align, offset64_op, 
    /* LOAD8_U_I64_A32 */
    I64, P2Align, offset32_op, I32, 
    /* LOAD8_U_I64_A32_S */
    P2Align, offset32_op, 
    /* LOAD8_U_I64_A64 */
    I64, P2Align, offset64_op, I64, 
    /* LOAD8_U_I64_A64_S */
    P2Align, offset64_op, 
    /* LOAD_EXTEND_S_I16x8_A32 */
    V128, P2Align, offset32_op, I32, 
    /* LOAD_EXTEND_S_I16x8_A32_S */
    P2Align, offset32_op, 
    /* LOAD_EXTEND_S_I16x8_A64 */
    V128, P2Align, offset64_op, I64, 
    /* LOAD_EXTEND_S_I16x8_A64_S */
    P2Align, offset64_op, 
    /* LOAD_EXTEND_S_I32x4_A32 */
    V128, P2Align, offset32_op, I32, 
    /* LOAD_EXTEND_S_I32x4_A32_S */
    P2Align, offset32_op, 
    /* LOAD_EXTEND_S_I32x4_A64 */
    V128, P2Align, offset64_op, I64, 
    /* LOAD_EXTEND_S_I32x4_A64_S */
    P2Align, offset64_op, 
    /* LOAD_EXTEND_S_I64x2_A32 */
    V128, P2Align, offset32_op, I32, 
    /* LOAD_EXTEND_S_I64x2_A32_S */
    P2Align, offset32_op, 
    /* LOAD_EXTEND_S_I64x2_A64 */
    V128, P2Align, offset64_op, I64, 
    /* LOAD_EXTEND_S_I64x2_A64_S */
    P2Align, offset64_op, 
    /* LOAD_EXTEND_U_I16x8_A32 */
    V128, P2Align, offset32_op, I32, 
    /* LOAD_EXTEND_U_I16x8_A32_S */
    P2Align, offset32_op, 
    /* LOAD_EXTEND_U_I16x8_A64 */
    V128, P2Align, offset64_op, I64, 
    /* LOAD_EXTEND_U_I16x8_A64_S */
    P2Align, offset64_op, 
    /* LOAD_EXTEND_U_I32x4_A32 */
    V128, P2Align, offset32_op, I32, 
    /* LOAD_EXTEND_U_I32x4_A32_S */
    P2Align, offset32_op, 
    /* LOAD_EXTEND_U_I32x4_A64 */
    V128, P2Align, offset64_op, I64, 
    /* LOAD_EXTEND_U_I32x4_A64_S */
    P2Align, offset64_op, 
    /* LOAD_EXTEND_U_I64x2_A32 */
    V128, P2Align, offset32_op, I32, 
    /* LOAD_EXTEND_U_I64x2_A32_S */
    P2Align, offset32_op, 
    /* LOAD_EXTEND_U_I64x2_A64 */
    V128, P2Align, offset64_op, I64, 
    /* LOAD_EXTEND_U_I64x2_A64_S */
    P2Align, offset64_op, 
    /* LOAD_F32_A32 */
    F32, P2Align, offset32_op, I32, 
    /* LOAD_F32_A32_S */
    P2Align, offset32_op, 
    /* LOAD_F32_A64 */
    F32, P2Align, offset64_op, I64, 
    /* LOAD_F32_A64_S */
    P2Align, offset64_op, 
    /* LOAD_F64_A32 */
    F64, P2Align, offset32_op, I32, 
    /* LOAD_F64_A32_S */
    P2Align, offset32_op, 
    /* LOAD_F64_A64 */
    F64, P2Align, offset64_op, I64, 
    /* LOAD_F64_A64_S */
    P2Align, offset64_op, 
    /* LOAD_I32_A32 */
    I32, P2Align, offset32_op, I32, 
    /* LOAD_I32_A32_S */
    P2Align, offset32_op, 
    /* LOAD_I32_A64 */
    I32, P2Align, offset64_op, I64, 
    /* LOAD_I32_A64_S */
    P2Align, offset64_op, 
    /* LOAD_I64_A32 */
    I64, P2Align, offset32_op, I32, 
    /* LOAD_I64_A32_S */
    P2Align, offset32_op, 
    /* LOAD_I64_A64 */
    I64, P2Align, offset64_op, I64, 
    /* LOAD_I64_A64_S */
    P2Align, offset64_op, 
    /* LOAD_LANE_I16x8_A32 */
    V128, P2Align, offset32_op, vec_i8imm_op, I32, V128, 
    /* LOAD_LANE_I16x8_A32_S */
    P2Align, offset32_op, vec_i8imm_op, 
    /* LOAD_LANE_I16x8_A64 */
    V128, P2Align, offset64_op, vec_i8imm_op, I64, V128, 
    /* LOAD_LANE_I16x8_A64_S */
    P2Align, offset64_op, vec_i8imm_op, 
    /* LOAD_LANE_I32x4_A32 */
    V128, P2Align, offset32_op, vec_i8imm_op, I32, V128, 
    /* LOAD_LANE_I32x4_A32_S */
    P2Align, offset32_op, vec_i8imm_op, 
    /* LOAD_LANE_I32x4_A64 */
    V128, P2Align, offset64_op, vec_i8imm_op, I64, V128, 
    /* LOAD_LANE_I32x4_A64_S */
    P2Align, offset64_op, vec_i8imm_op, 
    /* LOAD_LANE_I64x2_A32 */
    V128, P2Align, offset32_op, vec_i8imm_op, I32, V128, 
    /* LOAD_LANE_I64x2_A32_S */
    P2Align, offset32_op, vec_i8imm_op, 
    /* LOAD_LANE_I64x2_A64 */
    V128, P2Align, offset64_op, vec_i8imm_op, I64, V128, 
    /* LOAD_LANE_I64x2_A64_S */
    P2Align, offset64_op, vec_i8imm_op, 
    /* LOAD_LANE_I8x16_A32 */
    V128, P2Align, offset32_op, vec_i8imm_op, I32, V128, 
    /* LOAD_LANE_I8x16_A32_S */
    P2Align, offset32_op, vec_i8imm_op, 
    /* LOAD_LANE_I8x16_A64 */
    V128, P2Align, offset64_op, vec_i8imm_op, I64, V128, 
    /* LOAD_LANE_I8x16_A64_S */
    P2Align, offset64_op, vec_i8imm_op, 
    /* LOAD_V128_A32 */
    V128, P2Align, offset32_op, I32, 
    /* LOAD_V128_A32_S */
    P2Align, offset32_op, 
    /* LOAD_V128_A64 */
    V128, P2Align, offset64_op, I64, 
    /* LOAD_V128_A64_S */
    P2Align, offset64_op, 
    /* LOAD_ZERO_I32x4_A32 */
    V128, P2Align, offset32_op, I32, 
    /* LOAD_ZERO_I32x4_A32_S */
    P2Align, offset32_op, 
    /* LOAD_ZERO_I32x4_A64 */
    V128, P2Align, offset64_op, I64, 
    /* LOAD_ZERO_I32x4_A64_S */
    P2Align, offset64_op, 
    /* LOAD_ZERO_I64x2_A32 */
    V128, P2Align, offset32_op, I32, 
    /* LOAD_ZERO_I64x2_A32_S */
    P2Align, offset32_op, 
    /* LOAD_ZERO_I64x2_A64 */
    V128, P2Align, offset64_op, I64, 
    /* LOAD_ZERO_I64x2_A64_S */
    P2Align, offset64_op, 
    /* LOCAL_GET_EXTERNREF */
    EXTERNREF, local_op, 
    /* LOCAL_GET_EXTERNREF_S */
    local_op, 
    /* LOCAL_GET_F32 */
    F32, local_op, 
    /* LOCAL_GET_F32_S */
    local_op, 
    /* LOCAL_GET_F64 */
    F64, local_op, 
    /* LOCAL_GET_F64_S */
    local_op, 
    /* LOCAL_GET_FUNCREF */
    FUNCREF, local_op, 
    /* LOCAL_GET_FUNCREF_S */
    local_op, 
    /* LOCAL_GET_I32 */
    I32, local_op, 
    /* LOCAL_GET_I32_S */
    local_op, 
    /* LOCAL_GET_I64 */
    I64, local_op, 
    /* LOCAL_GET_I64_S */
    local_op, 
    /* LOCAL_GET_V128 */
    V128, local_op, 
    /* LOCAL_GET_V128_S */
    local_op, 
    /* LOCAL_SET_EXTERNREF */
    local_op, EXTERNREF, 
    /* LOCAL_SET_EXTERNREF_S */
    local_op, 
    /* LOCAL_SET_F32 */
    local_op, F32, 
    /* LOCAL_SET_F32_S */
    local_op, 
    /* LOCAL_SET_F64 */
    local_op, F64, 
    /* LOCAL_SET_F64_S */
    local_op, 
    /* LOCAL_SET_FUNCREF */
    local_op, FUNCREF, 
    /* LOCAL_SET_FUNCREF_S */
    local_op, 
    /* LOCAL_SET_I32 */
    local_op, I32, 
    /* LOCAL_SET_I32_S */
    local_op, 
    /* LOCAL_SET_I64 */
    local_op, I64, 
    /* LOCAL_SET_I64_S */
    local_op, 
    /* LOCAL_SET_V128 */
    local_op, V128, 
    /* LOCAL_SET_V128_S */
    local_op, 
    /* LOCAL_TEE_EXTERNREF */
    EXTERNREF, local_op, EXTERNREF, 
    /* LOCAL_TEE_EXTERNREF_S */
    local_op, 
    /* LOCAL_TEE_F32 */
    F32, local_op, F32, 
    /* LOCAL_TEE_F32_S */
    local_op, 
    /* LOCAL_TEE_F64 */
    F64, local_op, F64, 
    /* LOCAL_TEE_F64_S */
    local_op, 
    /* LOCAL_TEE_FUNCREF */
    FUNCREF, local_op, FUNCREF, 
    /* LOCAL_TEE_FUNCREF_S */
    local_op, 
    /* LOCAL_TEE_I32 */
    I32, local_op, I32, 
    /* LOCAL_TEE_I32_S */
    local_op, 
    /* LOCAL_TEE_I64 */
    I64, local_op, I64, 
    /* LOCAL_TEE_I64_S */
    local_op, 
    /* LOCAL_TEE_V128 */
    V128, local_op, V128, 
    /* LOCAL_TEE_V128_S */
    local_op, 
    /* LOOP */
    Signature, 
    /* LOOP_S */
    Signature, 
    /* LT_F32 */
    I32, F32, F32, 
    /* LT_F32_S */
    /* LT_F32x4 */
    V128, V128, V128, 
    /* LT_F32x4_S */
    /* LT_F64 */
    I32, F64, F64, 
    /* LT_F64_S */
    /* LT_F64x2 */
    V128, V128, V128, 
    /* LT_F64x2_S */
    /* LT_S_I16x8 */
    V128, V128, V128, 
    /* LT_S_I16x8_S */
    /* LT_S_I32 */
    I32, I32, I32, 
    /* LT_S_I32_S */
    /* LT_S_I32x4 */
    V128, V128, V128, 
    /* LT_S_I32x4_S */
    /* LT_S_I64 */
    I32, I64, I64, 
    /* LT_S_I64_S */
    /* LT_S_I64x2 */
    V128, V128, V128, 
    /* LT_S_I64x2_S */
    /* LT_S_I8x16 */
    V128, V128, V128, 
    /* LT_S_I8x16_S */
    /* LT_U_I16x8 */
    V128, V128, V128, 
    /* LT_U_I16x8_S */
    /* LT_U_I32 */
    I32, I32, I32, 
    /* LT_U_I32_S */
    /* LT_U_I32x4 */
    V128, V128, V128, 
    /* LT_U_I32x4_S */
    /* LT_U_I64 */
    I32, I64, I64, 
    /* LT_U_I64_S */
    /* LT_U_I8x16 */
    V128, V128, V128, 
    /* LT_U_I8x16_S */
    /* MADD_F32x4 */
    V128, V128, V128, V128, 
    /* MADD_F32x4_S */
    /* MADD_F64x2 */
    V128, V128, V128, V128, 
    /* MADD_F64x2_S */
    /* MAX_F32 */
    F32, F32, F32, 
    /* MAX_F32_S */
    /* MAX_F32x4 */
    V128, V128, V128, 
    /* MAX_F32x4_S */
    /* MAX_F64 */
    F64, F64, F64, 
    /* MAX_F64_S */
    /* MAX_F64x2 */
    V128, V128, V128, 
    /* MAX_F64x2_S */
    /* MAX_S_I16x8 */
    V128, V128, V128, 
    /* MAX_S_I16x8_S */
    /* MAX_S_I32x4 */
    V128, V128, V128, 
    /* MAX_S_I32x4_S */
    /* MAX_S_I8x16 */
    V128, V128, V128, 
    /* MAX_S_I8x16_S */
    /* MAX_U_I16x8 */
    V128, V128, V128, 
    /* MAX_U_I16x8_S */
    /* MAX_U_I32x4 */
    V128, V128, V128, 
    /* MAX_U_I32x4_S */
    /* MAX_U_I8x16 */
    V128, V128, V128, 
    /* MAX_U_I8x16_S */
    /* MEMORY_ATOMIC_NOTIFY_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* MEMORY_ATOMIC_NOTIFY_A32_S */
    P2Align, offset32_op, 
    /* MEMORY_ATOMIC_NOTIFY_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* MEMORY_ATOMIC_NOTIFY_A64_S */
    P2Align, offset64_op, 
    /* MEMORY_ATOMIC_WAIT32_A32 */
    I32, P2Align, offset32_op, I32, I32, I64, 
    /* MEMORY_ATOMIC_WAIT32_A32_S */
    P2Align, offset32_op, 
    /* MEMORY_ATOMIC_WAIT32_A64 */
    I32, P2Align, offset64_op, I64, I32, I64, 
    /* MEMORY_ATOMIC_WAIT32_A64_S */
    P2Align, offset64_op, 
    /* MEMORY_ATOMIC_WAIT64_A32 */
    I32, P2Align, offset32_op, I32, I64, I64, 
    /* MEMORY_ATOMIC_WAIT64_A32_S */
    P2Align, offset32_op, 
    /* MEMORY_ATOMIC_WAIT64_A64 */
    I32, P2Align, offset64_op, I64, I64, I64, 
    /* MEMORY_ATOMIC_WAIT64_A64_S */
    P2Align, offset64_op, 
    /* MIN_F32 */
    F32, F32, F32, 
    /* MIN_F32_S */
    /* MIN_F32x4 */
    V128, V128, V128, 
    /* MIN_F32x4_S */
    /* MIN_F64 */
    F64, F64, F64, 
    /* MIN_F64_S */
    /* MIN_F64x2 */
    V128, V128, V128, 
    /* MIN_F64x2_S */
    /* MIN_S_I16x8 */
    V128, V128, V128, 
    /* MIN_S_I16x8_S */
    /* MIN_S_I32x4 */
    V128, V128, V128, 
    /* MIN_S_I32x4_S */
    /* MIN_S_I8x16 */
    V128, V128, V128, 
    /* MIN_S_I8x16_S */
    /* MIN_U_I16x8 */
    V128, V128, V128, 
    /* MIN_U_I16x8_S */
    /* MIN_U_I32x4 */
    V128, V128, V128, 
    /* MIN_U_I32x4_S */
    /* MIN_U_I8x16 */
    V128, V128, V128, 
    /* MIN_U_I8x16_S */
    /* MUL_F32 */
    F32, F32, F32, 
    /* MUL_F32_S */
    /* MUL_F32x4 */
    V128, V128, V128, 
    /* MUL_F32x4_S */
    /* MUL_F64 */
    F64, F64, F64, 
    /* MUL_F64_S */
    /* MUL_F64x2 */
    V128, V128, V128, 
    /* MUL_F64x2_S */
    /* MUL_I16x8 */
    V128, V128, V128, 
    /* MUL_I16x8_S */
    /* MUL_I32 */
    I32, I32, I32, 
    /* MUL_I32_S */
    /* MUL_I32x4 */
    V128, V128, V128, 
    /* MUL_I32x4_S */
    /* MUL_I64 */
    I64, I64, I64, 
    /* MUL_I64_S */
    /* MUL_I64x2 */
    V128, V128, V128, 
    /* MUL_I64x2_S */
    /* NARROW_S_I16x8 */
    V128, V128, V128, 
    /* NARROW_S_I16x8_S */
    /* NARROW_S_I8x16 */
    V128, V128, V128, 
    /* NARROW_S_I8x16_S */
    /* NARROW_U_I16x8 */
    V128, V128, V128, 
    /* NARROW_U_I16x8_S */
    /* NARROW_U_I8x16 */
    V128, V128, V128, 
    /* NARROW_U_I8x16_S */
    /* NEAREST_F32 */
    F32, F32, 
    /* NEAREST_F32_S */
    /* NEAREST_F32x4 */
    V128, V128, 
    /* NEAREST_F32x4_S */
    /* NEAREST_F64 */
    F64, F64, 
    /* NEAREST_F64_S */
    /* NEAREST_F64x2 */
    V128, V128, 
    /* NEAREST_F64x2_S */
    /* NEG_F32 */
    F32, F32, 
    /* NEG_F32_S */
    /* NEG_F32x4 */
    V128, V128, 
    /* NEG_F32x4_S */
    /* NEG_F64 */
    F64, F64, 
    /* NEG_F64_S */
    /* NEG_F64x2 */
    V128, V128, 
    /* NEG_F64x2_S */
    /* NEG_I16x8 */
    V128, V128, 
    /* NEG_I16x8_S */
    /* NEG_I32x4 */
    V128, V128, 
    /* NEG_I32x4_S */
    /* NEG_I64x2 */
    V128, V128, 
    /* NEG_I64x2_S */
    /* NEG_I8x16 */
    V128, V128, 
    /* NEG_I8x16_S */
    /* NE_F32 */
    I32, F32, F32, 
    /* NE_F32_S */
    /* NE_F32x4 */
    V128, V128, V128, 
    /* NE_F32x4_S */
    /* NE_F64 */
    I32, F64, F64, 
    /* NE_F64_S */
    /* NE_F64x2 */
    V128, V128, V128, 
    /* NE_F64x2_S */
    /* NE_I16x8 */
    V128, V128, V128, 
    /* NE_I16x8_S */
    /* NE_I32 */
    I32, I32, I32, 
    /* NE_I32_S */
    /* NE_I32x4 */
    V128, V128, V128, 
    /* NE_I32x4_S */
    /* NE_I64 */
    I32, I64, I64, 
    /* NE_I64_S */
    /* NE_I64x2 */
    V128, V128, V128, 
    /* NE_I64x2_S */
    /* NE_I8x16 */
    V128, V128, V128, 
    /* NE_I8x16_S */
    /* NMADD_F32x4 */
    V128, V128, V128, V128, 
    /* NMADD_F32x4_S */
    /* NMADD_F64x2 */
    V128, V128, V128, V128, 
    /* NMADD_F64x2_S */
    /* NOP */
    /* NOP_S */
    /* NOT */
    V128, V128, 
    /* NOT_S */
    /* OR */
    V128, V128, V128, 
    /* OR_I32 */
    I32, I32, I32, 
    /* OR_I32_S */
    /* OR_I64 */
    I64, I64, I64, 
    /* OR_I64_S */
    /* OR_S */
    /* PMAX_F32x4 */
    V128, V128, V128, 
    /* PMAX_F32x4_S */
    /* PMAX_F64x2 */
    V128, V128, V128, 
    /* PMAX_F64x2_S */
    /* PMIN_F32x4 */
    V128, V128, V128, 
    /* PMIN_F32x4_S */
    /* PMIN_F64x2 */
    V128, V128, V128, 
    /* PMIN_F64x2_S */
    /* POPCNT_I32 */
    I32, I32, 
    /* POPCNT_I32_S */
    /* POPCNT_I64 */
    I64, I64, 
    /* POPCNT_I64_S */
    /* POPCNT_I8x16 */
    V128, V128, 
    /* POPCNT_I8x16_S */
    /* Q15MULR_SAT_S_I16x8 */
    V128, V128, V128, 
    /* Q15MULR_SAT_S_I16x8_S */
    /* REF_IS_NULL_EXTERNREF */
    I32, EXTERNREF, 
    /* REF_IS_NULL_EXTERNREF_S */
    /* REF_IS_NULL_FUNCREF */
    I32, FUNCREF, 
    /* REF_IS_NULL_FUNCREF_S */
    /* REF_NULL_EXTERNREF */
    EXTERNREF, 
    /* REF_NULL_EXTERNREF_S */
    /* REF_NULL_FUNCREF */
    FUNCREF, 
    /* REF_NULL_FUNCREF_S */
    /* RELAXED_DOT */
    V128, V128, V128, 
    /* RELAXED_DOT_ADD */
    V128, V128, V128, V128, 
    /* RELAXED_DOT_ADD_S */
    /* RELAXED_DOT_BFLOAT */
    V128, V128, V128, V128, 
    /* RELAXED_DOT_BFLOAT_S */
    /* RELAXED_DOT_S */
    /* RELAXED_Q15MULR_S_I16x8 */
    V128, V128, V128, 
    /* RELAXED_Q15MULR_S_I16x8_S */
    /* RELAXED_SWIZZLE */
    V128, V128, V128, 
    /* RELAXED_SWIZZLE_S */
    /* REM_S_I32 */
    I32, I32, I32, 
    /* REM_S_I32_S */
    /* REM_S_I64 */
    I64, I64, I64, 
    /* REM_S_I64_S */
    /* REM_U_I32 */
    I32, I32, I32, 
    /* REM_U_I32_S */
    /* REM_U_I64 */
    I64, I64, I64, 
    /* REM_U_I64_S */
    /* REPLACE_LANE_F32x4 */
    V128, V128, vec_i8imm_op, F32, 
    /* REPLACE_LANE_F32x4_S */
    vec_i8imm_op, 
    /* REPLACE_LANE_F64x2 */
    V128, V128, vec_i8imm_op, F64, 
    /* REPLACE_LANE_F64x2_S */
    vec_i8imm_op, 
    /* REPLACE_LANE_I16x8 */
    V128, V128, vec_i8imm_op, I32, 
    /* REPLACE_LANE_I16x8_S */
    vec_i8imm_op, 
    /* REPLACE_LANE_I32x4 */
    V128, V128, vec_i8imm_op, I32, 
    /* REPLACE_LANE_I32x4_S */
    vec_i8imm_op, 
    /* REPLACE_LANE_I64x2 */
    V128, V128, vec_i8imm_op, I64, 
    /* REPLACE_LANE_I64x2_S */
    vec_i8imm_op, 
    /* REPLACE_LANE_I8x16 */
    V128, V128, vec_i8imm_op, I32, 
    /* REPLACE_LANE_I8x16_S */
    vec_i8imm_op, 
    /* RETHROW */
    i32imm, 
    /* RETHROW_S */
    i32imm, 
    /* RETURN */
    /* RETURN_S */
    /* RET_CALL */
    function32_op, 
    /* RET_CALL_INDIRECT */
    TypeIndex, table32_op, 
    /* RET_CALL_INDIRECT_S */
    TypeIndex, table32_op, 
    /* RET_CALL_S */
    function32_op, 
    /* ROTL_I32 */
    I32, I32, I32, 
    /* ROTL_I32_S */
    /* ROTL_I64 */
    I64, I64, I64, 
    /* ROTL_I64_S */
    /* ROTR_I32 */
    I32, I32, I32, 
    /* ROTR_I32_S */
    /* ROTR_I64 */
    I64, I64, I64, 
    /* ROTR_I64_S */
    /* SELECT_EXTERNREF */
    EXTERNREF, EXTERNREF, EXTERNREF, I32, 
    /* SELECT_EXTERNREF_S */
    /* SELECT_F32 */
    F32, F32, F32, I32, 
    /* SELECT_F32_S */
    /* SELECT_F64 */
    F64, F64, F64, I32, 
    /* SELECT_F64_S */
    /* SELECT_FUNCREF */
    FUNCREF, FUNCREF, FUNCREF, I32, 
    /* SELECT_FUNCREF_S */
    /* SELECT_I32 */
    I32, I32, I32, I32, 
    /* SELECT_I32_S */
    /* SELECT_I64 */
    I64, I64, I64, I32, 
    /* SELECT_I64_S */
    /* SELECT_V128 */
    V128, V128, V128, I32, 
    /* SELECT_V128_S */
    /* SHL_I16x8 */
    V128, V128, I32, 
    /* SHL_I16x8_S */
    /* SHL_I32 */
    I32, I32, I32, 
    /* SHL_I32_S */
    /* SHL_I32x4 */
    V128, V128, I32, 
    /* SHL_I32x4_S */
    /* SHL_I64 */
    I64, I64, I64, 
    /* SHL_I64_S */
    /* SHL_I64x2 */
    V128, V128, I32, 
    /* SHL_I64x2_S */
    /* SHL_I8x16 */
    V128, V128, I32, 
    /* SHL_I8x16_S */
    /* SHR_S_I16x8 */
    V128, V128, I32, 
    /* SHR_S_I16x8_S */
    /* SHR_S_I32 */
    I32, I32, I32, 
    /* SHR_S_I32_S */
    /* SHR_S_I32x4 */
    V128, V128, I32, 
    /* SHR_S_I32x4_S */
    /* SHR_S_I64 */
    I64, I64, I64, 
    /* SHR_S_I64_S */
    /* SHR_S_I64x2 */
    V128, V128, I32, 
    /* SHR_S_I64x2_S */
    /* SHR_S_I8x16 */
    V128, V128, I32, 
    /* SHR_S_I8x16_S */
    /* SHR_U_I16x8 */
    V128, V128, I32, 
    /* SHR_U_I16x8_S */
    /* SHR_U_I32 */
    I32, I32, I32, 
    /* SHR_U_I32_S */
    /* SHR_U_I32x4 */
    V128, V128, I32, 
    /* SHR_U_I32x4_S */
    /* SHR_U_I64 */
    I64, I64, I64, 
    /* SHR_U_I64_S */
    /* SHR_U_I64x2 */
    V128, V128, I32, 
    /* SHR_U_I64x2_S */
    /* SHR_U_I8x16 */
    V128, V128, I32, 
    /* SHR_U_I8x16_S */
    /* SHUFFLE */
    V128, V128, V128, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, 
    /* SHUFFLE_S */
    vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, 
    /* SIMD_RELAXED_FMAX_F32x4 */
    V128, V128, V128, 
    /* SIMD_RELAXED_FMAX_F32x4_S */
    /* SIMD_RELAXED_FMAX_F64x2 */
    V128, V128, V128, 
    /* SIMD_RELAXED_FMAX_F64x2_S */
    /* SIMD_RELAXED_FMIN_F32x4 */
    V128, V128, V128, 
    /* SIMD_RELAXED_FMIN_F32x4_S */
    /* SIMD_RELAXED_FMIN_F64x2 */
    V128, V128, V128, 
    /* SIMD_RELAXED_FMIN_F64x2_S */
    /* SPLAT_F32x4 */
    V128, F32, 
    /* SPLAT_F32x4_S */
    /* SPLAT_F64x2 */
    V128, F64, 
    /* SPLAT_F64x2_S */
    /* SPLAT_I16x8 */
    V128, I32, 
    /* SPLAT_I16x8_S */
    /* SPLAT_I32x4 */
    V128, I32, 
    /* SPLAT_I32x4_S */
    /* SPLAT_I64x2 */
    V128, I64, 
    /* SPLAT_I64x2_S */
    /* SPLAT_I8x16 */
    V128, I32, 
    /* SPLAT_I8x16_S */
    /* SQRT_F32 */
    F32, F32, 
    /* SQRT_F32_S */
    /* SQRT_F32x4 */
    V128, V128, 
    /* SQRT_F32x4_S */
    /* SQRT_F64 */
    F64, F64, 
    /* SQRT_F64_S */
    /* SQRT_F64x2 */
    V128, V128, 
    /* SQRT_F64x2_S */
    /* STORE16_I32_A32 */
    P2Align, offset32_op, I32, I32, 
    /* STORE16_I32_A32_S */
    P2Align, offset32_op, 
    /* STORE16_I32_A64 */
    P2Align, offset64_op, I64, I32, 
    /* STORE16_I32_A64_S */
    P2Align, offset64_op, 
    /* STORE16_I64_A32 */
    P2Align, offset32_op, I32, I64, 
    /* STORE16_I64_A32_S */
    P2Align, offset32_op, 
    /* STORE16_I64_A64 */
    P2Align, offset64_op, I64, I64, 
    /* STORE16_I64_A64_S */
    P2Align, offset64_op, 
    /* STORE32_I64_A32 */
    P2Align, offset32_op, I32, I64, 
    /* STORE32_I64_A32_S */
    P2Align, offset32_op, 
    /* STORE32_I64_A64 */
    P2Align, offset64_op, I64, I64, 
    /* STORE32_I64_A64_S */
    P2Align, offset64_op, 
    /* STORE8_I32_A32 */
    P2Align, offset32_op, I32, I32, 
    /* STORE8_I32_A32_S */
    P2Align, offset32_op, 
    /* STORE8_I32_A64 */
    P2Align, offset64_op, I64, I32, 
    /* STORE8_I32_A64_S */
    P2Align, offset64_op, 
    /* STORE8_I64_A32 */
    P2Align, offset32_op, I32, I64, 
    /* STORE8_I64_A32_S */
    P2Align, offset32_op, 
    /* STORE8_I64_A64 */
    P2Align, offset64_op, I64, I64, 
    /* STORE8_I64_A64_S */
    P2Align, offset64_op, 
    /* STORE_F32_A32 */
    P2Align, offset32_op, I32, F32, 
    /* STORE_F32_A32_S */
    P2Align, offset32_op, 
    /* STORE_F32_A64 */
    P2Align, offset64_op, I64, F32, 
    /* STORE_F32_A64_S */
    P2Align, offset64_op, 
    /* STORE_F64_A32 */
    P2Align, offset32_op, I32, F64, 
    /* STORE_F64_A32_S */
    P2Align, offset32_op, 
    /* STORE_F64_A64 */
    P2Align, offset64_op, I64, F64, 
    /* STORE_F64_A64_S */
    P2Align, offset64_op, 
    /* STORE_I32_A32 */
    P2Align, offset32_op, I32, I32, 
    /* STORE_I32_A32_S */
    P2Align, offset32_op, 
    /* STORE_I32_A64 */
    P2Align, offset64_op, I64, I32, 
    /* STORE_I32_A64_S */
    P2Align, offset64_op, 
    /* STORE_I64_A32 */
    P2Align, offset32_op, I32, I64, 
    /* STORE_I64_A32_S */
    P2Align, offset32_op, 
    /* STORE_I64_A64 */
    P2Align, offset64_op, I64, I64, 
    /* STORE_I64_A64_S */
    P2Align, offset64_op, 
    /* STORE_LANE_I16x8_A32 */
    P2Align, offset32_op, vec_i8imm_op, I32, V128, 
    /* STORE_LANE_I16x8_A32_S */
    P2Align, offset32_op, vec_i8imm_op, 
    /* STORE_LANE_I16x8_A64 */
    P2Align, offset64_op, vec_i8imm_op, I64, V128, 
    /* STORE_LANE_I16x8_A64_S */
    P2Align, offset64_op, vec_i8imm_op, 
    /* STORE_LANE_I32x4_A32 */
    P2Align, offset32_op, vec_i8imm_op, I32, V128, 
    /* STORE_LANE_I32x4_A32_S */
    P2Align, offset32_op, vec_i8imm_op, 
    /* STORE_LANE_I32x4_A64 */
    P2Align, offset64_op, vec_i8imm_op, I64, V128, 
    /* STORE_LANE_I32x4_A64_S */
    P2Align, offset64_op, vec_i8imm_op, 
    /* STORE_LANE_I64x2_A32 */
    P2Align, offset32_op, vec_i8imm_op, I32, V128, 
    /* STORE_LANE_I64x2_A32_S */
    P2Align, offset32_op, vec_i8imm_op, 
    /* STORE_LANE_I64x2_A64 */
    P2Align, offset64_op, vec_i8imm_op, I64, V128, 
    /* STORE_LANE_I64x2_A64_S */
    P2Align, offset64_op, vec_i8imm_op, 
    /* STORE_LANE_I8x16_A32 */
    P2Align, offset32_op, vec_i8imm_op, I32, V128, 
    /* STORE_LANE_I8x16_A32_S */
    P2Align, offset32_op, vec_i8imm_op, 
    /* STORE_LANE_I8x16_A64 */
    P2Align, offset64_op, vec_i8imm_op, I64, V128, 
    /* STORE_LANE_I8x16_A64_S */
    P2Align, offset64_op, vec_i8imm_op, 
    /* STORE_V128_A32 */
    P2Align, offset32_op, I32, V128, 
    /* STORE_V128_A32_S */
    P2Align, offset32_op, 
    /* STORE_V128_A64 */
    P2Align, offset64_op, I64, V128, 
    /* STORE_V128_A64_S */
    P2Align, offset64_op, 
    /* SUB_F32 */
    F32, F32, F32, 
    /* SUB_F32_S */
    /* SUB_F32x4 */
    V128, V128, V128, 
    /* SUB_F32x4_S */
    /* SUB_F64 */
    F64, F64, F64, 
    /* SUB_F64_S */
    /* SUB_F64x2 */
    V128, V128, V128, 
    /* SUB_F64x2_S */
    /* SUB_I16x8 */
    V128, V128, V128, 
    /* SUB_I16x8_S */
    /* SUB_I32 */
    I32, I32, I32, 
    /* SUB_I32_S */
    /* SUB_I32x4 */
    V128, V128, V128, 
    /* SUB_I32x4_S */
    /* SUB_I64 */
    I64, I64, I64, 
    /* SUB_I64_S */
    /* SUB_I64x2 */
    V128, V128, V128, 
    /* SUB_I64x2_S */
    /* SUB_I8x16 */
    V128, V128, V128, 
    /* SUB_I8x16_S */
    /* SUB_SAT_S_I16x8 */
    V128, V128, V128, 
    /* SUB_SAT_S_I16x8_S */
    /* SUB_SAT_S_I8x16 */
    V128, V128, V128, 
    /* SUB_SAT_S_I8x16_S */
    /* SUB_SAT_U_I16x8 */
    V128, V128, V128, 
    /* SUB_SAT_U_I16x8_S */
    /* SUB_SAT_U_I8x16 */
    V128, V128, V128, 
    /* SUB_SAT_U_I8x16_S */
    /* SWIZZLE */
    V128, V128, V128, 
    /* SWIZZLE_S */
    /* TABLE_COPY */
    table32_op, table32_op, I32, I32, I32, 
    /* TABLE_COPY_S */
    table32_op, table32_op, 
    /* TABLE_FILL_EXTERNREF */
    table32_op, I32, EXTERNREF, I32, 
    /* TABLE_FILL_EXTERNREF_S */
    table32_op, 
    /* TABLE_FILL_FUNCREF */
    table32_op, I32, FUNCREF, I32, 
    /* TABLE_FILL_FUNCREF_S */
    table32_op, 
    /* TABLE_GET_EXTERNREF */
    EXTERNREF, table32_op, I32, 
    /* TABLE_GET_EXTERNREF_S */
    table32_op, 
    /* TABLE_GET_FUNCREF */
    FUNCREF, table32_op, I32, 
    /* TABLE_GET_FUNCREF_S */
    table32_op, 
    /* TABLE_GROW_EXTERNREF */
    I32, table32_op, EXTERNREF, I32, 
    /* TABLE_GROW_EXTERNREF_S */
    table32_op, 
    /* TABLE_GROW_FUNCREF */
    I32, table32_op, FUNCREF, I32, 
    /* TABLE_GROW_FUNCREF_S */
    table32_op, 
    /* TABLE_SET_EXTERNREF */
    table32_op, I32, EXTERNREF, 
    /* TABLE_SET_EXTERNREF_S */
    table32_op, 
    /* TABLE_SET_FUNCREF */
    table32_op, I32, FUNCREF, 
    /* TABLE_SET_FUNCREF_S */
    table32_op, 
    /* TABLE_SIZE */
    I32, table32_op, 
    /* TABLE_SIZE_S */
    table32_op, 
    /* TEE_EXTERNREF */
    EXTERNREF, EXTERNREF, EXTERNREF, 
    /* TEE_EXTERNREF_S */
    /* TEE_F32 */
    F32, F32, F32, 
    /* TEE_F32_S */
    /* TEE_F64 */
    F64, F64, F64, 
    /* TEE_F64_S */
    /* TEE_FUNCREF */
    FUNCREF, FUNCREF, FUNCREF, 
    /* TEE_FUNCREF_S */
    /* TEE_I32 */
    I32, I32, I32, 
    /* TEE_I32_S */
    /* TEE_I64 */
    I64, I64, I64, 
    /* TEE_I64_S */
    /* TEE_V128 */
    V128, V128, V128, 
    /* TEE_V128_S */
    /* THROW */
    tag_op, 
    /* THROW_S */
    tag_op, 
    /* TRUNC_F32 */
    F32, F32, 
    /* TRUNC_F32_S */
    /* TRUNC_F32x4 */
    V128, V128, 
    /* TRUNC_F32x4_S */
    /* TRUNC_F64 */
    F64, F64, 
    /* TRUNC_F64_S */
    /* TRUNC_F64x2 */
    V128, V128, 
    /* TRUNC_F64x2_S */
    /* TRY */
    Signature, 
    /* TRY_S */
    Signature, 
    /* UNREACHABLE */
    /* UNREACHABLE_S */
    /* XOR */
    V128, V128, V128, 
    /* XOR_I32 */
    I32, I32, I32, 
    /* XOR_I32_S */
    /* XOR_I64 */
    I64, I64, I64, 
    /* XOR_I64_S */
    /* XOR_S */
    /* anonymous_7070MEMORY_GROW_A32 */
    I32, i32imm, I32, 
    /* anonymous_7070MEMORY_GROW_A32_S */
    i32imm, 
    /* anonymous_7070MEMORY_SIZE_A32 */
    I32, i32imm, 
    /* anonymous_7070MEMORY_SIZE_A32_S */
    i32imm, 
    /* anonymous_7071MEMORY_GROW_A64 */
    I64, i32imm, I64, 
    /* anonymous_7071MEMORY_GROW_A64_S */
    i32imm, 
    /* anonymous_7071MEMORY_SIZE_A64 */
    I64, i32imm, 
    /* anonymous_7071MEMORY_SIZE_A64_S */
    i32imm, 
    /* anonymous_7752DATA_DROP */
    i32imm_op, 
    /* anonymous_7752DATA_DROP_S */
    i32imm_op, 
    /* anonymous_7752MEMORY_COPY_A32 */
    i32imm_op, i32imm_op, I32, I32, I32, 
    /* anonymous_7752MEMORY_COPY_A32_S */
    i32imm_op, i32imm_op, 
    /* anonymous_7752MEMORY_FILL_A32 */
    i32imm_op, I32, I32, I32, 
    /* anonymous_7752MEMORY_FILL_A32_S */
    i32imm_op, 
    /* anonymous_7752MEMORY_INIT_A32 */
    i32imm_op, i32imm_op, I32, I32, I32, 
    /* anonymous_7752MEMORY_INIT_A32_S */
    i32imm_op, i32imm_op, 
    /* anonymous_7753DATA_DROP */
    i32imm_op, 
    /* anonymous_7753DATA_DROP_S */
    i32imm_op, 
    /* anonymous_7753MEMORY_COPY_A64 */
    i32imm_op, i32imm_op, I64, I64, I64, 
    /* anonymous_7753MEMORY_COPY_A64_S */
    i32imm_op, i32imm_op, 
    /* anonymous_7753MEMORY_FILL_A64 */
    i32imm_op, I64, I32, I64, 
    /* anonymous_7753MEMORY_FILL_A64_S */
    i32imm_op, 
    /* anonymous_7753MEMORY_INIT_A64 */
    i32imm_op, i32imm_op, I64, I32, I32, 
    /* anonymous_7753MEMORY_INIT_A64_S */
    i32imm_op, i32imm_op, 
    /* convert_low_s_F64x2 */
    V128, V128, 
    /* convert_low_s_F64x2_S */
    /* convert_low_u_F64x2 */
    V128, V128, 
    /* convert_low_u_F64x2_S */
    /* demote_zero_F32x4 */
    V128, V128, 
    /* demote_zero_F32x4_S */
    /* extend_high_s_I16x8 */
    V128, V128, 
    /* extend_high_s_I16x8_S */
    /* extend_high_s_I32x4 */
    V128, V128, 
    /* extend_high_s_I32x4_S */
    /* extend_high_s_I64x2 */
    V128, V128, 
    /* extend_high_s_I64x2_S */
    /* extend_high_u_I16x8 */
    V128, V128, 
    /* extend_high_u_I16x8_S */
    /* extend_high_u_I32x4 */
    V128, V128, 
    /* extend_high_u_I32x4_S */
    /* extend_high_u_I64x2 */
    V128, V128, 
    /* extend_high_u_I64x2_S */
    /* extend_low_s_I16x8 */
    V128, V128, 
    /* extend_low_s_I16x8_S */
    /* extend_low_s_I32x4 */
    V128, V128, 
    /* extend_low_s_I32x4_S */
    /* extend_low_s_I64x2 */
    V128, V128, 
    /* extend_low_s_I64x2_S */
    /* extend_low_u_I16x8 */
    V128, V128, 
    /* extend_low_u_I16x8_S */
    /* extend_low_u_I32x4 */
    V128, V128, 
    /* extend_low_u_I32x4_S */
    /* extend_low_u_I64x2 */
    V128, V128, 
    /* extend_low_u_I64x2_S */
    /* fp_to_sint_I32x4 */
    V128, V128, 
    /* fp_to_sint_I32x4_S */
    /* fp_to_uint_I32x4 */
    V128, V128, 
    /* fp_to_uint_I32x4_S */
    /* int_wasm_extadd_pairwise_signed_I16x8 */
    V128, V128, 
    /* int_wasm_extadd_pairwise_signed_I16x8_S */
    /* int_wasm_extadd_pairwise_signed_I32x4 */
    V128, V128, 
    /* int_wasm_extadd_pairwise_signed_I32x4_S */
    /* int_wasm_extadd_pairwise_unsigned_I16x8 */
    V128, V128, 
    /* int_wasm_extadd_pairwise_unsigned_I16x8_S */
    /* int_wasm_extadd_pairwise_unsigned_I32x4 */
    V128, V128, 
    /* int_wasm_extadd_pairwise_unsigned_I32x4_S */
    /* int_wasm_relaxed_trunc_signed_I32x4 */
    V128, V128, 
    /* int_wasm_relaxed_trunc_signed_I32x4_S */
    /* int_wasm_relaxed_trunc_signed_zero_I32x4 */
    V128, V128, 
    /* int_wasm_relaxed_trunc_signed_zero_I32x4_S */
    /* int_wasm_relaxed_trunc_unsigned_I32x4 */
    V128, V128, 
    /* int_wasm_relaxed_trunc_unsigned_I32x4_S */
    /* int_wasm_relaxed_trunc_unsigned_zero_I32x4 */
    V128, V128, 
    /* int_wasm_relaxed_trunc_unsigned_zero_I32x4_S */
    /* promote_low_F64x2 */
    V128, V128, 
    /* promote_low_F64x2_S */
    /* sint_to_fp_F32x4 */
    V128, V128, 
    /* sint_to_fp_F32x4_S */
    /* trunc_sat_zero_s_I32x4 */
    V128, V128, 
    /* trunc_sat_zero_s_I32x4_S */
    /* trunc_sat_zero_u_I32x4 */
    V128, V128, 
    /* trunc_sat_zero_u_I32x4_S */
    /* uint_to_fp_F32x4 */
    V128, V128, 
  };
  return OpcodeOperandTypes[Offsets[Opcode] + OpIdx];
}
} // end namespace WebAssembly
} // end namespace llvm
#endif // GET_INSTRINFO_OPERAND_TYPE

#ifdef GET_INSTRINFO_MEM_OPERAND_SIZE
#undef GET_INSTRINFO_MEM_OPERAND_SIZE
namespace llvm {
namespace WebAssembly {
LLVM_READONLY
static int getMemOperandSize(int OpType) {
  switch (OpType) {
  default: return 0;
  }
}
} // end namespace WebAssembly
} // end namespace llvm
#endif // GET_INSTRINFO_MEM_OPERAND_SIZE

#ifdef GET_INSTRINFO_LOGICAL_OPERAND_SIZE_MAP
#undef GET_INSTRINFO_LOGICAL_OPERAND_SIZE_MAP
namespace llvm {
namespace WebAssembly {
LLVM_READONLY static unsigned
getLogicalOperandSize(uint16_t Opcode, uint16_t LogicalOpIdx) {
  return LogicalOpIdx;
}
LLVM_READONLY static inline unsigned
getLogicalOperandIdx(uint16_t Opcode, uint16_t LogicalOpIdx) {
  auto S = 0U;
  for (auto i = 0U; i < LogicalOpIdx; ++i)
    S += getLogicalOperandSize(Opcode, i);
  return S;
}
} // end namespace WebAssembly
} // end namespace llvm
#endif // GET_INSTRINFO_LOGICAL_OPERAND_SIZE_MAP

#ifdef GET_INSTRINFO_LOGICAL_OPERAND_TYPE_MAP
#undef GET_INSTRINFO_LOGICAL_OPERAND_TYPE_MAP
namespace llvm {
namespace WebAssembly {
LLVM_READONLY static int
getLogicalOperandType(uint16_t Opcode, uint16_t LogicalOpIdx) {
  return -1;
}
} // end namespace WebAssembly
} // end namespace llvm
#endif // GET_INSTRINFO_LOGICAL_OPERAND_TYPE_MAP

#ifdef GET_INSTRINFO_MC_HELPER_DECLS
#undef GET_INSTRINFO_MC_HELPER_DECLS

namespace llvm {
class MCInst;
class FeatureBitset;

namespace WebAssembly_MC {

void verifyInstructionPredicates(unsigned Opcode, const FeatureBitset &Features);

} // end namespace WebAssembly_MC
} // end namespace llvm

#endif // GET_INSTRINFO_MC_HELPER_DECLS

#ifdef GET_INSTRINFO_MC_HELPERS
#undef GET_INSTRINFO_MC_HELPERS

namespace llvm {
namespace WebAssembly_MC {

} // end namespace WebAssembly_MC
} // end namespace llvm

#endif // GET_GENISTRINFO_MC_HELPERS

#if defined(ENABLE_INSTR_PREDICATE_VERIFIER) && !defined(NDEBUG)
#define GET_COMPUTE_FEATURES
#endif
#ifdef GET_COMPUTE_FEATURES
#undef GET_COMPUTE_FEATURES
namespace llvm {
namespace WebAssembly_MC {

// Bits for subtarget features that participate in instruction matching.
enum SubtargetFeatureBits : uint8_t {
  Feature_HasSIMD128Bit = 8,
  Feature_HasRelaxedSIMDBit = 7,
  Feature_HasAtomicsBit = 0,
  Feature_HasMultivalueBit = 4,
  Feature_HasNontrappingFPToIntBit = 5,
  Feature_NotHasNontrappingFPToIntBit = 11,
  Feature_HasSignExtBit = 9,
  Feature_HasTailCallBit = 10,
  Feature_HasExceptionHandlingBit = 2,
  Feature_HasBulkMemoryBit = 1,
  Feature_HasReferenceTypesBit = 6,
  Feature_HasExtendedConstBit = 3,
};

inline FeatureBitset computeAvailableFeatures(const FeatureBitset &FB) {
  FeatureBitset Features;
  if (FB[WebAssembly::FeatureSIMD128])
    Features.set(Feature_HasSIMD128Bit);
  if (FB[WebAssembly::FeatureRelaxedSIMD])
    Features.set(Feature_HasRelaxedSIMDBit);
  if (FB[WebAssembly::FeatureAtomics])
    Features.set(Feature_HasAtomicsBit);
  if (FB[WebAssembly::FeatureMultivalue])
    Features.set(Feature_HasMultivalueBit);
  if (FB[WebAssembly::FeatureNontrappingFPToInt])
    Features.set(Feature_HasNontrappingFPToIntBit);
  if (!FB[WebAssembly::FeatureNontrappingFPToInt])
    Features.set(Feature_NotHasNontrappingFPToIntBit);
  if (FB[WebAssembly::FeatureSignExt])
    Features.set(Feature_HasSignExtBit);
  if (FB[WebAssembly::FeatureTailCall])
    Features.set(Feature_HasTailCallBit);
  if (FB[WebAssembly::FeatureExceptionHandling])
    Features.set(Feature_HasExceptionHandlingBit);
  if (FB[WebAssembly::FeatureBulkMemory])
    Features.set(Feature_HasBulkMemoryBit);
  if (FB[WebAssembly::FeatureReferenceTypes])
    Features.set(Feature_HasReferenceTypesBit);
  if (FB[WebAssembly::FeatureExtendedConst])
    Features.set(Feature_HasExtendedConstBit);
  return Features;
}

inline FeatureBitset computeRequiredFeatures(unsigned Opcode) {
  enum : uint8_t {
    CEFBS_None,
    CEFBS_HasAtomics,
    CEFBS_HasBulkMemory,
    CEFBS_HasExceptionHandling,
    CEFBS_HasNontrappingFPToInt,
    CEFBS_HasReferenceTypes,
    CEFBS_HasRelaxedSIMD,
    CEFBS_HasSIMD128,
    CEFBS_HasSignExt,
    CEFBS_HasTailCall,
    CEFBS_NotHasNontrappingFPToInt,
  };

  static constexpr FeatureBitset FeatureBitsets[] = {
    {}, // CEFBS_None
    {Feature_HasAtomicsBit, },
    {Feature_HasBulkMemoryBit, },
    {Feature_HasExceptionHandlingBit, },
    {Feature_HasNontrappingFPToIntBit, },
    {Feature_HasReferenceTypesBit, },
    {Feature_HasRelaxedSIMDBit, },
    {Feature_HasSIMD128Bit, },
    {Feature_HasSignExtBit, },
    {Feature_HasTailCallBit, },
    {Feature_NotHasNontrappingFPToIntBit, },
  };
  static uint8_t RequiredFeaturesRefs[] = {
    CEFBS_None, // PHI = 0
    CEFBS_None, // INLINEASM = 1
    CEFBS_None, // INLINEASM_BR = 2
    CEFBS_None, // CFI_INSTRUCTION = 3
    CEFBS_None, // EH_LABEL = 4
    CEFBS_None, // GC_LABEL = 5
    CEFBS_None, // ANNOTATION_LABEL = 6
    CEFBS_None, // KILL = 7
    CEFBS_None, // EXTRACT_SUBREG = 8
    CEFBS_None, // INSERT_SUBREG = 9
    CEFBS_None, // IMPLICIT_DEF = 10
    CEFBS_None, // SUBREG_TO_REG = 11
    CEFBS_None, // COPY_TO_REGCLASS = 12
    CEFBS_None, // DBG_VALUE = 13
    CEFBS_None, // DBG_VALUE_LIST = 14
    CEFBS_None, // DBG_INSTR_REF = 15
    CEFBS_None, // DBG_PHI = 16
    CEFBS_None, // DBG_LABEL = 17
    CEFBS_None, // REG_SEQUENCE = 18
    CEFBS_None, // COPY = 19
    CEFBS_None, // BUNDLE = 20
    CEFBS_None, // LIFETIME_START = 21
    CEFBS_None, // LIFETIME_END = 22
    CEFBS_None, // PSEUDO_PROBE = 23
    CEFBS_None, // ARITH_FENCE = 24
    CEFBS_None, // STACKMAP = 25
    CEFBS_None, // FENTRY_CALL = 26
    CEFBS_None, // PATCHPOINT = 27
    CEFBS_None, // LOAD_STACK_GUARD = 28
    CEFBS_None, // PREALLOCATED_SETUP = 29
    CEFBS_None, // PREALLOCATED_ARG = 30
    CEFBS_None, // STATEPOINT = 31
    CEFBS_None, // LOCAL_ESCAPE = 32
    CEFBS_None, // FAULTING_OP = 33
    CEFBS_None, // PATCHABLE_OP = 34
    CEFBS_None, // PATCHABLE_FUNCTION_ENTER = 35
    CEFBS_None, // PATCHABLE_RET = 36
    CEFBS_None, // PATCHABLE_FUNCTION_EXIT = 37
    CEFBS_None, // PATCHABLE_TAIL_CALL = 38
    CEFBS_None, // PATCHABLE_EVENT_CALL = 39
    CEFBS_None, // PATCHABLE_TYPED_EVENT_CALL = 40
    CEFBS_None, // ICALL_BRANCH_FUNNEL = 41
    CEFBS_None, // MEMBARRIER = 42
    CEFBS_None, // G_ASSERT_SEXT = 43
    CEFBS_None, // G_ASSERT_ZEXT = 44
    CEFBS_None, // G_ASSERT_ALIGN = 45
    CEFBS_None, // G_ADD = 46
    CEFBS_None, // G_SUB = 47
    CEFBS_None, // G_MUL = 48
    CEFBS_None, // G_SDIV = 49
    CEFBS_None, // G_UDIV = 50
    CEFBS_None, // G_SREM = 51
    CEFBS_None, // G_UREM = 52
    CEFBS_None, // G_SDIVREM = 53
    CEFBS_None, // G_UDIVREM = 54
    CEFBS_None, // G_AND = 55
    CEFBS_None, // G_OR = 56
    CEFBS_None, // G_XOR = 57
    CEFBS_None, // G_IMPLICIT_DEF = 58
    CEFBS_None, // G_PHI = 59
    CEFBS_None, // G_FRAME_INDEX = 60
    CEFBS_None, // G_GLOBAL_VALUE = 61
    CEFBS_None, // G_CONSTANT_POOL = 62
    CEFBS_None, // G_EXTRACT = 63
    CEFBS_None, // G_UNMERGE_VALUES = 64
    CEFBS_None, // G_INSERT = 65
    CEFBS_None, // G_MERGE_VALUES = 66
    CEFBS_None, // G_BUILD_VECTOR = 67
    CEFBS_None, // G_BUILD_VECTOR_TRUNC = 68
    CEFBS_None, // G_CONCAT_VECTORS = 69
    CEFBS_None, // G_PTRTOINT = 70
    CEFBS_None, // G_INTTOPTR = 71
    CEFBS_None, // G_BITCAST = 72
    CEFBS_None, // G_FREEZE = 73
    CEFBS_None, // G_CONSTANT_FOLD_BARRIER = 74
    CEFBS_None, // G_INTRINSIC_FPTRUNC_ROUND = 75
    CEFBS_None, // G_INTRINSIC_TRUNC = 76
    CEFBS_None, // G_INTRINSIC_ROUND = 77
    CEFBS_None, // G_INTRINSIC_LRINT = 78
    CEFBS_None, // G_INTRINSIC_ROUNDEVEN = 79
    CEFBS_None, // G_READCYCLECOUNTER = 80
    CEFBS_None, // G_LOAD = 81
    CEFBS_None, // G_SEXTLOAD = 82
    CEFBS_None, // G_ZEXTLOAD = 83
    CEFBS_None, // G_INDEXED_LOAD = 84
    CEFBS_None, // G_INDEXED_SEXTLOAD = 85
    CEFBS_None, // G_INDEXED_ZEXTLOAD = 86
    CEFBS_None, // G_STORE = 87
    CEFBS_None, // G_INDEXED_STORE = 88
    CEFBS_None, // G_ATOMIC_CMPXCHG_WITH_SUCCESS = 89
    CEFBS_None, // G_ATOMIC_CMPXCHG = 90
    CEFBS_None, // G_ATOMICRMW_XCHG = 91
    CEFBS_None, // G_ATOMICRMW_ADD = 92
    CEFBS_None, // G_ATOMICRMW_SUB = 93
    CEFBS_None, // G_ATOMICRMW_AND = 94
    CEFBS_None, // G_ATOMICRMW_NAND = 95
    CEFBS_None, // G_ATOMICRMW_OR = 96
    CEFBS_None, // G_ATOMICRMW_XOR = 97
    CEFBS_None, // G_ATOMICRMW_MAX = 98
    CEFBS_None, // G_ATOMICRMW_MIN = 99
    CEFBS_None, // G_ATOMICRMW_UMAX = 100
    CEFBS_None, // G_ATOMICRMW_UMIN = 101
    CEFBS_None, // G_ATOMICRMW_FADD = 102
    CEFBS_None, // G_ATOMICRMW_FSUB = 103
    CEFBS_None, // G_ATOMICRMW_FMAX = 104
    CEFBS_None, // G_ATOMICRMW_FMIN = 105
    CEFBS_None, // G_ATOMICRMW_UINC_WRAP = 106
    CEFBS_None, // G_ATOMICRMW_UDEC_WRAP = 107
    CEFBS_None, // G_FENCE = 108
    CEFBS_None, // G_BRCOND = 109
    CEFBS_None, // G_BRINDIRECT = 110
    CEFBS_None, // G_INVOKE_REGION_START = 111
    CEFBS_None, // G_INTRINSIC = 112
    CEFBS_None, // G_INTRINSIC_W_SIDE_EFFECTS = 113
    CEFBS_None, // G_ANYEXT = 114
    CEFBS_None, // G_TRUNC = 115
    CEFBS_None, // G_CONSTANT = 116
    CEFBS_None, // G_FCONSTANT = 117
    CEFBS_None, // G_VASTART = 118
    CEFBS_None, // G_VAARG = 119
    CEFBS_None, // G_SEXT = 120
    CEFBS_None, // G_SEXT_INREG = 121
    CEFBS_None, // G_ZEXT = 122
    CEFBS_None, // G_SHL = 123
    CEFBS_None, // G_LSHR = 124
    CEFBS_None, // G_ASHR = 125
    CEFBS_None, // G_FSHL = 126
    CEFBS_None, // G_FSHR = 127
    CEFBS_None, // G_ROTR = 128
    CEFBS_None, // G_ROTL = 129
    CEFBS_None, // G_ICMP = 130
    CEFBS_None, // G_FCMP = 131
    CEFBS_None, // G_SELECT = 132
    CEFBS_None, // G_UADDO = 133
    CEFBS_None, // G_UADDE = 134
    CEFBS_None, // G_USUBO = 135
    CEFBS_None, // G_USUBE = 136
    CEFBS_None, // G_SADDO = 137
    CEFBS_None, // G_SADDE = 138
    CEFBS_None, // G_SSUBO = 139
    CEFBS_None, // G_SSUBE = 140
    CEFBS_None, // G_UMULO = 141
    CEFBS_None, // G_SMULO = 142
    CEFBS_None, // G_UMULH = 143
    CEFBS_None, // G_SMULH = 144
    CEFBS_None, // G_UADDSAT = 145
    CEFBS_None, // G_SADDSAT = 146
    CEFBS_None, // G_USUBSAT = 147
    CEFBS_None, // G_SSUBSAT = 148
    CEFBS_None, // G_USHLSAT = 149
    CEFBS_None, // G_SSHLSAT = 150
    CEFBS_None, // G_SMULFIX = 151
    CEFBS_None, // G_UMULFIX = 152
    CEFBS_None, // G_SMULFIXSAT = 153
    CEFBS_None, // G_UMULFIXSAT = 154
    CEFBS_None, // G_SDIVFIX = 155
    CEFBS_None, // G_UDIVFIX = 156
    CEFBS_None, // G_SDIVFIXSAT = 157
    CEFBS_None, // G_UDIVFIXSAT = 158
    CEFBS_None, // G_FADD = 159
    CEFBS_None, // G_FSUB = 160
    CEFBS_None, // G_FMUL = 161
    CEFBS_None, // G_FMA = 162
    CEFBS_None, // G_FMAD = 163
    CEFBS_None, // G_FDIV = 164
    CEFBS_None, // G_FREM = 165
    CEFBS_None, // G_FPOW = 166
    CEFBS_None, // G_FPOWI = 167
    CEFBS_None, // G_FEXP = 168
    CEFBS_None, // G_FEXP2 = 169
    CEFBS_None, // G_FLOG = 170
    CEFBS_None, // G_FLOG2 = 171
    CEFBS_None, // G_FLOG10 = 172
    CEFBS_None, // G_FLDEXP = 173
    CEFBS_None, // G_FFREXP = 174
    CEFBS_None, // G_FNEG = 175
    CEFBS_None, // G_FPEXT = 176
    CEFBS_None, // G_FPTRUNC = 177
    CEFBS_None, // G_FPTOSI = 178
    CEFBS_None, // G_FPTOUI = 179
    CEFBS_None, // G_SITOFP = 180
    CEFBS_None, // G_UITOFP = 181
    CEFBS_None, // G_FABS = 182
    CEFBS_None, // G_FCOPYSIGN = 183
    CEFBS_None, // G_IS_FPCLASS = 184
    CEFBS_None, // G_FCANONICALIZE = 185
    CEFBS_None, // G_FMINNUM = 186
    CEFBS_None, // G_FMAXNUM = 187
    CEFBS_None, // G_FMINNUM_IEEE = 188
    CEFBS_None, // G_FMAXNUM_IEEE = 189
    CEFBS_None, // G_FMINIMUM = 190
    CEFBS_None, // G_FMAXIMUM = 191
    CEFBS_None, // G_PTR_ADD = 192
    CEFBS_None, // G_PTRMASK = 193
    CEFBS_None, // G_SMIN = 194
    CEFBS_None, // G_SMAX = 195
    CEFBS_None, // G_UMIN = 196
    CEFBS_None, // G_UMAX = 197
    CEFBS_None, // G_ABS = 198
    CEFBS_None, // G_LROUND = 199
    CEFBS_None, // G_LLROUND = 200
    CEFBS_None, // G_BR = 201
    CEFBS_None, // G_BRJT = 202
    CEFBS_None, // G_INSERT_VECTOR_ELT = 203
    CEFBS_None, // G_EXTRACT_VECTOR_ELT = 204
    CEFBS_None, // G_SHUFFLE_VECTOR = 205
    CEFBS_None, // G_CTTZ = 206
    CEFBS_None, // G_CTTZ_ZERO_UNDEF = 207
    CEFBS_None, // G_CTLZ = 208
    CEFBS_None, // G_CTLZ_ZERO_UNDEF = 209
    CEFBS_None, // G_CTPOP = 210
    CEFBS_None, // G_BSWAP = 211
    CEFBS_None, // G_BITREVERSE = 212
    CEFBS_None, // G_FCEIL = 213
    CEFBS_None, // G_FCOS = 214
    CEFBS_None, // G_FSIN = 215
    CEFBS_None, // G_FSQRT = 216
    CEFBS_None, // G_FFLOOR = 217
    CEFBS_None, // G_FRINT = 218
    CEFBS_None, // G_FNEARBYINT = 219
    CEFBS_None, // G_ADDRSPACE_CAST = 220
    CEFBS_None, // G_BLOCK_ADDR = 221
    CEFBS_None, // G_JUMP_TABLE = 222
    CEFBS_None, // G_DYN_STACKALLOC = 223
    CEFBS_None, // G_STRICT_FADD = 224
    CEFBS_None, // G_STRICT_FSUB = 225
    CEFBS_None, // G_STRICT_FMUL = 226
    CEFBS_None, // G_STRICT_FDIV = 227
    CEFBS_None, // G_STRICT_FREM = 228
    CEFBS_None, // G_STRICT_FMA = 229
    CEFBS_None, // G_STRICT_FSQRT = 230
    CEFBS_None, // G_STRICT_FLDEXP = 231
    CEFBS_None, // G_READ_REGISTER = 232
    CEFBS_None, // G_WRITE_REGISTER = 233
    CEFBS_None, // G_MEMCPY = 234
    CEFBS_None, // G_MEMCPY_INLINE = 235
    CEFBS_None, // G_MEMMOVE = 236
    CEFBS_None, // G_MEMSET = 237
    CEFBS_None, // G_BZERO = 238
    CEFBS_None, // G_VECREDUCE_SEQ_FADD = 239
    CEFBS_None, // G_VECREDUCE_SEQ_FMUL = 240
    CEFBS_None, // G_VECREDUCE_FADD = 241
    CEFBS_None, // G_VECREDUCE_FMUL = 242
    CEFBS_None, // G_VECREDUCE_FMAX = 243
    CEFBS_None, // G_VECREDUCE_FMIN = 244
    CEFBS_None, // G_VECREDUCE_ADD = 245
    CEFBS_None, // G_VECREDUCE_MUL = 246
    CEFBS_None, // G_VECREDUCE_AND = 247
    CEFBS_None, // G_VECREDUCE_OR = 248
    CEFBS_None, // G_VECREDUCE_XOR = 249
    CEFBS_None, // G_VECREDUCE_SMAX = 250
    CEFBS_None, // G_VECREDUCE_SMIN = 251
    CEFBS_None, // G_VECREDUCE_UMAX = 252
    CEFBS_None, // G_VECREDUCE_UMIN = 253
    CEFBS_None, // G_SBFX = 254
    CEFBS_None, // G_UBFX = 255
    CEFBS_None, // CALL_PARAMS = 256
    CEFBS_None, // CALL_PARAMS_S = 257
    CEFBS_None, // CALL_RESULTS = 258
    CEFBS_None, // CALL_RESULTS_S = 259
    CEFBS_HasExceptionHandling, // CATCHRET = 260
    CEFBS_HasExceptionHandling, // CATCHRET_S = 261
    CEFBS_HasExceptionHandling, // CLEANUPRET = 262
    CEFBS_HasExceptionHandling, // CLEANUPRET_S = 263
    CEFBS_HasAtomics, // COMPILER_FENCE = 264
    CEFBS_HasAtomics, // COMPILER_FENCE_S = 265
    CEFBS_None, // RET_CALL_RESULTS = 266
    CEFBS_None, // RET_CALL_RESULTS_S = 267
    CEFBS_None, // ABS_F32 = 268
    CEFBS_None, // ABS_F32_S = 269
    CEFBS_HasSIMD128, // ABS_F32x4 = 270
    CEFBS_HasSIMD128, // ABS_F32x4_S = 271
    CEFBS_None, // ABS_F64 = 272
    CEFBS_None, // ABS_F64_S = 273
    CEFBS_HasSIMD128, // ABS_F64x2 = 274
    CEFBS_HasSIMD128, // ABS_F64x2_S = 275
    CEFBS_HasSIMD128, // ABS_I16x8 = 276
    CEFBS_HasSIMD128, // ABS_I16x8_S = 277
    CEFBS_HasSIMD128, // ABS_I32x4 = 278
    CEFBS_HasSIMD128, // ABS_I32x4_S = 279
    CEFBS_HasSIMD128, // ABS_I64x2 = 280
    CEFBS_HasSIMD128, // ABS_I64x2_S = 281
    CEFBS_HasSIMD128, // ABS_I8x16 = 282
    CEFBS_HasSIMD128, // ABS_I8x16_S = 283
    CEFBS_None, // ADD_F32 = 284
    CEFBS_None, // ADD_F32_S = 285
    CEFBS_HasSIMD128, // ADD_F32x4 = 286
    CEFBS_HasSIMD128, // ADD_F32x4_S = 287
    CEFBS_None, // ADD_F64 = 288
    CEFBS_None, // ADD_F64_S = 289
    CEFBS_HasSIMD128, // ADD_F64x2 = 290
    CEFBS_HasSIMD128, // ADD_F64x2_S = 291
    CEFBS_HasSIMD128, // ADD_I16x8 = 292
    CEFBS_HasSIMD128, // ADD_I16x8_S = 293
    CEFBS_None, // ADD_I32 = 294
    CEFBS_None, // ADD_I32_S = 295
    CEFBS_HasSIMD128, // ADD_I32x4 = 296
    CEFBS_HasSIMD128, // ADD_I32x4_S = 297
    CEFBS_None, // ADD_I64 = 298
    CEFBS_None, // ADD_I64_S = 299
    CEFBS_HasSIMD128, // ADD_I64x2 = 300
    CEFBS_HasSIMD128, // ADD_I64x2_S = 301
    CEFBS_HasSIMD128, // ADD_I8x16 = 302
    CEFBS_HasSIMD128, // ADD_I8x16_S = 303
    CEFBS_HasSIMD128, // ADD_SAT_S_I16x8 = 304
    CEFBS_HasSIMD128, // ADD_SAT_S_I16x8_S = 305
    CEFBS_HasSIMD128, // ADD_SAT_S_I8x16 = 306
    CEFBS_HasSIMD128, // ADD_SAT_S_I8x16_S = 307
    CEFBS_HasSIMD128, // ADD_SAT_U_I16x8 = 308
    CEFBS_HasSIMD128, // ADD_SAT_U_I16x8_S = 309
    CEFBS_HasSIMD128, // ADD_SAT_U_I8x16 = 310
    CEFBS_HasSIMD128, // ADD_SAT_U_I8x16_S = 311
    CEFBS_None, // ADJCALLSTACKDOWN = 312
    CEFBS_None, // ADJCALLSTACKDOWN_S = 313
    CEFBS_None, // ADJCALLSTACKUP = 314
    CEFBS_None, // ADJCALLSTACKUP_S = 315
    CEFBS_HasSIMD128, // ALLTRUE_I16x8 = 316
    CEFBS_HasSIMD128, // ALLTRUE_I16x8_S = 317
    CEFBS_HasSIMD128, // ALLTRUE_I32x4 = 318
    CEFBS_HasSIMD128, // ALLTRUE_I32x4_S = 319
    CEFBS_HasSIMD128, // ALLTRUE_I64x2 = 320
    CEFBS_HasSIMD128, // ALLTRUE_I64x2_S = 321
    CEFBS_HasSIMD128, // ALLTRUE_I8x16 = 322
    CEFBS_HasSIMD128, // ALLTRUE_I8x16_S = 323
    CEFBS_HasSIMD128, // AND = 324
    CEFBS_HasSIMD128, // ANDNOT = 325
    CEFBS_HasSIMD128, // ANDNOT_S = 326
    CEFBS_None, // AND_I32 = 327
    CEFBS_None, // AND_I32_S = 328
    CEFBS_None, // AND_I64 = 329
    CEFBS_None, // AND_I64_S = 330
    CEFBS_HasSIMD128, // AND_S = 331
    CEFBS_HasSIMD128, // ANYTRUE = 332
    CEFBS_HasSIMD128, // ANYTRUE_S = 333
    CEFBS_None, // ARGUMENT_externref = 334
    CEFBS_None, // ARGUMENT_externref_S = 335
    CEFBS_None, // ARGUMENT_f32 = 336
    CEFBS_None, // ARGUMENT_f32_S = 337
    CEFBS_None, // ARGUMENT_f64 = 338
    CEFBS_None, // ARGUMENT_f64_S = 339
    CEFBS_None, // ARGUMENT_funcref = 340
    CEFBS_None, // ARGUMENT_funcref_S = 341
    CEFBS_None, // ARGUMENT_i32 = 342
    CEFBS_None, // ARGUMENT_i32_S = 343
    CEFBS_None, // ARGUMENT_i64 = 344
    CEFBS_None, // ARGUMENT_i64_S = 345
    CEFBS_None, // ARGUMENT_v16i8 = 346
    CEFBS_None, // ARGUMENT_v16i8_S = 347
    CEFBS_None, // ARGUMENT_v2f64 = 348
    CEFBS_None, // ARGUMENT_v2f64_S = 349
    CEFBS_None, // ARGUMENT_v2i64 = 350
    CEFBS_None, // ARGUMENT_v2i64_S = 351
    CEFBS_None, // ARGUMENT_v4f32 = 352
    CEFBS_None, // ARGUMENT_v4f32_S = 353
    CEFBS_None, // ARGUMENT_v4i32 = 354
    CEFBS_None, // ARGUMENT_v4i32_S = 355
    CEFBS_None, // ARGUMENT_v8i16 = 356
    CEFBS_None, // ARGUMENT_v8i16_S = 357
    CEFBS_HasAtomics, // ATOMIC_FENCE = 358
    CEFBS_HasAtomics, // ATOMIC_FENCE_S = 359
    CEFBS_HasAtomics, // ATOMIC_LOAD16_U_I32_A32 = 360
    CEFBS_HasAtomics, // ATOMIC_LOAD16_U_I32_A32_S = 361
    CEFBS_HasAtomics, // ATOMIC_LOAD16_U_I32_A64 = 362
    CEFBS_HasAtomics, // ATOMIC_LOAD16_U_I32_A64_S = 363
    CEFBS_HasAtomics, // ATOMIC_LOAD16_U_I64_A32 = 364
    CEFBS_HasAtomics, // ATOMIC_LOAD16_U_I64_A32_S = 365
    CEFBS_HasAtomics, // ATOMIC_LOAD16_U_I64_A64 = 366
    CEFBS_HasAtomics, // ATOMIC_LOAD16_U_I64_A64_S = 367
    CEFBS_HasAtomics, // ATOMIC_LOAD32_U_I64_A32 = 368
    CEFBS_HasAtomics, // ATOMIC_LOAD32_U_I64_A32_S = 369
    CEFBS_HasAtomics, // ATOMIC_LOAD32_U_I64_A64 = 370
    CEFBS_HasAtomics, // ATOMIC_LOAD32_U_I64_A64_S = 371
    CEFBS_HasAtomics, // ATOMIC_LOAD8_U_I32_A32 = 372
    CEFBS_HasAtomics, // ATOMIC_LOAD8_U_I32_A32_S = 373
    CEFBS_HasAtomics, // ATOMIC_LOAD8_U_I32_A64 = 374
    CEFBS_HasAtomics, // ATOMIC_LOAD8_U_I32_A64_S = 375
    CEFBS_HasAtomics, // ATOMIC_LOAD8_U_I64_A32 = 376
    CEFBS_HasAtomics, // ATOMIC_LOAD8_U_I64_A32_S = 377
    CEFBS_HasAtomics, // ATOMIC_LOAD8_U_I64_A64 = 378
    CEFBS_HasAtomics, // ATOMIC_LOAD8_U_I64_A64_S = 379
    CEFBS_HasAtomics, // ATOMIC_LOAD_I32_A32 = 380
    CEFBS_HasAtomics, // ATOMIC_LOAD_I32_A32_S = 381
    CEFBS_HasAtomics, // ATOMIC_LOAD_I32_A64 = 382
    CEFBS_HasAtomics, // ATOMIC_LOAD_I32_A64_S = 383
    CEFBS_HasAtomics, // ATOMIC_LOAD_I64_A32 = 384
    CEFBS_HasAtomics, // ATOMIC_LOAD_I64_A32_S = 385
    CEFBS_HasAtomics, // ATOMIC_LOAD_I64_A64 = 386
    CEFBS_HasAtomics, // ATOMIC_LOAD_I64_A64_S = 387
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_ADD_I32_A32 = 388
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_ADD_I32_A32_S = 389
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_ADD_I32_A64 = 390
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_ADD_I32_A64_S = 391
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_ADD_I64_A32 = 392
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_ADD_I64_A32_S = 393
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_ADD_I64_A64 = 394
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_ADD_I64_A64_S = 395
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_AND_I32_A32 = 396
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_AND_I32_A32_S = 397
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_AND_I32_A64 = 398
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_AND_I32_A64_S = 399
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_AND_I64_A32 = 400
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_AND_I64_A32_S = 401
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_AND_I64_A64 = 402
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_AND_I64_A64_S = 403
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_CMPXCHG_I32_A32 = 404
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_CMPXCHG_I32_A32_S = 405
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_CMPXCHG_I32_A64 = 406
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_CMPXCHG_I32_A64_S = 407
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_CMPXCHG_I64_A32 = 408
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_CMPXCHG_I64_A32_S = 409
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_CMPXCHG_I64_A64 = 410
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_CMPXCHG_I64_A64_S = 411
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_OR_I32_A32 = 412
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_OR_I32_A32_S = 413
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_OR_I32_A64 = 414
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_OR_I32_A64_S = 415
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_OR_I64_A32 = 416
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_OR_I64_A32_S = 417
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_OR_I64_A64 = 418
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_OR_I64_A64_S = 419
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_SUB_I32_A32 = 420
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_SUB_I32_A32_S = 421
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_SUB_I32_A64 = 422
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_SUB_I32_A64_S = 423
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_SUB_I64_A32 = 424
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_SUB_I64_A32_S = 425
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_SUB_I64_A64 = 426
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_SUB_I64_A64_S = 427
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XCHG_I32_A32 = 428
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XCHG_I32_A32_S = 429
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XCHG_I32_A64 = 430
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XCHG_I32_A64_S = 431
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XCHG_I64_A32 = 432
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XCHG_I64_A32_S = 433
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XCHG_I64_A64 = 434
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XCHG_I64_A64_S = 435
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XOR_I32_A32 = 436
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XOR_I32_A32_S = 437
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XOR_I32_A64 = 438
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XOR_I32_A64_S = 439
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XOR_I64_A32 = 440
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XOR_I64_A32_S = 441
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XOR_I64_A64 = 442
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XOR_I64_A64_S = 443
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_ADD_I64_A32 = 444
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_ADD_I64_A32_S = 445
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_ADD_I64_A64 = 446
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_ADD_I64_A64_S = 447
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_AND_I64_A32 = 448
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_AND_I64_A32_S = 449
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_AND_I64_A64 = 450
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_AND_I64_A64_S = 451
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_CMPXCHG_I64_A32 = 452
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_CMPXCHG_I64_A32_S = 453
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_CMPXCHG_I64_A64 = 454
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_CMPXCHG_I64_A64_S = 455
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_OR_I64_A32 = 456
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_OR_I64_A32_S = 457
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_OR_I64_A64 = 458
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_OR_I64_A64_S = 459
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_SUB_I64_A32 = 460
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_SUB_I64_A32_S = 461
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_SUB_I64_A64 = 462
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_SUB_I64_A64_S = 463
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_XCHG_I64_A32 = 464
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_XCHG_I64_A32_S = 465
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_XCHG_I64_A64 = 466
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_XCHG_I64_A64_S = 467
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_XOR_I64_A32 = 468
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_XOR_I64_A32_S = 469
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_XOR_I64_A64 = 470
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_XOR_I64_A64_S = 471
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_ADD_I32_A32 = 472
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_ADD_I32_A32_S = 473
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_ADD_I32_A64 = 474
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_ADD_I32_A64_S = 475
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_ADD_I64_A32 = 476
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_ADD_I64_A32_S = 477
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_ADD_I64_A64 = 478
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_ADD_I64_A64_S = 479
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_AND_I32_A32 = 480
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_AND_I32_A32_S = 481
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_AND_I32_A64 = 482
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_AND_I32_A64_S = 483
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_AND_I64_A32 = 484
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_AND_I64_A32_S = 485
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_AND_I64_A64 = 486
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_AND_I64_A64_S = 487
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_CMPXCHG_I32_A32 = 488
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_CMPXCHG_I32_A32_S = 489
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_CMPXCHG_I32_A64 = 490
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_CMPXCHG_I32_A64_S = 491
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_CMPXCHG_I64_A32 = 492
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_CMPXCHG_I64_A32_S = 493
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_CMPXCHG_I64_A64 = 494
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_CMPXCHG_I64_A64_S = 495
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_OR_I32_A32 = 496
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_OR_I32_A32_S = 497
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_OR_I32_A64 = 498
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_OR_I32_A64_S = 499
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_OR_I64_A32 = 500
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_OR_I64_A32_S = 501
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_OR_I64_A64 = 502
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_OR_I64_A64_S = 503
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_SUB_I32_A32 = 504
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_SUB_I32_A32_S = 505
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_SUB_I32_A64 = 506
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_SUB_I32_A64_S = 507
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_SUB_I64_A32 = 508
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_SUB_I64_A32_S = 509
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_SUB_I64_A64 = 510
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_SUB_I64_A64_S = 511
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XCHG_I32_A32 = 512
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XCHG_I32_A32_S = 513
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XCHG_I32_A64 = 514
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XCHG_I32_A64_S = 515
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XCHG_I64_A32 = 516
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XCHG_I64_A32_S = 517
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XCHG_I64_A64 = 518
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XCHG_I64_A64_S = 519
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XOR_I32_A32 = 520
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XOR_I32_A32_S = 521
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XOR_I32_A64 = 522
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XOR_I32_A64_S = 523
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XOR_I64_A32 = 524
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XOR_I64_A32_S = 525
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XOR_I64_A64 = 526
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XOR_I64_A64_S = 527
    CEFBS_HasAtomics, // ATOMIC_RMW_ADD_I32_A32 = 528
    CEFBS_HasAtomics, // ATOMIC_RMW_ADD_I32_A32_S = 529
    CEFBS_HasAtomics, // ATOMIC_RMW_ADD_I32_A64 = 530
    CEFBS_HasAtomics, // ATOMIC_RMW_ADD_I32_A64_S = 531
    CEFBS_HasAtomics, // ATOMIC_RMW_ADD_I64_A32 = 532
    CEFBS_HasAtomics, // ATOMIC_RMW_ADD_I64_A32_S = 533
    CEFBS_HasAtomics, // ATOMIC_RMW_ADD_I64_A64 = 534
    CEFBS_HasAtomics, // ATOMIC_RMW_ADD_I64_A64_S = 535
    CEFBS_HasAtomics, // ATOMIC_RMW_AND_I32_A32 = 536
    CEFBS_HasAtomics, // ATOMIC_RMW_AND_I32_A32_S = 537
    CEFBS_HasAtomics, // ATOMIC_RMW_AND_I32_A64 = 538
    CEFBS_HasAtomics, // ATOMIC_RMW_AND_I32_A64_S = 539
    CEFBS_HasAtomics, // ATOMIC_RMW_AND_I64_A32 = 540
    CEFBS_HasAtomics, // ATOMIC_RMW_AND_I64_A32_S = 541
    CEFBS_HasAtomics, // ATOMIC_RMW_AND_I64_A64 = 542
    CEFBS_HasAtomics, // ATOMIC_RMW_AND_I64_A64_S = 543
    CEFBS_HasAtomics, // ATOMIC_RMW_CMPXCHG_I32_A32 = 544
    CEFBS_HasAtomics, // ATOMIC_RMW_CMPXCHG_I32_A32_S = 545
    CEFBS_HasAtomics, // ATOMIC_RMW_CMPXCHG_I32_A64 = 546
    CEFBS_HasAtomics, // ATOMIC_RMW_CMPXCHG_I32_A64_S = 547
    CEFBS_HasAtomics, // ATOMIC_RMW_CMPXCHG_I64_A32 = 548
    CEFBS_HasAtomics, // ATOMIC_RMW_CMPXCHG_I64_A32_S = 549
    CEFBS_HasAtomics, // ATOMIC_RMW_CMPXCHG_I64_A64 = 550
    CEFBS_HasAtomics, // ATOMIC_RMW_CMPXCHG_I64_A64_S = 551
    CEFBS_HasAtomics, // ATOMIC_RMW_OR_I32_A32 = 552
    CEFBS_HasAtomics, // ATOMIC_RMW_OR_I32_A32_S = 553
    CEFBS_HasAtomics, // ATOMIC_RMW_OR_I32_A64 = 554
    CEFBS_HasAtomics, // ATOMIC_RMW_OR_I32_A64_S = 555
    CEFBS_HasAtomics, // ATOMIC_RMW_OR_I64_A32 = 556
    CEFBS_HasAtomics, // ATOMIC_RMW_OR_I64_A32_S = 557
    CEFBS_HasAtomics, // ATOMIC_RMW_OR_I64_A64 = 558
    CEFBS_HasAtomics, // ATOMIC_RMW_OR_I64_A64_S = 559
    CEFBS_HasAtomics, // ATOMIC_RMW_SUB_I32_A32 = 560
    CEFBS_HasAtomics, // ATOMIC_RMW_SUB_I32_A32_S = 561
    CEFBS_HasAtomics, // ATOMIC_RMW_SUB_I32_A64 = 562
    CEFBS_HasAtomics, // ATOMIC_RMW_SUB_I32_A64_S = 563
    CEFBS_HasAtomics, // ATOMIC_RMW_SUB_I64_A32 = 564
    CEFBS_HasAtomics, // ATOMIC_RMW_SUB_I64_A32_S = 565
    CEFBS_HasAtomics, // ATOMIC_RMW_SUB_I64_A64 = 566
    CEFBS_HasAtomics, // ATOMIC_RMW_SUB_I64_A64_S = 567
    CEFBS_HasAtomics, // ATOMIC_RMW_XCHG_I32_A32 = 568
    CEFBS_HasAtomics, // ATOMIC_RMW_XCHG_I32_A32_S = 569
    CEFBS_HasAtomics, // ATOMIC_RMW_XCHG_I32_A64 = 570
    CEFBS_HasAtomics, // ATOMIC_RMW_XCHG_I32_A64_S = 571
    CEFBS_HasAtomics, // ATOMIC_RMW_XCHG_I64_A32 = 572
    CEFBS_HasAtomics, // ATOMIC_RMW_XCHG_I64_A32_S = 573
    CEFBS_HasAtomics, // ATOMIC_RMW_XCHG_I64_A64 = 574
    CEFBS_HasAtomics, // ATOMIC_RMW_XCHG_I64_A64_S = 575
    CEFBS_HasAtomics, // ATOMIC_RMW_XOR_I32_A32 = 576
    CEFBS_HasAtomics, // ATOMIC_RMW_XOR_I32_A32_S = 577
    CEFBS_HasAtomics, // ATOMIC_RMW_XOR_I32_A64 = 578
    CEFBS_HasAtomics, // ATOMIC_RMW_XOR_I32_A64_S = 579
    CEFBS_HasAtomics, // ATOMIC_RMW_XOR_I64_A32 = 580
    CEFBS_HasAtomics, // ATOMIC_RMW_XOR_I64_A32_S = 581
    CEFBS_HasAtomics, // ATOMIC_RMW_XOR_I64_A64 = 582
    CEFBS_HasAtomics, // ATOMIC_RMW_XOR_I64_A64_S = 583
    CEFBS_HasAtomics, // ATOMIC_STORE16_I32_A32 = 584
    CEFBS_HasAtomics, // ATOMIC_STORE16_I32_A32_S = 585
    CEFBS_HasAtomics, // ATOMIC_STORE16_I32_A64 = 586
    CEFBS_HasAtomics, // ATOMIC_STORE16_I32_A64_S = 587
    CEFBS_HasAtomics, // ATOMIC_STORE16_I64_A32 = 588
    CEFBS_HasAtomics, // ATOMIC_STORE16_I64_A32_S = 589
    CEFBS_HasAtomics, // ATOMIC_STORE16_I64_A64 = 590
    CEFBS_HasAtomics, // ATOMIC_STORE16_I64_A64_S = 591
    CEFBS_HasAtomics, // ATOMIC_STORE32_I64_A32 = 592
    CEFBS_HasAtomics, // ATOMIC_STORE32_I64_A32_S = 593
    CEFBS_HasAtomics, // ATOMIC_STORE32_I64_A64 = 594
    CEFBS_HasAtomics, // ATOMIC_STORE32_I64_A64_S = 595
    CEFBS_HasAtomics, // ATOMIC_STORE8_I32_A32 = 596
    CEFBS_HasAtomics, // ATOMIC_STORE8_I32_A32_S = 597
    CEFBS_HasAtomics, // ATOMIC_STORE8_I32_A64 = 598
    CEFBS_HasAtomics, // ATOMIC_STORE8_I32_A64_S = 599
    CEFBS_HasAtomics, // ATOMIC_STORE8_I64_A32 = 600
    CEFBS_HasAtomics, // ATOMIC_STORE8_I64_A32_S = 601
    CEFBS_HasAtomics, // ATOMIC_STORE8_I64_A64 = 602
    CEFBS_HasAtomics, // ATOMIC_STORE8_I64_A64_S = 603
    CEFBS_HasAtomics, // ATOMIC_STORE_I32_A32 = 604
    CEFBS_HasAtomics, // ATOMIC_STORE_I32_A32_S = 605
    CEFBS_HasAtomics, // ATOMIC_STORE_I32_A64 = 606
    CEFBS_HasAtomics, // ATOMIC_STORE_I32_A64_S = 607
    CEFBS_HasAtomics, // ATOMIC_STORE_I64_A32 = 608
    CEFBS_HasAtomics, // ATOMIC_STORE_I64_A32_S = 609
    CEFBS_HasAtomics, // ATOMIC_STORE_I64_A64 = 610
    CEFBS_HasAtomics, // ATOMIC_STORE_I64_A64_S = 611
    CEFBS_HasSIMD128, // AVGR_U_I16x8 = 612
    CEFBS_HasSIMD128, // AVGR_U_I16x8_S = 613
    CEFBS_HasSIMD128, // AVGR_U_I8x16 = 614
    CEFBS_HasSIMD128, // AVGR_U_I8x16_S = 615
    CEFBS_HasSIMD128, // BITMASK_I16x8 = 616
    CEFBS_HasSIMD128, // BITMASK_I16x8_S = 617
    CEFBS_HasSIMD128, // BITMASK_I32x4 = 618
    CEFBS_HasSIMD128, // BITMASK_I32x4_S = 619
    CEFBS_HasSIMD128, // BITMASK_I64x2 = 620
    CEFBS_HasSIMD128, // BITMASK_I64x2_S = 621
    CEFBS_HasSIMD128, // BITMASK_I8x16 = 622
    CEFBS_HasSIMD128, // BITMASK_I8x16_S = 623
    CEFBS_HasSIMD128, // BITSELECT = 624
    CEFBS_HasSIMD128, // BITSELECT_S = 625
    CEFBS_None, // BLOCK = 626
    CEFBS_None, // BLOCK_S = 627
    CEFBS_None, // BR = 628
    CEFBS_None, // BR_IF = 629
    CEFBS_None, // BR_IF_S = 630
    CEFBS_None, // BR_S = 631
    CEFBS_None, // BR_TABLE_I32 = 632
    CEFBS_None, // BR_TABLE_I32_S = 633
    CEFBS_None, // BR_TABLE_I64 = 634
    CEFBS_None, // BR_TABLE_I64_S = 635
    CEFBS_None, // BR_UNLESS = 636
    CEFBS_None, // BR_UNLESS_S = 637
    CEFBS_None, // CALL = 638
    CEFBS_None, // CALL_INDIRECT = 639
    CEFBS_None, // CALL_INDIRECT_S = 640
    CEFBS_None, // CALL_S = 641
    CEFBS_HasExceptionHandling, // CATCH = 642
    CEFBS_HasExceptionHandling, // CATCH_ALL = 643
    CEFBS_HasExceptionHandling, // CATCH_ALL_S = 644
    CEFBS_HasExceptionHandling, // CATCH_S = 645
    CEFBS_None, // CEIL_F32 = 646
    CEFBS_None, // CEIL_F32_S = 647
    CEFBS_HasSIMD128, // CEIL_F32x4 = 648
    CEFBS_HasSIMD128, // CEIL_F32x4_S = 649
    CEFBS_None, // CEIL_F64 = 650
    CEFBS_None, // CEIL_F64_S = 651
    CEFBS_HasSIMD128, // CEIL_F64x2 = 652
    CEFBS_HasSIMD128, // CEIL_F64x2_S = 653
    CEFBS_None, // CLZ_I32 = 654
    CEFBS_None, // CLZ_I32_S = 655
    CEFBS_None, // CLZ_I64 = 656
    CEFBS_None, // CLZ_I64_S = 657
    CEFBS_None, // CONST_F32 = 658
    CEFBS_None, // CONST_F32_S = 659
    CEFBS_None, // CONST_F64 = 660
    CEFBS_None, // CONST_F64_S = 661
    CEFBS_None, // CONST_I32 = 662
    CEFBS_None, // CONST_I32_S = 663
    CEFBS_None, // CONST_I64 = 664
    CEFBS_None, // CONST_I64_S = 665
    CEFBS_HasSIMD128, // CONST_V128_F32x4 = 666
    CEFBS_HasSIMD128, // CONST_V128_F32x4_S = 667
    CEFBS_HasSIMD128, // CONST_V128_F64x2 = 668
    CEFBS_HasSIMD128, // CONST_V128_F64x2_S = 669
    CEFBS_HasSIMD128, // CONST_V128_I16x8 = 670
    CEFBS_HasSIMD128, // CONST_V128_I16x8_S = 671
    CEFBS_HasSIMD128, // CONST_V128_I32x4 = 672
    CEFBS_HasSIMD128, // CONST_V128_I32x4_S = 673
    CEFBS_HasSIMD128, // CONST_V128_I64x2 = 674
    CEFBS_HasSIMD128, // CONST_V128_I64x2_S = 675
    CEFBS_HasSIMD128, // CONST_V128_I8x16 = 676
    CEFBS_HasSIMD128, // CONST_V128_I8x16_S = 677
    CEFBS_None, // COPYSIGN_F32 = 678
    CEFBS_None, // COPYSIGN_F32_S = 679
    CEFBS_None, // COPYSIGN_F64 = 680
    CEFBS_None, // COPYSIGN_F64_S = 681
    CEFBS_HasReferenceTypes, // COPY_EXTERNREF = 682
    CEFBS_HasReferenceTypes, // COPY_EXTERNREF_S = 683
    CEFBS_None, // COPY_F32 = 684
    CEFBS_None, // COPY_F32_S = 685
    CEFBS_None, // COPY_F64 = 686
    CEFBS_None, // COPY_F64_S = 687
    CEFBS_HasReferenceTypes, // COPY_FUNCREF = 688
    CEFBS_HasReferenceTypes, // COPY_FUNCREF_S = 689
    CEFBS_None, // COPY_I32 = 690
    CEFBS_None, // COPY_I32_S = 691
    CEFBS_None, // COPY_I64 = 692
    CEFBS_None, // COPY_I64_S = 693
    CEFBS_HasSIMD128, // COPY_V128 = 694
    CEFBS_HasSIMD128, // COPY_V128_S = 695
    CEFBS_None, // CTZ_I32 = 696
    CEFBS_None, // CTZ_I32_S = 697
    CEFBS_None, // CTZ_I64 = 698
    CEFBS_None, // CTZ_I64_S = 699
    CEFBS_None, // DEBUG_UNREACHABLE = 700
    CEFBS_None, // DEBUG_UNREACHABLE_S = 701
    CEFBS_HasExceptionHandling, // DELEGATE = 702
    CEFBS_HasExceptionHandling, // DELEGATE_S = 703
    CEFBS_None, // DIV_F32 = 704
    CEFBS_None, // DIV_F32_S = 705
    CEFBS_HasSIMD128, // DIV_F32x4 = 706
    CEFBS_HasSIMD128, // DIV_F32x4_S = 707
    CEFBS_None, // DIV_F64 = 708
    CEFBS_None, // DIV_F64_S = 709
    CEFBS_HasSIMD128, // DIV_F64x2 = 710
    CEFBS_HasSIMD128, // DIV_F64x2_S = 711
    CEFBS_None, // DIV_S_I32 = 712
    CEFBS_None, // DIV_S_I32_S = 713
    CEFBS_None, // DIV_S_I64 = 714
    CEFBS_None, // DIV_S_I64_S = 715
    CEFBS_None, // DIV_U_I32 = 716
    CEFBS_None, // DIV_U_I32_S = 717
    CEFBS_None, // DIV_U_I64 = 718
    CEFBS_None, // DIV_U_I64_S = 719
    CEFBS_HasSIMD128, // DOT = 720
    CEFBS_HasSIMD128, // DOT_S = 721
    CEFBS_HasReferenceTypes, // DROP_EXTERNREF = 722
    CEFBS_HasReferenceTypes, // DROP_EXTERNREF_S = 723
    CEFBS_None, // DROP_F32 = 724
    CEFBS_None, // DROP_F32_S = 725
    CEFBS_None, // DROP_F64 = 726
    CEFBS_None, // DROP_F64_S = 727
    CEFBS_HasReferenceTypes, // DROP_FUNCREF = 728
    CEFBS_HasReferenceTypes, // DROP_FUNCREF_S = 729
    CEFBS_None, // DROP_I32 = 730
    CEFBS_None, // DROP_I32_S = 731
    CEFBS_None, // DROP_I64 = 732
    CEFBS_None, // DROP_I64_S = 733
    CEFBS_HasSIMD128, // DROP_V128 = 734
    CEFBS_HasSIMD128, // DROP_V128_S = 735
    CEFBS_None, // ELSE = 736
    CEFBS_None, // ELSE_S = 737
    CEFBS_None, // END = 738
    CEFBS_None, // END_BLOCK = 739
    CEFBS_None, // END_BLOCK_S = 740
    CEFBS_None, // END_FUNCTION = 741
    CEFBS_None, // END_FUNCTION_S = 742
    CEFBS_None, // END_IF = 743
    CEFBS_None, // END_IF_S = 744
    CEFBS_None, // END_LOOP = 745
    CEFBS_None, // END_LOOP_S = 746
    CEFBS_None, // END_S = 747
    CEFBS_HasExceptionHandling, // END_TRY = 748
    CEFBS_HasExceptionHandling, // END_TRY_S = 749
    CEFBS_None, // EQZ_I32 = 750
    CEFBS_None, // EQZ_I32_S = 751
    CEFBS_None, // EQZ_I64 = 752
    CEFBS_None, // EQZ_I64_S = 753
    CEFBS_None, // EQ_F32 = 754
    CEFBS_None, // EQ_F32_S = 755
    CEFBS_HasSIMD128, // EQ_F32x4 = 756
    CEFBS_HasSIMD128, // EQ_F32x4_S = 757
    CEFBS_None, // EQ_F64 = 758
    CEFBS_None, // EQ_F64_S = 759
    CEFBS_HasSIMD128, // EQ_F64x2 = 760
    CEFBS_HasSIMD128, // EQ_F64x2_S = 761
    CEFBS_HasSIMD128, // EQ_I16x8 = 762
    CEFBS_HasSIMD128, // EQ_I16x8_S = 763
    CEFBS_None, // EQ_I32 = 764
    CEFBS_None, // EQ_I32_S = 765
    CEFBS_HasSIMD128, // EQ_I32x4 = 766
    CEFBS_HasSIMD128, // EQ_I32x4_S = 767
    CEFBS_None, // EQ_I64 = 768
    CEFBS_None, // EQ_I64_S = 769
    CEFBS_HasSIMD128, // EQ_I64x2 = 770
    CEFBS_HasSIMD128, // EQ_I64x2_S = 771
    CEFBS_HasSIMD128, // EQ_I8x16 = 772
    CEFBS_HasSIMD128, // EQ_I8x16_S = 773
    CEFBS_HasSIMD128, // EXTMUL_HIGH_S_I16x8 = 774
    CEFBS_HasSIMD128, // EXTMUL_HIGH_S_I16x8_S = 775
    CEFBS_HasSIMD128, // EXTMUL_HIGH_S_I32x4 = 776
    CEFBS_HasSIMD128, // EXTMUL_HIGH_S_I32x4_S = 777
    CEFBS_HasSIMD128, // EXTMUL_HIGH_S_I64x2 = 778
    CEFBS_HasSIMD128, // EXTMUL_HIGH_S_I64x2_S = 779
    CEFBS_HasSIMD128, // EXTMUL_HIGH_U_I16x8 = 780
    CEFBS_HasSIMD128, // EXTMUL_HIGH_U_I16x8_S = 781
    CEFBS_HasSIMD128, // EXTMUL_HIGH_U_I32x4 = 782
    CEFBS_HasSIMD128, // EXTMUL_HIGH_U_I32x4_S = 783
    CEFBS_HasSIMD128, // EXTMUL_HIGH_U_I64x2 = 784
    CEFBS_HasSIMD128, // EXTMUL_HIGH_U_I64x2_S = 785
    CEFBS_HasSIMD128, // EXTMUL_LOW_S_I16x8 = 786
    CEFBS_HasSIMD128, // EXTMUL_LOW_S_I16x8_S = 787
    CEFBS_HasSIMD128, // EXTMUL_LOW_S_I32x4 = 788
    CEFBS_HasSIMD128, // EXTMUL_LOW_S_I32x4_S = 789
    CEFBS_HasSIMD128, // EXTMUL_LOW_S_I64x2 = 790
    CEFBS_HasSIMD128, // EXTMUL_LOW_S_I64x2_S = 791
    CEFBS_HasSIMD128, // EXTMUL_LOW_U_I16x8 = 792
    CEFBS_HasSIMD128, // EXTMUL_LOW_U_I16x8_S = 793
    CEFBS_HasSIMD128, // EXTMUL_LOW_U_I32x4 = 794
    CEFBS_HasSIMD128, // EXTMUL_LOW_U_I32x4_S = 795
    CEFBS_HasSIMD128, // EXTMUL_LOW_U_I64x2 = 796
    CEFBS_HasSIMD128, // EXTMUL_LOW_U_I64x2_S = 797
    CEFBS_HasSIMD128, // EXTRACT_LANE_F32x4 = 798
    CEFBS_HasSIMD128, // EXTRACT_LANE_F32x4_S = 799
    CEFBS_HasSIMD128, // EXTRACT_LANE_F64x2 = 800
    CEFBS_HasSIMD128, // EXTRACT_LANE_F64x2_S = 801
    CEFBS_HasSIMD128, // EXTRACT_LANE_I16x8_s = 802
    CEFBS_HasSIMD128, // EXTRACT_LANE_I16x8_s_S = 803
    CEFBS_HasSIMD128, // EXTRACT_LANE_I16x8_u = 804
    CEFBS_HasSIMD128, // EXTRACT_LANE_I16x8_u_S = 805
    CEFBS_HasSIMD128, // EXTRACT_LANE_I32x4 = 806
    CEFBS_HasSIMD128, // EXTRACT_LANE_I32x4_S = 807
    CEFBS_HasSIMD128, // EXTRACT_LANE_I64x2 = 808
    CEFBS_HasSIMD128, // EXTRACT_LANE_I64x2_S = 809
    CEFBS_HasSIMD128, // EXTRACT_LANE_I8x16_s = 810
    CEFBS_HasSIMD128, // EXTRACT_LANE_I8x16_s_S = 811
    CEFBS_HasSIMD128, // EXTRACT_LANE_I8x16_u = 812
    CEFBS_HasSIMD128, // EXTRACT_LANE_I8x16_u_S = 813
    CEFBS_None, // F32_CONVERT_S_I32 = 814
    CEFBS_None, // F32_CONVERT_S_I32_S = 815
    CEFBS_None, // F32_CONVERT_S_I64 = 816
    CEFBS_None, // F32_CONVERT_S_I64_S = 817
    CEFBS_None, // F32_CONVERT_U_I32 = 818
    CEFBS_None, // F32_CONVERT_U_I32_S = 819
    CEFBS_None, // F32_CONVERT_U_I64 = 820
    CEFBS_None, // F32_CONVERT_U_I64_S = 821
    CEFBS_None, // F32_DEMOTE_F64 = 822
    CEFBS_None, // F32_DEMOTE_F64_S = 823
    CEFBS_None, // F32_REINTERPRET_I32 = 824
    CEFBS_None, // F32_REINTERPRET_I32_S = 825
    CEFBS_None, // F64_CONVERT_S_I32 = 826
    CEFBS_None, // F64_CONVERT_S_I32_S = 827
    CEFBS_None, // F64_CONVERT_S_I64 = 828
    CEFBS_None, // F64_CONVERT_S_I64_S = 829
    CEFBS_None, // F64_CONVERT_U_I32 = 830
    CEFBS_None, // F64_CONVERT_U_I32_S = 831
    CEFBS_None, // F64_CONVERT_U_I64 = 832
    CEFBS_None, // F64_CONVERT_U_I64_S = 833
    CEFBS_None, // F64_PROMOTE_F32 = 834
    CEFBS_None, // F64_PROMOTE_F32_S = 835
    CEFBS_None, // F64_REINTERPRET_I64 = 836
    CEFBS_None, // F64_REINTERPRET_I64_S = 837
    CEFBS_None, // FALLTHROUGH_RETURN = 838
    CEFBS_None, // FALLTHROUGH_RETURN_S = 839
    CEFBS_None, // FLOOR_F32 = 840
    CEFBS_None, // FLOOR_F32_S = 841
    CEFBS_HasSIMD128, // FLOOR_F32x4 = 842
    CEFBS_HasSIMD128, // FLOOR_F32x4_S = 843
    CEFBS_None, // FLOOR_F64 = 844
    CEFBS_None, // FLOOR_F64_S = 845
    CEFBS_HasSIMD128, // FLOOR_F64x2 = 846
    CEFBS_HasSIMD128, // FLOOR_F64x2_S = 847
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_SINT_I32_F32 = 848
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_SINT_I32_F32_S = 849
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_SINT_I32_F64 = 850
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_SINT_I32_F64_S = 851
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_SINT_I64_F32 = 852
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_SINT_I64_F32_S = 853
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_SINT_I64_F64 = 854
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_SINT_I64_F64_S = 855
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_UINT_I32_F32 = 856
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_UINT_I32_F32_S = 857
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_UINT_I32_F64 = 858
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_UINT_I32_F64_S = 859
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_UINT_I64_F32 = 860
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_UINT_I64_F32_S = 861
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_UINT_I64_F64 = 862
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_UINT_I64_F64_S = 863
    CEFBS_None, // GE_F32 = 864
    CEFBS_None, // GE_F32_S = 865
    CEFBS_HasSIMD128, // GE_F32x4 = 866
    CEFBS_HasSIMD128, // GE_F32x4_S = 867
    CEFBS_None, // GE_F64 = 868
    CEFBS_None, // GE_F64_S = 869
    CEFBS_HasSIMD128, // GE_F64x2 = 870
    CEFBS_HasSIMD128, // GE_F64x2_S = 871
    CEFBS_HasSIMD128, // GE_S_I16x8 = 872
    CEFBS_HasSIMD128, // GE_S_I16x8_S = 873
    CEFBS_None, // GE_S_I32 = 874
    CEFBS_None, // GE_S_I32_S = 875
    CEFBS_HasSIMD128, // GE_S_I32x4 = 876
    CEFBS_HasSIMD128, // GE_S_I32x4_S = 877
    CEFBS_None, // GE_S_I64 = 878
    CEFBS_None, // GE_S_I64_S = 879
    CEFBS_HasSIMD128, // GE_S_I64x2 = 880
    CEFBS_HasSIMD128, // GE_S_I64x2_S = 881
    CEFBS_HasSIMD128, // GE_S_I8x16 = 882
    CEFBS_HasSIMD128, // GE_S_I8x16_S = 883
    CEFBS_HasSIMD128, // GE_U_I16x8 = 884
    CEFBS_HasSIMD128, // GE_U_I16x8_S = 885
    CEFBS_None, // GE_U_I32 = 886
    CEFBS_None, // GE_U_I32_S = 887
    CEFBS_HasSIMD128, // GE_U_I32x4 = 888
    CEFBS_HasSIMD128, // GE_U_I32x4_S = 889
    CEFBS_None, // GE_U_I64 = 890
    CEFBS_None, // GE_U_I64_S = 891
    CEFBS_HasSIMD128, // GE_U_I8x16 = 892
    CEFBS_HasSIMD128, // GE_U_I8x16_S = 893
    CEFBS_HasReferenceTypes, // GLOBAL_GET_EXTERNREF = 894
    CEFBS_HasReferenceTypes, // GLOBAL_GET_EXTERNREF_S = 895
    CEFBS_None, // GLOBAL_GET_F32 = 896
    CEFBS_None, // GLOBAL_GET_F32_S = 897
    CEFBS_None, // GLOBAL_GET_F64 = 898
    CEFBS_None, // GLOBAL_GET_F64_S = 899
    CEFBS_HasReferenceTypes, // GLOBAL_GET_FUNCREF = 900
    CEFBS_HasReferenceTypes, // GLOBAL_GET_FUNCREF_S = 901
    CEFBS_None, // GLOBAL_GET_I32 = 902
    CEFBS_None, // GLOBAL_GET_I32_S = 903
    CEFBS_None, // GLOBAL_GET_I64 = 904
    CEFBS_None, // GLOBAL_GET_I64_S = 905
    CEFBS_HasSIMD128, // GLOBAL_GET_V128 = 906
    CEFBS_HasSIMD128, // GLOBAL_GET_V128_S = 907
    CEFBS_HasReferenceTypes, // GLOBAL_SET_EXTERNREF = 908
    CEFBS_HasReferenceTypes, // GLOBAL_SET_EXTERNREF_S = 909
    CEFBS_None, // GLOBAL_SET_F32 = 910
    CEFBS_None, // GLOBAL_SET_F32_S = 911
    CEFBS_None, // GLOBAL_SET_F64 = 912
    CEFBS_None, // GLOBAL_SET_F64_S = 913
    CEFBS_HasReferenceTypes, // GLOBAL_SET_FUNCREF = 914
    CEFBS_HasReferenceTypes, // GLOBAL_SET_FUNCREF_S = 915
    CEFBS_None, // GLOBAL_SET_I32 = 916
    CEFBS_None, // GLOBAL_SET_I32_S = 917
    CEFBS_None, // GLOBAL_SET_I64 = 918
    CEFBS_None, // GLOBAL_SET_I64_S = 919
    CEFBS_HasSIMD128, // GLOBAL_SET_V128 = 920
    CEFBS_HasSIMD128, // GLOBAL_SET_V128_S = 921
    CEFBS_None, // GT_F32 = 922
    CEFBS_None, // GT_F32_S = 923
    CEFBS_HasSIMD128, // GT_F32x4 = 924
    CEFBS_HasSIMD128, // GT_F32x4_S = 925
    CEFBS_None, // GT_F64 = 926
    CEFBS_None, // GT_F64_S = 927
    CEFBS_HasSIMD128, // GT_F64x2 = 928
    CEFBS_HasSIMD128, // GT_F64x2_S = 929
    CEFBS_HasSIMD128, // GT_S_I16x8 = 930
    CEFBS_HasSIMD128, // GT_S_I16x8_S = 931
    CEFBS_None, // GT_S_I32 = 932
    CEFBS_None, // GT_S_I32_S = 933
    CEFBS_HasSIMD128, // GT_S_I32x4 = 934
    CEFBS_HasSIMD128, // GT_S_I32x4_S = 935
    CEFBS_None, // GT_S_I64 = 936
    CEFBS_None, // GT_S_I64_S = 937
    CEFBS_HasSIMD128, // GT_S_I64x2 = 938
    CEFBS_HasSIMD128, // GT_S_I64x2_S = 939
    CEFBS_HasSIMD128, // GT_S_I8x16 = 940
    CEFBS_HasSIMD128, // GT_S_I8x16_S = 941
    CEFBS_HasSIMD128, // GT_U_I16x8 = 942
    CEFBS_HasSIMD128, // GT_U_I16x8_S = 943
    CEFBS_None, // GT_U_I32 = 944
    CEFBS_None, // GT_U_I32_S = 945
    CEFBS_HasSIMD128, // GT_U_I32x4 = 946
    CEFBS_HasSIMD128, // GT_U_I32x4_S = 947
    CEFBS_None, // GT_U_I64 = 948
    CEFBS_None, // GT_U_I64_S = 949
    CEFBS_HasSIMD128, // GT_U_I8x16 = 950
    CEFBS_HasSIMD128, // GT_U_I8x16_S = 951
    CEFBS_HasSignExt, // I32_EXTEND16_S_I32 = 952
    CEFBS_HasSignExt, // I32_EXTEND16_S_I32_S = 953
    CEFBS_HasSignExt, // I32_EXTEND8_S_I32 = 954
    CEFBS_HasSignExt, // I32_EXTEND8_S_I32_S = 955
    CEFBS_None, // I32_REINTERPRET_F32 = 956
    CEFBS_None, // I32_REINTERPRET_F32_S = 957
    CEFBS_None, // I32_TRUNC_S_F32 = 958
    CEFBS_None, // I32_TRUNC_S_F32_S = 959
    CEFBS_None, // I32_TRUNC_S_F64 = 960
    CEFBS_None, // I32_TRUNC_S_F64_S = 961
    CEFBS_HasNontrappingFPToInt, // I32_TRUNC_S_SAT_F32 = 962
    CEFBS_HasNontrappingFPToInt, // I32_TRUNC_S_SAT_F32_S = 963
    CEFBS_HasNontrappingFPToInt, // I32_TRUNC_S_SAT_F64 = 964
    CEFBS_HasNontrappingFPToInt, // I32_TRUNC_S_SAT_F64_S = 965
    CEFBS_None, // I32_TRUNC_U_F32 = 966
    CEFBS_None, // I32_TRUNC_U_F32_S = 967
    CEFBS_None, // I32_TRUNC_U_F64 = 968
    CEFBS_None, // I32_TRUNC_U_F64_S = 969
    CEFBS_HasNontrappingFPToInt, // I32_TRUNC_U_SAT_F32 = 970
    CEFBS_HasNontrappingFPToInt, // I32_TRUNC_U_SAT_F32_S = 971
    CEFBS_HasNontrappingFPToInt, // I32_TRUNC_U_SAT_F64 = 972
    CEFBS_HasNontrappingFPToInt, // I32_TRUNC_U_SAT_F64_S = 973
    CEFBS_None, // I32_WRAP_I64 = 974
    CEFBS_None, // I32_WRAP_I64_S = 975
    CEFBS_HasSignExt, // I64_EXTEND16_S_I64 = 976
    CEFBS_HasSignExt, // I64_EXTEND16_S_I64_S = 977
    CEFBS_HasSignExt, // I64_EXTEND32_S_I64 = 978
    CEFBS_HasSignExt, // I64_EXTEND32_S_I64_S = 979
    CEFBS_HasSignExt, // I64_EXTEND8_S_I64 = 980
    CEFBS_HasSignExt, // I64_EXTEND8_S_I64_S = 981
    CEFBS_None, // I64_EXTEND_S_I32 = 982
    CEFBS_None, // I64_EXTEND_S_I32_S = 983
    CEFBS_None, // I64_EXTEND_U_I32 = 984
    CEFBS_None, // I64_EXTEND_U_I32_S = 985
    CEFBS_None, // I64_REINTERPRET_F64 = 986
    CEFBS_None, // I64_REINTERPRET_F64_S = 987
    CEFBS_None, // I64_TRUNC_S_F32 = 988
    CEFBS_None, // I64_TRUNC_S_F32_S = 989
    CEFBS_None, // I64_TRUNC_S_F64 = 990
    CEFBS_None, // I64_TRUNC_S_F64_S = 991
    CEFBS_HasNontrappingFPToInt, // I64_TRUNC_S_SAT_F32 = 992
    CEFBS_HasNontrappingFPToInt, // I64_TRUNC_S_SAT_F32_S = 993
    CEFBS_HasNontrappingFPToInt, // I64_TRUNC_S_SAT_F64 = 994
    CEFBS_HasNontrappingFPToInt, // I64_TRUNC_S_SAT_F64_S = 995
    CEFBS_None, // I64_TRUNC_U_F32 = 996
    CEFBS_None, // I64_TRUNC_U_F32_S = 997
    CEFBS_None, // I64_TRUNC_U_F64 = 998
    CEFBS_None, // I64_TRUNC_U_F64_S = 999
    CEFBS_HasNontrappingFPToInt, // I64_TRUNC_U_SAT_F32 = 1000
    CEFBS_HasNontrappingFPToInt, // I64_TRUNC_U_SAT_F32_S = 1001
    CEFBS_HasNontrappingFPToInt, // I64_TRUNC_U_SAT_F64 = 1002
    CEFBS_HasNontrappingFPToInt, // I64_TRUNC_U_SAT_F64_S = 1003
    CEFBS_None, // IF = 1004
    CEFBS_None, // IF_S = 1005
    CEFBS_HasRelaxedSIMD, // LANESELECT_I16x8 = 1006
    CEFBS_HasRelaxedSIMD, // LANESELECT_I16x8_S = 1007
    CEFBS_HasRelaxedSIMD, // LANESELECT_I32x4 = 1008
    CEFBS_HasRelaxedSIMD, // LANESELECT_I32x4_S = 1009
    CEFBS_HasRelaxedSIMD, // LANESELECT_I64x2 = 1010
    CEFBS_HasRelaxedSIMD, // LANESELECT_I64x2_S = 1011
    CEFBS_HasRelaxedSIMD, // LANESELECT_I8x16 = 1012
    CEFBS_HasRelaxedSIMD, // LANESELECT_I8x16_S = 1013
    CEFBS_None, // LE_F32 = 1014
    CEFBS_None, // LE_F32_S = 1015
    CEFBS_HasSIMD128, // LE_F32x4 = 1016
    CEFBS_HasSIMD128, // LE_F32x4_S = 1017
    CEFBS_None, // LE_F64 = 1018
    CEFBS_None, // LE_F64_S = 1019
    CEFBS_HasSIMD128, // LE_F64x2 = 1020
    CEFBS_HasSIMD128, // LE_F64x2_S = 1021
    CEFBS_HasSIMD128, // LE_S_I16x8 = 1022
    CEFBS_HasSIMD128, // LE_S_I16x8_S = 1023
    CEFBS_None, // LE_S_I32 = 1024
    CEFBS_None, // LE_S_I32_S = 1025
    CEFBS_HasSIMD128, // LE_S_I32x4 = 1026
    CEFBS_HasSIMD128, // LE_S_I32x4_S = 1027
    CEFBS_None, // LE_S_I64 = 1028
    CEFBS_None, // LE_S_I64_S = 1029
    CEFBS_HasSIMD128, // LE_S_I64x2 = 1030
    CEFBS_HasSIMD128, // LE_S_I64x2_S = 1031
    CEFBS_HasSIMD128, // LE_S_I8x16 = 1032
    CEFBS_HasSIMD128, // LE_S_I8x16_S = 1033
    CEFBS_HasSIMD128, // LE_U_I16x8 = 1034
    CEFBS_HasSIMD128, // LE_U_I16x8_S = 1035
    CEFBS_None, // LE_U_I32 = 1036
    CEFBS_None, // LE_U_I32_S = 1037
    CEFBS_HasSIMD128, // LE_U_I32x4 = 1038
    CEFBS_HasSIMD128, // LE_U_I32x4_S = 1039
    CEFBS_None, // LE_U_I64 = 1040
    CEFBS_None, // LE_U_I64_S = 1041
    CEFBS_HasSIMD128, // LE_U_I8x16 = 1042
    CEFBS_HasSIMD128, // LE_U_I8x16_S = 1043
    CEFBS_HasSIMD128, // LOAD16_SPLAT_A32 = 1044
    CEFBS_HasSIMD128, // LOAD16_SPLAT_A32_S = 1045
    CEFBS_HasSIMD128, // LOAD16_SPLAT_A64 = 1046
    CEFBS_HasSIMD128, // LOAD16_SPLAT_A64_S = 1047
    CEFBS_None, // LOAD16_S_I32_A32 = 1048
    CEFBS_None, // LOAD16_S_I32_A32_S = 1049
    CEFBS_None, // LOAD16_S_I32_A64 = 1050
    CEFBS_None, // LOAD16_S_I32_A64_S = 1051
    CEFBS_None, // LOAD16_S_I64_A32 = 1052
    CEFBS_None, // LOAD16_S_I64_A32_S = 1053
    CEFBS_None, // LOAD16_S_I64_A64 = 1054
    CEFBS_None, // LOAD16_S_I64_A64_S = 1055
    CEFBS_None, // LOAD16_U_I32_A32 = 1056
    CEFBS_None, // LOAD16_U_I32_A32_S = 1057
    CEFBS_None, // LOAD16_U_I32_A64 = 1058
    CEFBS_None, // LOAD16_U_I32_A64_S = 1059
    CEFBS_None, // LOAD16_U_I64_A32 = 1060
    CEFBS_None, // LOAD16_U_I64_A32_S = 1061
    CEFBS_None, // LOAD16_U_I64_A64 = 1062
    CEFBS_None, // LOAD16_U_I64_A64_S = 1063
    CEFBS_HasSIMD128, // LOAD32_SPLAT_A32 = 1064
    CEFBS_HasSIMD128, // LOAD32_SPLAT_A32_S = 1065
    CEFBS_HasSIMD128, // LOAD32_SPLAT_A64 = 1066
    CEFBS_HasSIMD128, // LOAD32_SPLAT_A64_S = 1067
    CEFBS_None, // LOAD32_S_I64_A32 = 1068
    CEFBS_None, // LOAD32_S_I64_A32_S = 1069
    CEFBS_None, // LOAD32_S_I64_A64 = 1070
    CEFBS_None, // LOAD32_S_I64_A64_S = 1071
    CEFBS_None, // LOAD32_U_I64_A32 = 1072
    CEFBS_None, // LOAD32_U_I64_A32_S = 1073
    CEFBS_None, // LOAD32_U_I64_A64 = 1074
    CEFBS_None, // LOAD32_U_I64_A64_S = 1075
    CEFBS_HasSIMD128, // LOAD64_SPLAT_A32 = 1076
    CEFBS_HasSIMD128, // LOAD64_SPLAT_A32_S = 1077
    CEFBS_HasSIMD128, // LOAD64_SPLAT_A64 = 1078
    CEFBS_HasSIMD128, // LOAD64_SPLAT_A64_S = 1079
    CEFBS_HasSIMD128, // LOAD8_SPLAT_A32 = 1080
    CEFBS_HasSIMD128, // LOAD8_SPLAT_A32_S = 1081
    CEFBS_HasSIMD128, // LOAD8_SPLAT_A64 = 1082
    CEFBS_HasSIMD128, // LOAD8_SPLAT_A64_S = 1083
    CEFBS_None, // LOAD8_S_I32_A32 = 1084
    CEFBS_None, // LOAD8_S_I32_A32_S = 1085
    CEFBS_None, // LOAD8_S_I32_A64 = 1086
    CEFBS_None, // LOAD8_S_I32_A64_S = 1087
    CEFBS_None, // LOAD8_S_I64_A32 = 1088
    CEFBS_None, // LOAD8_S_I64_A32_S = 1089
    CEFBS_None, // LOAD8_S_I64_A64 = 1090
    CEFBS_None, // LOAD8_S_I64_A64_S = 1091
    CEFBS_None, // LOAD8_U_I32_A32 = 1092
    CEFBS_None, // LOAD8_U_I32_A32_S = 1093
    CEFBS_None, // LOAD8_U_I32_A64 = 1094
    CEFBS_None, // LOAD8_U_I32_A64_S = 1095
    CEFBS_None, // LOAD8_U_I64_A32 = 1096
    CEFBS_None, // LOAD8_U_I64_A32_S = 1097
    CEFBS_None, // LOAD8_U_I64_A64 = 1098
    CEFBS_None, // LOAD8_U_I64_A64_S = 1099
    CEFBS_HasSIMD128, // LOAD_EXTEND_S_I16x8_A32 = 1100
    CEFBS_HasSIMD128, // LOAD_EXTEND_S_I16x8_A32_S = 1101
    CEFBS_HasSIMD128, // LOAD_EXTEND_S_I16x8_A64 = 1102
    CEFBS_HasSIMD128, // LOAD_EXTEND_S_I16x8_A64_S = 1103
    CEFBS_HasSIMD128, // LOAD_EXTEND_S_I32x4_A32 = 1104
    CEFBS_HasSIMD128, // LOAD_EXTEND_S_I32x4_A32_S = 1105
    CEFBS_HasSIMD128, // LOAD_EXTEND_S_I32x4_A64 = 1106
    CEFBS_HasSIMD128, // LOAD_EXTEND_S_I32x4_A64_S = 1107
    CEFBS_HasSIMD128, // LOAD_EXTEND_S_I64x2_A32 = 1108
    CEFBS_HasSIMD128, // LOAD_EXTEND_S_I64x2_A32_S = 1109
    CEFBS_HasSIMD128, // LOAD_EXTEND_S_I64x2_A64 = 1110
    CEFBS_HasSIMD128, // LOAD_EXTEND_S_I64x2_A64_S = 1111
    CEFBS_HasSIMD128, // LOAD_EXTEND_U_I16x8_A32 = 1112
    CEFBS_HasSIMD128, // LOAD_EXTEND_U_I16x8_A32_S = 1113
    CEFBS_HasSIMD128, // LOAD_EXTEND_U_I16x8_A64 = 1114
    CEFBS_HasSIMD128, // LOAD_EXTEND_U_I16x8_A64_S = 1115
    CEFBS_HasSIMD128, // LOAD_EXTEND_U_I32x4_A32 = 1116
    CEFBS_HasSIMD128, // LOAD_EXTEND_U_I32x4_A32_S = 1117
    CEFBS_HasSIMD128, // LOAD_EXTEND_U_I32x4_A64 = 1118
    CEFBS_HasSIMD128, // LOAD_EXTEND_U_I32x4_A64_S = 1119
    CEFBS_HasSIMD128, // LOAD_EXTEND_U_I64x2_A32 = 1120
    CEFBS_HasSIMD128, // LOAD_EXTEND_U_I64x2_A32_S = 1121
    CEFBS_HasSIMD128, // LOAD_EXTEND_U_I64x2_A64 = 1122
    CEFBS_HasSIMD128, // LOAD_EXTEND_U_I64x2_A64_S = 1123
    CEFBS_None, // LOAD_F32_A32 = 1124
    CEFBS_None, // LOAD_F32_A32_S = 1125
    CEFBS_None, // LOAD_F32_A64 = 1126
    CEFBS_None, // LOAD_F32_A64_S = 1127
    CEFBS_None, // LOAD_F64_A32 = 1128
    CEFBS_None, // LOAD_F64_A32_S = 1129
    CEFBS_None, // LOAD_F64_A64 = 1130
    CEFBS_None, // LOAD_F64_A64_S = 1131
    CEFBS_None, // LOAD_I32_A32 = 1132
    CEFBS_None, // LOAD_I32_A32_S = 1133
    CEFBS_None, // LOAD_I32_A64 = 1134
    CEFBS_None, // LOAD_I32_A64_S = 1135
    CEFBS_None, // LOAD_I64_A32 = 1136
    CEFBS_None, // LOAD_I64_A32_S = 1137
    CEFBS_None, // LOAD_I64_A64 = 1138
    CEFBS_None, // LOAD_I64_A64_S = 1139
    CEFBS_HasSIMD128, // LOAD_LANE_I16x8_A32 = 1140
    CEFBS_HasSIMD128, // LOAD_LANE_I16x8_A32_S = 1141
    CEFBS_HasSIMD128, // LOAD_LANE_I16x8_A64 = 1142
    CEFBS_HasSIMD128, // LOAD_LANE_I16x8_A64_S = 1143
    CEFBS_HasSIMD128, // LOAD_LANE_I32x4_A32 = 1144
    CEFBS_HasSIMD128, // LOAD_LANE_I32x4_A32_S = 1145
    CEFBS_HasSIMD128, // LOAD_LANE_I32x4_A64 = 1146
    CEFBS_HasSIMD128, // LOAD_LANE_I32x4_A64_S = 1147
    CEFBS_HasSIMD128, // LOAD_LANE_I64x2_A32 = 1148
    CEFBS_HasSIMD128, // LOAD_LANE_I64x2_A32_S = 1149
    CEFBS_HasSIMD128, // LOAD_LANE_I64x2_A64 = 1150
    CEFBS_HasSIMD128, // LOAD_LANE_I64x2_A64_S = 1151
    CEFBS_HasSIMD128, // LOAD_LANE_I8x16_A32 = 1152
    CEFBS_HasSIMD128, // LOAD_LANE_I8x16_A32_S = 1153
    CEFBS_HasSIMD128, // LOAD_LANE_I8x16_A64 = 1154
    CEFBS_HasSIMD128, // LOAD_LANE_I8x16_A64_S = 1155
    CEFBS_HasSIMD128, // LOAD_V128_A32 = 1156
    CEFBS_HasSIMD128, // LOAD_V128_A32_S = 1157
    CEFBS_HasSIMD128, // LOAD_V128_A64 = 1158
    CEFBS_HasSIMD128, // LOAD_V128_A64_S = 1159
    CEFBS_HasSIMD128, // LOAD_ZERO_I32x4_A32 = 1160
    CEFBS_HasSIMD128, // LOAD_ZERO_I32x4_A32_S = 1161
    CEFBS_HasSIMD128, // LOAD_ZERO_I32x4_A64 = 1162
    CEFBS_HasSIMD128, // LOAD_ZERO_I32x4_A64_S = 1163
    CEFBS_HasSIMD128, // LOAD_ZERO_I64x2_A32 = 1164
    CEFBS_HasSIMD128, // LOAD_ZERO_I64x2_A32_S = 1165
    CEFBS_HasSIMD128, // LOAD_ZERO_I64x2_A64 = 1166
    CEFBS_HasSIMD128, // LOAD_ZERO_I64x2_A64_S = 1167
    CEFBS_HasReferenceTypes, // LOCAL_GET_EXTERNREF = 1168
    CEFBS_HasReferenceTypes, // LOCAL_GET_EXTERNREF_S = 1169
    CEFBS_None, // LOCAL_GET_F32 = 1170
    CEFBS_None, // LOCAL_GET_F32_S = 1171
    CEFBS_None, // LOCAL_GET_F64 = 1172
    CEFBS_None, // LOCAL_GET_F64_S = 1173
    CEFBS_HasReferenceTypes, // LOCAL_GET_FUNCREF = 1174
    CEFBS_HasReferenceTypes, // LOCAL_GET_FUNCREF_S = 1175
    CEFBS_None, // LOCAL_GET_I32 = 1176
    CEFBS_None, // LOCAL_GET_I32_S = 1177
    CEFBS_None, // LOCAL_GET_I64 = 1178
    CEFBS_None, // LOCAL_GET_I64_S = 1179
    CEFBS_HasSIMD128, // LOCAL_GET_V128 = 1180
    CEFBS_HasSIMD128, // LOCAL_GET_V128_S = 1181
    CEFBS_HasReferenceTypes, // LOCAL_SET_EXTERNREF = 1182
    CEFBS_HasReferenceTypes, // LOCAL_SET_EXTERNREF_S = 1183
    CEFBS_None, // LOCAL_SET_F32 = 1184
    CEFBS_None, // LOCAL_SET_F32_S = 1185
    CEFBS_None, // LOCAL_SET_F64 = 1186
    CEFBS_None, // LOCAL_SET_F64_S = 1187
    CEFBS_HasReferenceTypes, // LOCAL_SET_FUNCREF = 1188
    CEFBS_HasReferenceTypes, // LOCAL_SET_FUNCREF_S = 1189
    CEFBS_None, // LOCAL_SET_I32 = 1190
    CEFBS_None, // LOCAL_SET_I32_S = 1191
    CEFBS_None, // LOCAL_SET_I64 = 1192
    CEFBS_None, // LOCAL_SET_I64_S = 1193
    CEFBS_HasSIMD128, // LOCAL_SET_V128 = 1194
    CEFBS_HasSIMD128, // LOCAL_SET_V128_S = 1195
    CEFBS_HasReferenceTypes, // LOCAL_TEE_EXTERNREF = 1196
    CEFBS_HasReferenceTypes, // LOCAL_TEE_EXTERNREF_S = 1197
    CEFBS_None, // LOCAL_TEE_F32 = 1198
    CEFBS_None, // LOCAL_TEE_F32_S = 1199
    CEFBS_None, // LOCAL_TEE_F64 = 1200
    CEFBS_None, // LOCAL_TEE_F64_S = 1201
    CEFBS_HasReferenceTypes, // LOCAL_TEE_FUNCREF = 1202
    CEFBS_HasReferenceTypes, // LOCAL_TEE_FUNCREF_S = 1203
    CEFBS_None, // LOCAL_TEE_I32 = 1204
    CEFBS_None, // LOCAL_TEE_I32_S = 1205
    CEFBS_None, // LOCAL_TEE_I64 = 1206
    CEFBS_None, // LOCAL_TEE_I64_S = 1207
    CEFBS_HasSIMD128, // LOCAL_TEE_V128 = 1208
    CEFBS_HasSIMD128, // LOCAL_TEE_V128_S = 1209
    CEFBS_None, // LOOP = 1210
    CEFBS_None, // LOOP_S = 1211
    CEFBS_None, // LT_F32 = 1212
    CEFBS_None, // LT_F32_S = 1213
    CEFBS_HasSIMD128, // LT_F32x4 = 1214
    CEFBS_HasSIMD128, // LT_F32x4_S = 1215
    CEFBS_None, // LT_F64 = 1216
    CEFBS_None, // LT_F64_S = 1217
    CEFBS_HasSIMD128, // LT_F64x2 = 1218
    CEFBS_HasSIMD128, // LT_F64x2_S = 1219
    CEFBS_HasSIMD128, // LT_S_I16x8 = 1220
    CEFBS_HasSIMD128, // LT_S_I16x8_S = 1221
    CEFBS_None, // LT_S_I32 = 1222
    CEFBS_None, // LT_S_I32_S = 1223
    CEFBS_HasSIMD128, // LT_S_I32x4 = 1224
    CEFBS_HasSIMD128, // LT_S_I32x4_S = 1225
    CEFBS_None, // LT_S_I64 = 1226
    CEFBS_None, // LT_S_I64_S = 1227
    CEFBS_HasSIMD128, // LT_S_I64x2 = 1228
    CEFBS_HasSIMD128, // LT_S_I64x2_S = 1229
    CEFBS_HasSIMD128, // LT_S_I8x16 = 1230
    CEFBS_HasSIMD128, // LT_S_I8x16_S = 1231
    CEFBS_HasSIMD128, // LT_U_I16x8 = 1232
    CEFBS_HasSIMD128, // LT_U_I16x8_S = 1233
    CEFBS_None, // LT_U_I32 = 1234
    CEFBS_None, // LT_U_I32_S = 1235
    CEFBS_HasSIMD128, // LT_U_I32x4 = 1236
    CEFBS_HasSIMD128, // LT_U_I32x4_S = 1237
    CEFBS_None, // LT_U_I64 = 1238
    CEFBS_None, // LT_U_I64_S = 1239
    CEFBS_HasSIMD128, // LT_U_I8x16 = 1240
    CEFBS_HasSIMD128, // LT_U_I8x16_S = 1241
    CEFBS_HasRelaxedSIMD, // MADD_F32x4 = 1242
    CEFBS_HasRelaxedSIMD, // MADD_F32x4_S = 1243
    CEFBS_HasRelaxedSIMD, // MADD_F64x2 = 1244
    CEFBS_HasRelaxedSIMD, // MADD_F64x2_S = 1245
    CEFBS_None, // MAX_F32 = 1246
    CEFBS_None, // MAX_F32_S = 1247
    CEFBS_HasSIMD128, // MAX_F32x4 = 1248
    CEFBS_HasSIMD128, // MAX_F32x4_S = 1249
    CEFBS_None, // MAX_F64 = 1250
    CEFBS_None, // MAX_F64_S = 1251
    CEFBS_HasSIMD128, // MAX_F64x2 = 1252
    CEFBS_HasSIMD128, // MAX_F64x2_S = 1253
    CEFBS_HasSIMD128, // MAX_S_I16x8 = 1254
    CEFBS_HasSIMD128, // MAX_S_I16x8_S = 1255
    CEFBS_HasSIMD128, // MAX_S_I32x4 = 1256
    CEFBS_HasSIMD128, // MAX_S_I32x4_S = 1257
    CEFBS_HasSIMD128, // MAX_S_I8x16 = 1258
    CEFBS_HasSIMD128, // MAX_S_I8x16_S = 1259
    CEFBS_HasSIMD128, // MAX_U_I16x8 = 1260
    CEFBS_HasSIMD128, // MAX_U_I16x8_S = 1261
    CEFBS_HasSIMD128, // MAX_U_I32x4 = 1262
    CEFBS_HasSIMD128, // MAX_U_I32x4_S = 1263
    CEFBS_HasSIMD128, // MAX_U_I8x16 = 1264
    CEFBS_HasSIMD128, // MAX_U_I8x16_S = 1265
    CEFBS_HasAtomics, // MEMORY_ATOMIC_NOTIFY_A32 = 1266
    CEFBS_HasAtomics, // MEMORY_ATOMIC_NOTIFY_A32_S = 1267
    CEFBS_HasAtomics, // MEMORY_ATOMIC_NOTIFY_A64 = 1268
    CEFBS_HasAtomics, // MEMORY_ATOMIC_NOTIFY_A64_S = 1269
    CEFBS_HasAtomics, // MEMORY_ATOMIC_WAIT32_A32 = 1270
    CEFBS_HasAtomics, // MEMORY_ATOMIC_WAIT32_A32_S = 1271
    CEFBS_HasAtomics, // MEMORY_ATOMIC_WAIT32_A64 = 1272
    CEFBS_HasAtomics, // MEMORY_ATOMIC_WAIT32_A64_S = 1273
    CEFBS_HasAtomics, // MEMORY_ATOMIC_WAIT64_A32 = 1274
    CEFBS_HasAtomics, // MEMORY_ATOMIC_WAIT64_A32_S = 1275
    CEFBS_HasAtomics, // MEMORY_ATOMIC_WAIT64_A64 = 1276
    CEFBS_HasAtomics, // MEMORY_ATOMIC_WAIT64_A64_S = 1277
    CEFBS_None, // MIN_F32 = 1278
    CEFBS_None, // MIN_F32_S = 1279
    CEFBS_HasSIMD128, // MIN_F32x4 = 1280
    CEFBS_HasSIMD128, // MIN_F32x4_S = 1281
    CEFBS_None, // MIN_F64 = 1282
    CEFBS_None, // MIN_F64_S = 1283
    CEFBS_HasSIMD128, // MIN_F64x2 = 1284
    CEFBS_HasSIMD128, // MIN_F64x2_S = 1285
    CEFBS_HasSIMD128, // MIN_S_I16x8 = 1286
    CEFBS_HasSIMD128, // MIN_S_I16x8_S = 1287
    CEFBS_HasSIMD128, // MIN_S_I32x4 = 1288
    CEFBS_HasSIMD128, // MIN_S_I32x4_S = 1289
    CEFBS_HasSIMD128, // MIN_S_I8x16 = 1290
    CEFBS_HasSIMD128, // MIN_S_I8x16_S = 1291
    CEFBS_HasSIMD128, // MIN_U_I16x8 = 1292
    CEFBS_HasSIMD128, // MIN_U_I16x8_S = 1293
    CEFBS_HasSIMD128, // MIN_U_I32x4 = 1294
    CEFBS_HasSIMD128, // MIN_U_I32x4_S = 1295
    CEFBS_HasSIMD128, // MIN_U_I8x16 = 1296
    CEFBS_HasSIMD128, // MIN_U_I8x16_S = 1297
    CEFBS_None, // MUL_F32 = 1298
    CEFBS_None, // MUL_F32_S = 1299
    CEFBS_HasSIMD128, // MUL_F32x4 = 1300
    CEFBS_HasSIMD128, // MUL_F32x4_S = 1301
    CEFBS_None, // MUL_F64 = 1302
    CEFBS_None, // MUL_F64_S = 1303
    CEFBS_HasSIMD128, // MUL_F64x2 = 1304
    CEFBS_HasSIMD128, // MUL_F64x2_S = 1305
    CEFBS_HasSIMD128, // MUL_I16x8 = 1306
    CEFBS_HasSIMD128, // MUL_I16x8_S = 1307
    CEFBS_None, // MUL_I32 = 1308
    CEFBS_None, // MUL_I32_S = 1309
    CEFBS_HasSIMD128, // MUL_I32x4 = 1310
    CEFBS_HasSIMD128, // MUL_I32x4_S = 1311
    CEFBS_None, // MUL_I64 = 1312
    CEFBS_None, // MUL_I64_S = 1313
    CEFBS_HasSIMD128, // MUL_I64x2 = 1314
    CEFBS_HasSIMD128, // MUL_I64x2_S = 1315
    CEFBS_HasSIMD128, // NARROW_S_I16x8 = 1316
    CEFBS_HasSIMD128, // NARROW_S_I16x8_S = 1317
    CEFBS_HasSIMD128, // NARROW_S_I8x16 = 1318
    CEFBS_HasSIMD128, // NARROW_S_I8x16_S = 1319
    CEFBS_HasSIMD128, // NARROW_U_I16x8 = 1320
    CEFBS_HasSIMD128, // NARROW_U_I16x8_S = 1321
    CEFBS_HasSIMD128, // NARROW_U_I8x16 = 1322
    CEFBS_HasSIMD128, // NARROW_U_I8x16_S = 1323
    CEFBS_None, // NEAREST_F32 = 1324
    CEFBS_None, // NEAREST_F32_S = 1325
    CEFBS_HasSIMD128, // NEAREST_F32x4 = 1326
    CEFBS_HasSIMD128, // NEAREST_F32x4_S = 1327
    CEFBS_None, // NEAREST_F64 = 1328
    CEFBS_None, // NEAREST_F64_S = 1329
    CEFBS_HasSIMD128, // NEAREST_F64x2 = 1330
    CEFBS_HasSIMD128, // NEAREST_F64x2_S = 1331
    CEFBS_None, // NEG_F32 = 1332
    CEFBS_None, // NEG_F32_S = 1333
    CEFBS_HasSIMD128, // NEG_F32x4 = 1334
    CEFBS_HasSIMD128, // NEG_F32x4_S = 1335
    CEFBS_None, // NEG_F64 = 1336
    CEFBS_None, // NEG_F64_S = 1337
    CEFBS_HasSIMD128, // NEG_F64x2 = 1338
    CEFBS_HasSIMD128, // NEG_F64x2_S = 1339
    CEFBS_HasSIMD128, // NEG_I16x8 = 1340
    CEFBS_HasSIMD128, // NEG_I16x8_S = 1341
    CEFBS_HasSIMD128, // NEG_I32x4 = 1342
    CEFBS_HasSIMD128, // NEG_I32x4_S = 1343
    CEFBS_HasSIMD128, // NEG_I64x2 = 1344
    CEFBS_HasSIMD128, // NEG_I64x2_S = 1345
    CEFBS_HasSIMD128, // NEG_I8x16 = 1346
    CEFBS_HasSIMD128, // NEG_I8x16_S = 1347
    CEFBS_None, // NE_F32 = 1348
    CEFBS_None, // NE_F32_S = 1349
    CEFBS_HasSIMD128, // NE_F32x4 = 1350
    CEFBS_HasSIMD128, // NE_F32x4_S = 1351
    CEFBS_None, // NE_F64 = 1352
    CEFBS_None, // NE_F64_S = 1353
    CEFBS_HasSIMD128, // NE_F64x2 = 1354
    CEFBS_HasSIMD128, // NE_F64x2_S = 1355
    CEFBS_HasSIMD128, // NE_I16x8 = 1356
    CEFBS_HasSIMD128, // NE_I16x8_S = 1357
    CEFBS_None, // NE_I32 = 1358
    CEFBS_None, // NE_I32_S = 1359
    CEFBS_HasSIMD128, // NE_I32x4 = 1360
    CEFBS_HasSIMD128, // NE_I32x4_S = 1361
    CEFBS_None, // NE_I64 = 1362
    CEFBS_None, // NE_I64_S = 1363
    CEFBS_HasSIMD128, // NE_I64x2 = 1364
    CEFBS_HasSIMD128, // NE_I64x2_S = 1365
    CEFBS_HasSIMD128, // NE_I8x16 = 1366
    CEFBS_HasSIMD128, // NE_I8x16_S = 1367
    CEFBS_HasRelaxedSIMD, // NMADD_F32x4 = 1368
    CEFBS_HasRelaxedSIMD, // NMADD_F32x4_S = 1369
    CEFBS_HasRelaxedSIMD, // NMADD_F64x2 = 1370
    CEFBS_HasRelaxedSIMD, // NMADD_F64x2_S = 1371
    CEFBS_None, // NOP = 1372
    CEFBS_None, // NOP_S = 1373
    CEFBS_HasSIMD128, // NOT = 1374
    CEFBS_HasSIMD128, // NOT_S = 1375
    CEFBS_HasSIMD128, // OR = 1376
    CEFBS_None, // OR_I32 = 1377
    CEFBS_None, // OR_I32_S = 1378
    CEFBS_None, // OR_I64 = 1379
    CEFBS_None, // OR_I64_S = 1380
    CEFBS_HasSIMD128, // OR_S = 1381
    CEFBS_HasSIMD128, // PMAX_F32x4 = 1382
    CEFBS_HasSIMD128, // PMAX_F32x4_S = 1383
    CEFBS_HasSIMD128, // PMAX_F64x2 = 1384
    CEFBS_HasSIMD128, // PMAX_F64x2_S = 1385
    CEFBS_HasSIMD128, // PMIN_F32x4 = 1386
    CEFBS_HasSIMD128, // PMIN_F32x4_S = 1387
    CEFBS_HasSIMD128, // PMIN_F64x2 = 1388
    CEFBS_HasSIMD128, // PMIN_F64x2_S = 1389
    CEFBS_None, // POPCNT_I32 = 1390
    CEFBS_None, // POPCNT_I32_S = 1391
    CEFBS_None, // POPCNT_I64 = 1392
    CEFBS_None, // POPCNT_I64_S = 1393
    CEFBS_HasSIMD128, // POPCNT_I8x16 = 1394
    CEFBS_HasSIMD128, // POPCNT_I8x16_S = 1395
    CEFBS_HasSIMD128, // Q15MULR_SAT_S_I16x8 = 1396
    CEFBS_HasSIMD128, // Q15MULR_SAT_S_I16x8_S = 1397
    CEFBS_HasReferenceTypes, // REF_IS_NULL_EXTERNREF = 1398
    CEFBS_HasReferenceTypes, // REF_IS_NULL_EXTERNREF_S = 1399
    CEFBS_HasReferenceTypes, // REF_IS_NULL_FUNCREF = 1400
    CEFBS_HasReferenceTypes, // REF_IS_NULL_FUNCREF_S = 1401
    CEFBS_HasReferenceTypes, // REF_NULL_EXTERNREF = 1402
    CEFBS_HasReferenceTypes, // REF_NULL_EXTERNREF_S = 1403
    CEFBS_HasReferenceTypes, // REF_NULL_FUNCREF = 1404
    CEFBS_HasReferenceTypes, // REF_NULL_FUNCREF_S = 1405
    CEFBS_HasRelaxedSIMD, // RELAXED_DOT = 1406
    CEFBS_HasRelaxedSIMD, // RELAXED_DOT_ADD = 1407
    CEFBS_HasRelaxedSIMD, // RELAXED_DOT_ADD_S = 1408
    CEFBS_HasRelaxedSIMD, // RELAXED_DOT_BFLOAT = 1409
    CEFBS_HasRelaxedSIMD, // RELAXED_DOT_BFLOAT_S = 1410
    CEFBS_HasRelaxedSIMD, // RELAXED_DOT_S = 1411
    CEFBS_HasRelaxedSIMD, // RELAXED_Q15MULR_S_I16x8 = 1412
    CEFBS_HasRelaxedSIMD, // RELAXED_Q15MULR_S_I16x8_S = 1413
    CEFBS_HasRelaxedSIMD, // RELAXED_SWIZZLE = 1414
    CEFBS_HasRelaxedSIMD, // RELAXED_SWIZZLE_S = 1415
    CEFBS_None, // REM_S_I32 = 1416
    CEFBS_None, // REM_S_I32_S = 1417
    CEFBS_None, // REM_S_I64 = 1418
    CEFBS_None, // REM_S_I64_S = 1419
    CEFBS_None, // REM_U_I32 = 1420
    CEFBS_None, // REM_U_I32_S = 1421
    CEFBS_None, // REM_U_I64 = 1422
    CEFBS_None, // REM_U_I64_S = 1423
    CEFBS_HasSIMD128, // REPLACE_LANE_F32x4 = 1424
    CEFBS_HasSIMD128, // REPLACE_LANE_F32x4_S = 1425
    CEFBS_HasSIMD128, // REPLACE_LANE_F64x2 = 1426
    CEFBS_HasSIMD128, // REPLACE_LANE_F64x2_S = 1427
    CEFBS_HasSIMD128, // REPLACE_LANE_I16x8 = 1428
    CEFBS_HasSIMD128, // REPLACE_LANE_I16x8_S = 1429
    CEFBS_HasSIMD128, // REPLACE_LANE_I32x4 = 1430
    CEFBS_HasSIMD128, // REPLACE_LANE_I32x4_S = 1431
    CEFBS_HasSIMD128, // REPLACE_LANE_I64x2 = 1432
    CEFBS_HasSIMD128, // REPLACE_LANE_I64x2_S = 1433
    CEFBS_HasSIMD128, // REPLACE_LANE_I8x16 = 1434
    CEFBS_HasSIMD128, // REPLACE_LANE_I8x16_S = 1435
    CEFBS_HasExceptionHandling, // RETHROW = 1436
    CEFBS_HasExceptionHandling, // RETHROW_S = 1437
    CEFBS_None, // RETURN = 1438
    CEFBS_None, // RETURN_S = 1439
    CEFBS_HasTailCall, // RET_CALL = 1440
    CEFBS_HasTailCall, // RET_CALL_INDIRECT = 1441
    CEFBS_HasTailCall, // RET_CALL_INDIRECT_S = 1442
    CEFBS_HasTailCall, // RET_CALL_S = 1443
    CEFBS_None, // ROTL_I32 = 1444
    CEFBS_None, // ROTL_I32_S = 1445
    CEFBS_None, // ROTL_I64 = 1446
    CEFBS_None, // ROTL_I64_S = 1447
    CEFBS_None, // ROTR_I32 = 1448
    CEFBS_None, // ROTR_I32_S = 1449
    CEFBS_None, // ROTR_I64 = 1450
    CEFBS_None, // ROTR_I64_S = 1451
    CEFBS_HasReferenceTypes, // SELECT_EXTERNREF = 1452
    CEFBS_HasReferenceTypes, // SELECT_EXTERNREF_S = 1453
    CEFBS_None, // SELECT_F32 = 1454
    CEFBS_None, // SELECT_F32_S = 1455
    CEFBS_None, // SELECT_F64 = 1456
    CEFBS_None, // SELECT_F64_S = 1457
    CEFBS_HasReferenceTypes, // SELECT_FUNCREF = 1458
    CEFBS_HasReferenceTypes, // SELECT_FUNCREF_S = 1459
    CEFBS_None, // SELECT_I32 = 1460
    CEFBS_None, // SELECT_I32_S = 1461
    CEFBS_None, // SELECT_I64 = 1462
    CEFBS_None, // SELECT_I64_S = 1463
    CEFBS_None, // SELECT_V128 = 1464
    CEFBS_None, // SELECT_V128_S = 1465
    CEFBS_HasSIMD128, // SHL_I16x8 = 1466
    CEFBS_HasSIMD128, // SHL_I16x8_S = 1467
    CEFBS_None, // SHL_I32 = 1468
    CEFBS_None, // SHL_I32_S = 1469
    CEFBS_HasSIMD128, // SHL_I32x4 = 1470
    CEFBS_HasSIMD128, // SHL_I32x4_S = 1471
    CEFBS_None, // SHL_I64 = 1472
    CEFBS_None, // SHL_I64_S = 1473
    CEFBS_HasSIMD128, // SHL_I64x2 = 1474
    CEFBS_HasSIMD128, // SHL_I64x2_S = 1475
    CEFBS_HasSIMD128, // SHL_I8x16 = 1476
    CEFBS_HasSIMD128, // SHL_I8x16_S = 1477
    CEFBS_HasSIMD128, // SHR_S_I16x8 = 1478
    CEFBS_HasSIMD128, // SHR_S_I16x8_S = 1479
    CEFBS_None, // SHR_S_I32 = 1480
    CEFBS_None, // SHR_S_I32_S = 1481
    CEFBS_HasSIMD128, // SHR_S_I32x4 = 1482
    CEFBS_HasSIMD128, // SHR_S_I32x4_S = 1483
    CEFBS_None, // SHR_S_I64 = 1484
    CEFBS_None, // SHR_S_I64_S = 1485
    CEFBS_HasSIMD128, // SHR_S_I64x2 = 1486
    CEFBS_HasSIMD128, // SHR_S_I64x2_S = 1487
    CEFBS_HasSIMD128, // SHR_S_I8x16 = 1488
    CEFBS_HasSIMD128, // SHR_S_I8x16_S = 1489
    CEFBS_HasSIMD128, // SHR_U_I16x8 = 1490
    CEFBS_HasSIMD128, // SHR_U_I16x8_S = 1491
    CEFBS_None, // SHR_U_I32 = 1492
    CEFBS_None, // SHR_U_I32_S = 1493
    CEFBS_HasSIMD128, // SHR_U_I32x4 = 1494
    CEFBS_HasSIMD128, // SHR_U_I32x4_S = 1495
    CEFBS_None, // SHR_U_I64 = 1496
    CEFBS_None, // SHR_U_I64_S = 1497
    CEFBS_HasSIMD128, // SHR_U_I64x2 = 1498
    CEFBS_HasSIMD128, // SHR_U_I64x2_S = 1499
    CEFBS_HasSIMD128, // SHR_U_I8x16 = 1500
    CEFBS_HasSIMD128, // SHR_U_I8x16_S = 1501
    CEFBS_HasSIMD128, // SHUFFLE = 1502
    CEFBS_HasSIMD128, // SHUFFLE_S = 1503
    CEFBS_HasRelaxedSIMD, // SIMD_RELAXED_FMAX_F32x4 = 1504
    CEFBS_HasRelaxedSIMD, // SIMD_RELAXED_FMAX_F32x4_S = 1505
    CEFBS_HasRelaxedSIMD, // SIMD_RELAXED_FMAX_F64x2 = 1506
    CEFBS_HasRelaxedSIMD, // SIMD_RELAXED_FMAX_F64x2_S = 1507
    CEFBS_HasRelaxedSIMD, // SIMD_RELAXED_FMIN_F32x4 = 1508
    CEFBS_HasRelaxedSIMD, // SIMD_RELAXED_FMIN_F32x4_S = 1509
    CEFBS_HasRelaxedSIMD, // SIMD_RELAXED_FMIN_F64x2 = 1510
    CEFBS_HasRelaxedSIMD, // SIMD_RELAXED_FMIN_F64x2_S = 1511
    CEFBS_HasSIMD128, // SPLAT_F32x4 = 1512
    CEFBS_HasSIMD128, // SPLAT_F32x4_S = 1513
    CEFBS_HasSIMD128, // SPLAT_F64x2 = 1514
    CEFBS_HasSIMD128, // SPLAT_F64x2_S = 1515
    CEFBS_HasSIMD128, // SPLAT_I16x8 = 1516
    CEFBS_HasSIMD128, // SPLAT_I16x8_S = 1517
    CEFBS_HasSIMD128, // SPLAT_I32x4 = 1518
    CEFBS_HasSIMD128, // SPLAT_I32x4_S = 1519
    CEFBS_HasSIMD128, // SPLAT_I64x2 = 1520
    CEFBS_HasSIMD128, // SPLAT_I64x2_S = 1521
    CEFBS_HasSIMD128, // SPLAT_I8x16 = 1522
    CEFBS_HasSIMD128, // SPLAT_I8x16_S = 1523
    CEFBS_None, // SQRT_F32 = 1524
    CEFBS_None, // SQRT_F32_S = 1525
    CEFBS_HasSIMD128, // SQRT_F32x4 = 1526
    CEFBS_HasSIMD128, // SQRT_F32x4_S = 1527
    CEFBS_None, // SQRT_F64 = 1528
    CEFBS_None, // SQRT_F64_S = 1529
    CEFBS_HasSIMD128, // SQRT_F64x2 = 1530
    CEFBS_HasSIMD128, // SQRT_F64x2_S = 1531
    CEFBS_None, // STORE16_I32_A32 = 1532
    CEFBS_None, // STORE16_I32_A32_S = 1533
    CEFBS_None, // STORE16_I32_A64 = 1534
    CEFBS_None, // STORE16_I32_A64_S = 1535
    CEFBS_None, // STORE16_I64_A32 = 1536
    CEFBS_None, // STORE16_I64_A32_S = 1537
    CEFBS_None, // STORE16_I64_A64 = 1538
    CEFBS_None, // STORE16_I64_A64_S = 1539
    CEFBS_None, // STORE32_I64_A32 = 1540
    CEFBS_None, // STORE32_I64_A32_S = 1541
    CEFBS_None, // STORE32_I64_A64 = 1542
    CEFBS_None, // STORE32_I64_A64_S = 1543
    CEFBS_None, // STORE8_I32_A32 = 1544
    CEFBS_None, // STORE8_I32_A32_S = 1545
    CEFBS_None, // STORE8_I32_A64 = 1546
    CEFBS_None, // STORE8_I32_A64_S = 1547
    CEFBS_None, // STORE8_I64_A32 = 1548
    CEFBS_None, // STORE8_I64_A32_S = 1549
    CEFBS_None, // STORE8_I64_A64 = 1550
    CEFBS_None, // STORE8_I64_A64_S = 1551
    CEFBS_None, // STORE_F32_A32 = 1552
    CEFBS_None, // STORE_F32_A32_S = 1553
    CEFBS_None, // STORE_F32_A64 = 1554
    CEFBS_None, // STORE_F32_A64_S = 1555
    CEFBS_None, // STORE_F64_A32 = 1556
    CEFBS_None, // STORE_F64_A32_S = 1557
    CEFBS_None, // STORE_F64_A64 = 1558
    CEFBS_None, // STORE_F64_A64_S = 1559
    CEFBS_None, // STORE_I32_A32 = 1560
    CEFBS_None, // STORE_I32_A32_S = 1561
    CEFBS_None, // STORE_I32_A64 = 1562
    CEFBS_None, // STORE_I32_A64_S = 1563
    CEFBS_None, // STORE_I64_A32 = 1564
    CEFBS_None, // STORE_I64_A32_S = 1565
    CEFBS_None, // STORE_I64_A64 = 1566
    CEFBS_None, // STORE_I64_A64_S = 1567
    CEFBS_HasSIMD128, // STORE_LANE_I16x8_A32 = 1568
    CEFBS_HasSIMD128, // STORE_LANE_I16x8_A32_S = 1569
    CEFBS_HasSIMD128, // STORE_LANE_I16x8_A64 = 1570
    CEFBS_HasSIMD128, // STORE_LANE_I16x8_A64_S = 1571
    CEFBS_HasSIMD128, // STORE_LANE_I32x4_A32 = 1572
    CEFBS_HasSIMD128, // STORE_LANE_I32x4_A32_S = 1573
    CEFBS_HasSIMD128, // STORE_LANE_I32x4_A64 = 1574
    CEFBS_HasSIMD128, // STORE_LANE_I32x4_A64_S = 1575
    CEFBS_HasSIMD128, // STORE_LANE_I64x2_A32 = 1576
    CEFBS_HasSIMD128, // STORE_LANE_I64x2_A32_S = 1577
    CEFBS_HasSIMD128, // STORE_LANE_I64x2_A64 = 1578
    CEFBS_HasSIMD128, // STORE_LANE_I64x2_A64_S = 1579
    CEFBS_HasSIMD128, // STORE_LANE_I8x16_A32 = 1580
    CEFBS_HasSIMD128, // STORE_LANE_I8x16_A32_S = 1581
    CEFBS_HasSIMD128, // STORE_LANE_I8x16_A64 = 1582
    CEFBS_HasSIMD128, // STORE_LANE_I8x16_A64_S = 1583
    CEFBS_HasSIMD128, // STORE_V128_A32 = 1584
    CEFBS_HasSIMD128, // STORE_V128_A32_S = 1585
    CEFBS_HasSIMD128, // STORE_V128_A64 = 1586
    CEFBS_HasSIMD128, // STORE_V128_A64_S = 1587
    CEFBS_None, // SUB_F32 = 1588
    CEFBS_None, // SUB_F32_S = 1589
    CEFBS_HasSIMD128, // SUB_F32x4 = 1590
    CEFBS_HasSIMD128, // SUB_F32x4_S = 1591
    CEFBS_None, // SUB_F64 = 1592
    CEFBS_None, // SUB_F64_S = 1593
    CEFBS_HasSIMD128, // SUB_F64x2 = 1594
    CEFBS_HasSIMD128, // SUB_F64x2_S = 1595
    CEFBS_HasSIMD128, // SUB_I16x8 = 1596
    CEFBS_HasSIMD128, // SUB_I16x8_S = 1597
    CEFBS_None, // SUB_I32 = 1598
    CEFBS_None, // SUB_I32_S = 1599
    CEFBS_HasSIMD128, // SUB_I32x4 = 1600
    CEFBS_HasSIMD128, // SUB_I32x4_S = 1601
    CEFBS_None, // SUB_I64 = 1602
    CEFBS_None, // SUB_I64_S = 1603
    CEFBS_HasSIMD128, // SUB_I64x2 = 1604
    CEFBS_HasSIMD128, // SUB_I64x2_S = 1605
    CEFBS_HasSIMD128, // SUB_I8x16 = 1606
    CEFBS_HasSIMD128, // SUB_I8x16_S = 1607
    CEFBS_HasSIMD128, // SUB_SAT_S_I16x8 = 1608
    CEFBS_HasSIMD128, // SUB_SAT_S_I16x8_S = 1609
    CEFBS_HasSIMD128, // SUB_SAT_S_I8x16 = 1610
    CEFBS_HasSIMD128, // SUB_SAT_S_I8x16_S = 1611
    CEFBS_HasSIMD128, // SUB_SAT_U_I16x8 = 1612
    CEFBS_HasSIMD128, // SUB_SAT_U_I16x8_S = 1613
    CEFBS_HasSIMD128, // SUB_SAT_U_I8x16 = 1614
    CEFBS_HasSIMD128, // SUB_SAT_U_I8x16_S = 1615
    CEFBS_HasSIMD128, // SWIZZLE = 1616
    CEFBS_HasSIMD128, // SWIZZLE_S = 1617
    CEFBS_HasReferenceTypes, // TABLE_COPY = 1618
    CEFBS_HasReferenceTypes, // TABLE_COPY_S = 1619
    CEFBS_HasReferenceTypes, // TABLE_FILL_EXTERNREF = 1620
    CEFBS_HasReferenceTypes, // TABLE_FILL_EXTERNREF_S = 1621
    CEFBS_HasReferenceTypes, // TABLE_FILL_FUNCREF = 1622
    CEFBS_HasReferenceTypes, // TABLE_FILL_FUNCREF_S = 1623
    CEFBS_HasReferenceTypes, // TABLE_GET_EXTERNREF = 1624
    CEFBS_HasReferenceTypes, // TABLE_GET_EXTERNREF_S = 1625
    CEFBS_HasReferenceTypes, // TABLE_GET_FUNCREF = 1626
    CEFBS_HasReferenceTypes, // TABLE_GET_FUNCREF_S = 1627
    CEFBS_HasReferenceTypes, // TABLE_GROW_EXTERNREF = 1628
    CEFBS_HasReferenceTypes, // TABLE_GROW_EXTERNREF_S = 1629
    CEFBS_HasReferenceTypes, // TABLE_GROW_FUNCREF = 1630
    CEFBS_HasReferenceTypes, // TABLE_GROW_FUNCREF_S = 1631
    CEFBS_HasReferenceTypes, // TABLE_SET_EXTERNREF = 1632
    CEFBS_HasReferenceTypes, // TABLE_SET_EXTERNREF_S = 1633
    CEFBS_HasReferenceTypes, // TABLE_SET_FUNCREF = 1634
    CEFBS_HasReferenceTypes, // TABLE_SET_FUNCREF_S = 1635
    CEFBS_HasReferenceTypes, // TABLE_SIZE = 1636
    CEFBS_HasReferenceTypes, // TABLE_SIZE_S = 1637
    CEFBS_HasReferenceTypes, // TEE_EXTERNREF = 1638
    CEFBS_HasReferenceTypes, // TEE_EXTERNREF_S = 1639
    CEFBS_None, // TEE_F32 = 1640
    CEFBS_None, // TEE_F32_S = 1641
    CEFBS_None, // TEE_F64 = 1642
    CEFBS_None, // TEE_F64_S = 1643
    CEFBS_HasReferenceTypes, // TEE_FUNCREF = 1644
    CEFBS_HasReferenceTypes, // TEE_FUNCREF_S = 1645
    CEFBS_None, // TEE_I32 = 1646
    CEFBS_None, // TEE_I32_S = 1647
    CEFBS_None, // TEE_I64 = 1648
    CEFBS_None, // TEE_I64_S = 1649
    CEFBS_HasSIMD128, // TEE_V128 = 1650
    CEFBS_HasSIMD128, // TEE_V128_S = 1651
    CEFBS_HasExceptionHandling, // THROW = 1652
    CEFBS_HasExceptionHandling, // THROW_S = 1653
    CEFBS_None, // TRUNC_F32 = 1654
    CEFBS_None, // TRUNC_F32_S = 1655
    CEFBS_HasSIMD128, // TRUNC_F32x4 = 1656
    CEFBS_HasSIMD128, // TRUNC_F32x4_S = 1657
    CEFBS_None, // TRUNC_F64 = 1658
    CEFBS_None, // TRUNC_F64_S = 1659
    CEFBS_HasSIMD128, // TRUNC_F64x2 = 1660
    CEFBS_HasSIMD128, // TRUNC_F64x2_S = 1661
    CEFBS_HasExceptionHandling, // TRY = 1662
    CEFBS_HasExceptionHandling, // TRY_S = 1663
    CEFBS_None, // UNREACHABLE = 1664
    CEFBS_None, // UNREACHABLE_S = 1665
    CEFBS_HasSIMD128, // XOR = 1666
    CEFBS_None, // XOR_I32 = 1667
    CEFBS_None, // XOR_I32_S = 1668
    CEFBS_None, // XOR_I64 = 1669
    CEFBS_None, // XOR_I64_S = 1670
    CEFBS_HasSIMD128, // XOR_S = 1671
    CEFBS_None, // anonymous_7070MEMORY_GROW_A32 = 1672
    CEFBS_None, // anonymous_7070MEMORY_GROW_A32_S = 1673
    CEFBS_None, // anonymous_7070MEMORY_SIZE_A32 = 1674
    CEFBS_None, // anonymous_7070MEMORY_SIZE_A32_S = 1675
    CEFBS_None, // anonymous_7071MEMORY_GROW_A64 = 1676
    CEFBS_None, // anonymous_7071MEMORY_GROW_A64_S = 1677
    CEFBS_None, // anonymous_7071MEMORY_SIZE_A64 = 1678
    CEFBS_None, // anonymous_7071MEMORY_SIZE_A64_S = 1679
    CEFBS_HasBulkMemory, // anonymous_7752DATA_DROP = 1680
    CEFBS_HasBulkMemory, // anonymous_7752DATA_DROP_S = 1681
    CEFBS_HasBulkMemory, // anonymous_7752MEMORY_COPY_A32 = 1682
    CEFBS_HasBulkMemory, // anonymous_7752MEMORY_COPY_A32_S = 1683
    CEFBS_HasBulkMemory, // anonymous_7752MEMORY_FILL_A32 = 1684
    CEFBS_HasBulkMemory, // anonymous_7752MEMORY_FILL_A32_S = 1685
    CEFBS_HasBulkMemory, // anonymous_7752MEMORY_INIT_A32 = 1686
    CEFBS_HasBulkMemory, // anonymous_7752MEMORY_INIT_A32_S = 1687
    CEFBS_HasBulkMemory, // anonymous_7753DATA_DROP = 1688
    CEFBS_HasBulkMemory, // anonymous_7753DATA_DROP_S = 1689
    CEFBS_HasBulkMemory, // anonymous_7753MEMORY_COPY_A64 = 1690
    CEFBS_HasBulkMemory, // anonymous_7753MEMORY_COPY_A64_S = 1691
    CEFBS_HasBulkMemory, // anonymous_7753MEMORY_FILL_A64 = 1692
    CEFBS_HasBulkMemory, // anonymous_7753MEMORY_FILL_A64_S = 1693
    CEFBS_HasBulkMemory, // anonymous_7753MEMORY_INIT_A64 = 1694
    CEFBS_HasBulkMemory, // anonymous_7753MEMORY_INIT_A64_S = 1695
    CEFBS_HasSIMD128, // convert_low_s_F64x2 = 1696
    CEFBS_HasSIMD128, // convert_low_s_F64x2_S = 1697
    CEFBS_HasSIMD128, // convert_low_u_F64x2 = 1698
    CEFBS_HasSIMD128, // convert_low_u_F64x2_S = 1699
    CEFBS_HasSIMD128, // demote_zero_F32x4 = 1700
    CEFBS_HasSIMD128, // demote_zero_F32x4_S = 1701
    CEFBS_HasSIMD128, // extend_high_s_I16x8 = 1702
    CEFBS_HasSIMD128, // extend_high_s_I16x8_S = 1703
    CEFBS_HasSIMD128, // extend_high_s_I32x4 = 1704
    CEFBS_HasSIMD128, // extend_high_s_I32x4_S = 1705
    CEFBS_HasSIMD128, // extend_high_s_I64x2 = 1706
    CEFBS_HasSIMD128, // extend_high_s_I64x2_S = 1707
    CEFBS_HasSIMD128, // extend_high_u_I16x8 = 1708
    CEFBS_HasSIMD128, // extend_high_u_I16x8_S = 1709
    CEFBS_HasSIMD128, // extend_high_u_I32x4 = 1710
    CEFBS_HasSIMD128, // extend_high_u_I32x4_S = 1711
    CEFBS_HasSIMD128, // extend_high_u_I64x2 = 1712
    CEFBS_HasSIMD128, // extend_high_u_I64x2_S = 1713
    CEFBS_HasSIMD128, // extend_low_s_I16x8 = 1714
    CEFBS_HasSIMD128, // extend_low_s_I16x8_S = 1715
    CEFBS_HasSIMD128, // extend_low_s_I32x4 = 1716
    CEFBS_HasSIMD128, // extend_low_s_I32x4_S = 1717
    CEFBS_HasSIMD128, // extend_low_s_I64x2 = 1718
    CEFBS_HasSIMD128, // extend_low_s_I64x2_S = 1719
    CEFBS_HasSIMD128, // extend_low_u_I16x8 = 1720
    CEFBS_HasSIMD128, // extend_low_u_I16x8_S = 1721
    CEFBS_HasSIMD128, // extend_low_u_I32x4 = 1722
    CEFBS_HasSIMD128, // extend_low_u_I32x4_S = 1723
    CEFBS_HasSIMD128, // extend_low_u_I64x2 = 1724
    CEFBS_HasSIMD128, // extend_low_u_I64x2_S = 1725
    CEFBS_HasSIMD128, // fp_to_sint_I32x4 = 1726
    CEFBS_HasSIMD128, // fp_to_sint_I32x4_S = 1727
    CEFBS_HasSIMD128, // fp_to_uint_I32x4 = 1728
    CEFBS_HasSIMD128, // fp_to_uint_I32x4_S = 1729
    CEFBS_HasSIMD128, // int_wasm_extadd_pairwise_signed_I16x8 = 1730
    CEFBS_HasSIMD128, // int_wasm_extadd_pairwise_signed_I16x8_S = 1731
    CEFBS_HasSIMD128, // int_wasm_extadd_pairwise_signed_I32x4 = 1732
    CEFBS_HasSIMD128, // int_wasm_extadd_pairwise_signed_I32x4_S = 1733
    CEFBS_HasSIMD128, // int_wasm_extadd_pairwise_unsigned_I16x8 = 1734
    CEFBS_HasSIMD128, // int_wasm_extadd_pairwise_unsigned_I16x8_S = 1735
    CEFBS_HasSIMD128, // int_wasm_extadd_pairwise_unsigned_I32x4 = 1736
    CEFBS_HasSIMD128, // int_wasm_extadd_pairwise_unsigned_I32x4_S = 1737
    CEFBS_HasRelaxedSIMD, // int_wasm_relaxed_trunc_signed_I32x4 = 1738
    CEFBS_HasRelaxedSIMD, // int_wasm_relaxed_trunc_signed_I32x4_S = 1739
    CEFBS_HasRelaxedSIMD, // int_wasm_relaxed_trunc_signed_zero_I32x4 = 1740
    CEFBS_HasRelaxedSIMD, // int_wasm_relaxed_trunc_signed_zero_I32x4_S = 1741
    CEFBS_HasRelaxedSIMD, // int_wasm_relaxed_trunc_unsigned_I32x4 = 1742
    CEFBS_HasRelaxedSIMD, // int_wasm_relaxed_trunc_unsigned_I32x4_S = 1743
    CEFBS_HasRelaxedSIMD, // int_wasm_relaxed_trunc_unsigned_zero_I32x4 = 1744
    CEFBS_HasRelaxedSIMD, // int_wasm_relaxed_trunc_unsigned_zero_I32x4_S = 1745
    CEFBS_HasSIMD128, // promote_low_F64x2 = 1746
    CEFBS_HasSIMD128, // promote_low_F64x2_S = 1747
    CEFBS_HasSIMD128, // sint_to_fp_F32x4 = 1748
    CEFBS_HasSIMD128, // sint_to_fp_F32x4_S = 1749
    CEFBS_HasSIMD128, // trunc_sat_zero_s_I32x4 = 1750
    CEFBS_HasSIMD128, // trunc_sat_zero_s_I32x4_S = 1751
    CEFBS_HasSIMD128, // trunc_sat_zero_u_I32x4 = 1752
    CEFBS_HasSIMD128, // trunc_sat_zero_u_I32x4_S = 1753
    CEFBS_HasSIMD128, // uint_to_fp_F32x4 = 1754
    CEFBS_HasSIMD128, // uint_to_fp_F32x4_S = 1755
  };

  assert(Opcode < 1756);
  return FeatureBitsets[RequiredFeaturesRefs[Opcode]];
}

} // end namespace WebAssembly_MC
} // end namespace llvm
#endif // GET_COMPUTE_FEATURES

#ifdef ENABLE_INSTR_PREDICATE_VERIFIER
#undef ENABLE_INSTR_PREDICATE_VERIFIER
#include <sstream>

namespace llvm {
namespace WebAssembly_MC {

#ifndef NDEBUG
static const char *SubtargetFeatureNames[] = {
  "Feature_HasAtomics",
  "Feature_HasBulkMemory",
  "Feature_HasExceptionHandling",
  "Feature_HasExtendedConst",
  "Feature_HasMultivalue",
  "Feature_HasNontrappingFPToInt",
  "Feature_HasReferenceTypes",
  "Feature_HasRelaxedSIMD",
  "Feature_HasSIMD128",
  "Feature_HasSignExt",
  "Feature_HasTailCall",
  "Feature_NotHasNontrappingFPToInt",
  nullptr
};

#endif // NDEBUG

void verifyInstructionPredicates(
    unsigned Opcode, const FeatureBitset &Features) {
#ifndef NDEBUG
  FeatureBitset AvailableFeatures = computeAvailableFeatures(Features);
  FeatureBitset RequiredFeatures = computeRequiredFeatures(Opcode);
  FeatureBitset MissingFeatures =
      (AvailableFeatures & RequiredFeatures) ^
      RequiredFeatures;
  if (MissingFeatures.any()) {
    std::ostringstream Msg;
    Msg << "Attempting to emit " << &WebAssemblyInstrNameData[WebAssemblyInstrNameIndices[Opcode]]
        << " instruction but the ";
    for (unsigned i = 0, e = MissingFeatures.size(); i != e; ++i)
      if (MissingFeatures.test(i))
        Msg << SubtargetFeatureNames[i] << " ";
    Msg << "predicate(s) are not met";
    report_fatal_error(Msg.str().c_str());
  }
#endif // NDEBUG
}
} // end namespace WebAssembly_MC
} // end namespace llvm
#endif // ENABLE_INSTR_PREDICATE_VERIFIER

#ifdef GET_INSTRMAP_INFO
#undef GET_INSTRMAP_INFO
namespace llvm {

namespace WebAssembly {

enum IsWasm64 {
	IsWasm64_1
};

enum StackBased {
	StackBased_0,
	StackBased_1
};

// getRegisterOpcode
LLVM_READONLY
int getRegisterOpcode(uint16_t Opcode) {
static const uint16_t getRegisterOpcodeTable[][2] = {
  { WebAssembly::CALL_PARAMS_S, WebAssembly::CALL_PARAMS },
  { WebAssembly::CALL_RESULTS_S, WebAssembly::CALL_RESULTS },
  { WebAssembly::CATCHRET_S, WebAssembly::CATCHRET },
  { WebAssembly::CLEANUPRET_S, WebAssembly::CLEANUPRET },
  { WebAssembly::COMPILER_FENCE_S, WebAssembly::COMPILER_FENCE },
  { WebAssembly::RET_CALL_RESULTS_S, WebAssembly::RET_CALL_RESULTS },
  { WebAssembly::ABS_F32_S, WebAssembly::ABS_F32 },
  { WebAssembly::ABS_F32x4_S, WebAssembly::ABS_F32x4 },
  { WebAssembly::ABS_F64_S, WebAssembly::ABS_F64 },
  { WebAssembly::ABS_F64x2_S, WebAssembly::ABS_F64x2 },
  { WebAssembly::ABS_I16x8_S, WebAssembly::ABS_I16x8 },
  { WebAssembly::ABS_I32x4_S, WebAssembly::ABS_I32x4 },
  { WebAssembly::ABS_I64x2_S, WebAssembly::ABS_I64x2 },
  { WebAssembly::ABS_I8x16_S, WebAssembly::ABS_I8x16 },
  { WebAssembly::ADD_F32_S, WebAssembly::ADD_F32 },
  { WebAssembly::ADD_F32x4_S, WebAssembly::ADD_F32x4 },
  { WebAssembly::ADD_F64_S, WebAssembly::ADD_F64 },
  { WebAssembly::ADD_F64x2_S, WebAssembly::ADD_F64x2 },
  { WebAssembly::ADD_I16x8_S, WebAssembly::ADD_I16x8 },
  { WebAssembly::ADD_I32_S, WebAssembly::ADD_I32 },
  { WebAssembly::ADD_I32x4_S, WebAssembly::ADD_I32x4 },
  { WebAssembly::ADD_I64_S, WebAssembly::ADD_I64 },
  { WebAssembly::ADD_I64x2_S, WebAssembly::ADD_I64x2 },
  { WebAssembly::ADD_I8x16_S, WebAssembly::ADD_I8x16 },
  { WebAssembly::ADD_SAT_S_I16x8_S, WebAssembly::ADD_SAT_S_I16x8 },
  { WebAssembly::ADD_SAT_S_I8x16_S, WebAssembly::ADD_SAT_S_I8x16 },
  { WebAssembly::ADD_SAT_U_I16x8_S, WebAssembly::ADD_SAT_U_I16x8 },
  { WebAssembly::ADD_SAT_U_I8x16_S, WebAssembly::ADD_SAT_U_I8x16 },
  { WebAssembly::ADJCALLSTACKDOWN_S, WebAssembly::ADJCALLSTACKDOWN },
  { WebAssembly::ADJCALLSTACKUP_S, WebAssembly::ADJCALLSTACKUP },
  { WebAssembly::ALLTRUE_I16x8_S, WebAssembly::ALLTRUE_I16x8 },
  { WebAssembly::ALLTRUE_I32x4_S, WebAssembly::ALLTRUE_I32x4 },
  { WebAssembly::ALLTRUE_I64x2_S, WebAssembly::ALLTRUE_I64x2 },
  { WebAssembly::ALLTRUE_I8x16_S, WebAssembly::ALLTRUE_I8x16 },
  { WebAssembly::ANDNOT_S, WebAssembly::ANDNOT },
  { WebAssembly::AND_I32_S, WebAssembly::AND_I32 },
  { WebAssembly::AND_I64_S, WebAssembly::AND_I64 },
  { WebAssembly::AND_S, WebAssembly::AND },
  { WebAssembly::ANYTRUE_S, WebAssembly::ANYTRUE },
  { WebAssembly::ARGUMENT_externref_S, WebAssembly::ARGUMENT_externref },
  { WebAssembly::ARGUMENT_f32_S, WebAssembly::ARGUMENT_f32 },
  { WebAssembly::ARGUMENT_f64_S, WebAssembly::ARGUMENT_f64 },
  { WebAssembly::ARGUMENT_funcref_S, WebAssembly::ARGUMENT_funcref },
  { WebAssembly::ARGUMENT_i32_S, WebAssembly::ARGUMENT_i32 },
  { WebAssembly::ARGUMENT_i64_S, WebAssembly::ARGUMENT_i64 },
  { WebAssembly::ARGUMENT_v16i8_S, WebAssembly::ARGUMENT_v16i8 },
  { WebAssembly::ARGUMENT_v2f64_S, WebAssembly::ARGUMENT_v2f64 },
  { WebAssembly::ARGUMENT_v2i64_S, WebAssembly::ARGUMENT_v2i64 },
  { WebAssembly::ARGUMENT_v4f32_S, WebAssembly::ARGUMENT_v4f32 },
  { WebAssembly::ARGUMENT_v4i32_S, WebAssembly::ARGUMENT_v4i32 },
  { WebAssembly::ARGUMENT_v8i16_S, WebAssembly::ARGUMENT_v8i16 },
  { WebAssembly::ATOMIC_FENCE_S, WebAssembly::ATOMIC_FENCE },
  { WebAssembly::ATOMIC_LOAD16_U_I32_A32_S, WebAssembly::ATOMIC_LOAD16_U_I32_A32 },
  { WebAssembly::ATOMIC_LOAD16_U_I32_A64_S, WebAssembly::ATOMIC_LOAD16_U_I32_A64 },
  { WebAssembly::ATOMIC_LOAD16_U_I64_A32_S, WebAssembly::ATOMIC_LOAD16_U_I64_A32 },
  { WebAssembly::ATOMIC_LOAD16_U_I64_A64_S, WebAssembly::ATOMIC_LOAD16_U_I64_A64 },
  { WebAssembly::ATOMIC_LOAD32_U_I64_A32_S, WebAssembly::ATOMIC_LOAD32_U_I64_A32 },
  { WebAssembly::ATOMIC_LOAD32_U_I64_A64_S, WebAssembly::ATOMIC_LOAD32_U_I64_A64 },
  { WebAssembly::ATOMIC_LOAD8_U_I32_A32_S, WebAssembly::ATOMIC_LOAD8_U_I32_A32 },
  { WebAssembly::ATOMIC_LOAD8_U_I32_A64_S, WebAssembly::ATOMIC_LOAD8_U_I32_A64 },
  { WebAssembly::ATOMIC_LOAD8_U_I64_A32_S, WebAssembly::ATOMIC_LOAD8_U_I64_A32 },
  { WebAssembly::ATOMIC_LOAD8_U_I64_A64_S, WebAssembly::ATOMIC_LOAD8_U_I64_A64 },
  { WebAssembly::ATOMIC_LOAD_I32_A32_S, WebAssembly::ATOMIC_LOAD_I32_A32 },
  { WebAssembly::ATOMIC_LOAD_I32_A64_S, WebAssembly::ATOMIC_LOAD_I32_A64 },
  { WebAssembly::ATOMIC_LOAD_I64_A32_S, WebAssembly::ATOMIC_LOAD_I64_A32 },
  { WebAssembly::ATOMIC_LOAD_I64_A64_S, WebAssembly::ATOMIC_LOAD_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_ADD_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_ADD_I32_A32 },
  { WebAssembly::ATOMIC_RMW16_U_ADD_I32_A64_S, WebAssembly::ATOMIC_RMW16_U_ADD_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_ADD_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_ADD_I64_A32 },
  { WebAssembly::ATOMIC_RMW16_U_ADD_I64_A64_S, WebAssembly::ATOMIC_RMW16_U_ADD_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_AND_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_AND_I32_A32 },
  { WebAssembly::ATOMIC_RMW16_U_AND_I32_A64_S, WebAssembly::ATOMIC_RMW16_U_AND_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_AND_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_AND_I64_A32 },
  { WebAssembly::ATOMIC_RMW16_U_AND_I64_A64_S, WebAssembly::ATOMIC_RMW16_U_AND_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A32 },
  { WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A64_S, WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A32 },
  { WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A64_S, WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_OR_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_OR_I32_A32 },
  { WebAssembly::ATOMIC_RMW16_U_OR_I32_A64_S, WebAssembly::ATOMIC_RMW16_U_OR_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_OR_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_OR_I64_A32 },
  { WebAssembly::ATOMIC_RMW16_U_OR_I64_A64_S, WebAssembly::ATOMIC_RMW16_U_OR_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_SUB_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_SUB_I32_A32 },
  { WebAssembly::ATOMIC_RMW16_U_SUB_I32_A64_S, WebAssembly::ATOMIC_RMW16_U_SUB_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_SUB_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_SUB_I64_A32 },
  { WebAssembly::ATOMIC_RMW16_U_SUB_I64_A64_S, WebAssembly::ATOMIC_RMW16_U_SUB_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A32 },
  { WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A64_S, WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A32 },
  { WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A64_S, WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_XOR_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_XOR_I32_A32 },
  { WebAssembly::ATOMIC_RMW16_U_XOR_I32_A64_S, WebAssembly::ATOMIC_RMW16_U_XOR_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_XOR_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_XOR_I64_A32 },
  { WebAssembly::ATOMIC_RMW16_U_XOR_I64_A64_S, WebAssembly::ATOMIC_RMW16_U_XOR_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_ADD_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_ADD_I64_A32 },
  { WebAssembly::ATOMIC_RMW32_U_ADD_I64_A64_S, WebAssembly::ATOMIC_RMW32_U_ADD_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_AND_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_AND_I64_A32 },
  { WebAssembly::ATOMIC_RMW32_U_AND_I64_A64_S, WebAssembly::ATOMIC_RMW32_U_AND_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A32 },
  { WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A64_S, WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_OR_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_OR_I64_A32 },
  { WebAssembly::ATOMIC_RMW32_U_OR_I64_A64_S, WebAssembly::ATOMIC_RMW32_U_OR_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_SUB_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_SUB_I64_A32 },
  { WebAssembly::ATOMIC_RMW32_U_SUB_I64_A64_S, WebAssembly::ATOMIC_RMW32_U_SUB_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A32 },
  { WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A64_S, WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_XOR_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_XOR_I64_A32 },
  { WebAssembly::ATOMIC_RMW32_U_XOR_I64_A64_S, WebAssembly::ATOMIC_RMW32_U_XOR_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_ADD_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_ADD_I32_A32 },
  { WebAssembly::ATOMIC_RMW8_U_ADD_I32_A64_S, WebAssembly::ATOMIC_RMW8_U_ADD_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_ADD_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_ADD_I64_A32 },
  { WebAssembly::ATOMIC_RMW8_U_ADD_I64_A64_S, WebAssembly::ATOMIC_RMW8_U_ADD_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_AND_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_AND_I32_A32 },
  { WebAssembly::ATOMIC_RMW8_U_AND_I32_A64_S, WebAssembly::ATOMIC_RMW8_U_AND_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_AND_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_AND_I64_A32 },
  { WebAssembly::ATOMIC_RMW8_U_AND_I64_A64_S, WebAssembly::ATOMIC_RMW8_U_AND_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A32 },
  { WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A64_S, WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A32 },
  { WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A64_S, WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_OR_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_OR_I32_A32 },
  { WebAssembly::ATOMIC_RMW8_U_OR_I32_A64_S, WebAssembly::ATOMIC_RMW8_U_OR_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_OR_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_OR_I64_A32 },
  { WebAssembly::ATOMIC_RMW8_U_OR_I64_A64_S, WebAssembly::ATOMIC_RMW8_U_OR_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_SUB_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_SUB_I32_A32 },
  { WebAssembly::ATOMIC_RMW8_U_SUB_I32_A64_S, WebAssembly::ATOMIC_RMW8_U_SUB_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_SUB_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_SUB_I64_A32 },
  { WebAssembly::ATOMIC_RMW8_U_SUB_I64_A64_S, WebAssembly::ATOMIC_RMW8_U_SUB_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A32 },
  { WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A64_S, WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A32 },
  { WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A64_S, WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_XOR_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_XOR_I32_A32 },
  { WebAssembly::ATOMIC_RMW8_U_XOR_I32_A64_S, WebAssembly::ATOMIC_RMW8_U_XOR_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_XOR_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_XOR_I64_A32 },
  { WebAssembly::ATOMIC_RMW8_U_XOR_I64_A64_S, WebAssembly::ATOMIC_RMW8_U_XOR_I64_A64 },
  { WebAssembly::ATOMIC_RMW_ADD_I32_A32_S, WebAssembly::ATOMIC_RMW_ADD_I32_A32 },
  { WebAssembly::ATOMIC_RMW_ADD_I32_A64_S, WebAssembly::ATOMIC_RMW_ADD_I32_A64 },
  { WebAssembly::ATOMIC_RMW_ADD_I64_A32_S, WebAssembly::ATOMIC_RMW_ADD_I64_A32 },
  { WebAssembly::ATOMIC_RMW_ADD_I64_A64_S, WebAssembly::ATOMIC_RMW_ADD_I64_A64 },
  { WebAssembly::ATOMIC_RMW_AND_I32_A32_S, WebAssembly::ATOMIC_RMW_AND_I32_A32 },
  { WebAssembly::ATOMIC_RMW_AND_I32_A64_S, WebAssembly::ATOMIC_RMW_AND_I32_A64 },
  { WebAssembly::ATOMIC_RMW_AND_I64_A32_S, WebAssembly::ATOMIC_RMW_AND_I64_A32 },
  { WebAssembly::ATOMIC_RMW_AND_I64_A64_S, WebAssembly::ATOMIC_RMW_AND_I64_A64 },
  { WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A32_S, WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A32 },
  { WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A64_S, WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A64 },
  { WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A32_S, WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A32 },
  { WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A64_S, WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW_OR_I32_A32_S, WebAssembly::ATOMIC_RMW_OR_I32_A32 },
  { WebAssembly::ATOMIC_RMW_OR_I32_A64_S, WebAssembly::ATOMIC_RMW_OR_I32_A64 },
  { WebAssembly::ATOMIC_RMW_OR_I64_A32_S, WebAssembly::ATOMIC_RMW_OR_I64_A32 },
  { WebAssembly::ATOMIC_RMW_OR_I64_A64_S, WebAssembly::ATOMIC_RMW_OR_I64_A64 },
  { WebAssembly::ATOMIC_RMW_SUB_I32_A32_S, WebAssembly::ATOMIC_RMW_SUB_I32_A32 },
  { WebAssembly::ATOMIC_RMW_SUB_I32_A64_S, WebAssembly::ATOMIC_RMW_SUB_I32_A64 },
  { WebAssembly::ATOMIC_RMW_SUB_I64_A32_S, WebAssembly::ATOMIC_RMW_SUB_I64_A32 },
  { WebAssembly::ATOMIC_RMW_SUB_I64_A64_S, WebAssembly::ATOMIC_RMW_SUB_I64_A64 },
  { WebAssembly::ATOMIC_RMW_XCHG_I32_A32_S, WebAssembly::ATOMIC_RMW_XCHG_I32_A32 },
  { WebAssembly::ATOMIC_RMW_XCHG_I32_A64_S, WebAssembly::ATOMIC_RMW_XCHG_I32_A64 },
  { WebAssembly::ATOMIC_RMW_XCHG_I64_A32_S, WebAssembly::ATOMIC_RMW_XCHG_I64_A32 },
  { WebAssembly::ATOMIC_RMW_XCHG_I64_A64_S, WebAssembly::ATOMIC_RMW_XCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW_XOR_I32_A32_S, WebAssembly::ATOMIC_RMW_XOR_I32_A32 },
  { WebAssembly::ATOMIC_RMW_XOR_I32_A64_S, WebAssembly::ATOMIC_RMW_XOR_I32_A64 },
  { WebAssembly::ATOMIC_RMW_XOR_I64_A32_S, WebAssembly::ATOMIC_RMW_XOR_I64_A32 },
  { WebAssembly::ATOMIC_RMW_XOR_I64_A64_S, WebAssembly::ATOMIC_RMW_XOR_I64_A64 },
  { WebAssembly::ATOMIC_STORE16_I32_A32_S, WebAssembly::ATOMIC_STORE16_I32_A32 },
  { WebAssembly::ATOMIC_STORE16_I32_A64_S, WebAssembly::ATOMIC_STORE16_I32_A64 },
  { WebAssembly::ATOMIC_STORE16_I64_A32_S, WebAssembly::ATOMIC_STORE16_I64_A32 },
  { WebAssembly::ATOMIC_STORE16_I64_A64_S, WebAssembly::ATOMIC_STORE16_I64_A64 },
  { WebAssembly::ATOMIC_STORE32_I64_A32_S, WebAssembly::ATOMIC_STORE32_I64_A32 },
  { WebAssembly::ATOMIC_STORE32_I64_A64_S, WebAssembly::ATOMIC_STORE32_I64_A64 },
  { WebAssembly::ATOMIC_STORE8_I32_A32_S, WebAssembly::ATOMIC_STORE8_I32_A32 },
  { WebAssembly::ATOMIC_STORE8_I32_A64_S, WebAssembly::ATOMIC_STORE8_I32_A64 },
  { WebAssembly::ATOMIC_STORE8_I64_A32_S, WebAssembly::ATOMIC_STORE8_I64_A32 },
  { WebAssembly::ATOMIC_STORE8_I64_A64_S, WebAssembly::ATOMIC_STORE8_I64_A64 },
  { WebAssembly::ATOMIC_STORE_I32_A32_S, WebAssembly::ATOMIC_STORE_I32_A32 },
  { WebAssembly::ATOMIC_STORE_I32_A64_S, WebAssembly::ATOMIC_STORE_I32_A64 },
  { WebAssembly::ATOMIC_STORE_I64_A32_S, WebAssembly::ATOMIC_STORE_I64_A32 },
  { WebAssembly::ATOMIC_STORE_I64_A64_S, WebAssembly::ATOMIC_STORE_I64_A64 },
  { WebAssembly::AVGR_U_I16x8_S, WebAssembly::AVGR_U_I16x8 },
  { WebAssembly::AVGR_U_I8x16_S, WebAssembly::AVGR_U_I8x16 },
  { WebAssembly::BITMASK_I16x8_S, WebAssembly::BITMASK_I16x8 },
  { WebAssembly::BITMASK_I32x4_S, WebAssembly::BITMASK_I32x4 },
  { WebAssembly::BITMASK_I64x2_S, WebAssembly::BITMASK_I64x2 },
  { WebAssembly::BITMASK_I8x16_S, WebAssembly::BITMASK_I8x16 },
  { WebAssembly::BITSELECT_S, WebAssembly::BITSELECT },
  { WebAssembly::BLOCK_S, WebAssembly::BLOCK },
  { WebAssembly::BR_IF_S, WebAssembly::BR_IF },
  { WebAssembly::BR_S, WebAssembly::BR },
  { WebAssembly::BR_TABLE_I32_S, WebAssembly::BR_TABLE_I32 },
  { WebAssembly::BR_TABLE_I64_S, WebAssembly::BR_TABLE_I64 },
  { WebAssembly::BR_UNLESS_S, WebAssembly::BR_UNLESS },
  { WebAssembly::CALL_INDIRECT_S, WebAssembly::CALL_INDIRECT },
  { WebAssembly::CALL_S, WebAssembly::CALL },
  { WebAssembly::CATCH_ALL_S, WebAssembly::CATCH_ALL },
  { WebAssembly::CATCH_S, WebAssembly::CATCH },
  { WebAssembly::CEIL_F32_S, WebAssembly::CEIL_F32 },
  { WebAssembly::CEIL_F32x4_S, WebAssembly::CEIL_F32x4 },
  { WebAssembly::CEIL_F64_S, WebAssembly::CEIL_F64 },
  { WebAssembly::CEIL_F64x2_S, WebAssembly::CEIL_F64x2 },
  { WebAssembly::CLZ_I32_S, WebAssembly::CLZ_I32 },
  { WebAssembly::CLZ_I64_S, WebAssembly::CLZ_I64 },
  { WebAssembly::CONST_F32_S, WebAssembly::CONST_F32 },
  { WebAssembly::CONST_F64_S, WebAssembly::CONST_F64 },
  { WebAssembly::CONST_I32_S, WebAssembly::CONST_I32 },
  { WebAssembly::CONST_I64_S, WebAssembly::CONST_I64 },
  { WebAssembly::CONST_V128_F32x4_S, WebAssembly::CONST_V128_F32x4 },
  { WebAssembly::CONST_V128_F64x2_S, WebAssembly::CONST_V128_F64x2 },
  { WebAssembly::CONST_V128_I16x8_S, WebAssembly::CONST_V128_I16x8 },
  { WebAssembly::CONST_V128_I32x4_S, WebAssembly::CONST_V128_I32x4 },
  { WebAssembly::CONST_V128_I64x2_S, WebAssembly::CONST_V128_I64x2 },
  { WebAssembly::CONST_V128_I8x16_S, WebAssembly::CONST_V128_I8x16 },
  { WebAssembly::COPYSIGN_F32_S, WebAssembly::COPYSIGN_F32 },
  { WebAssembly::COPYSIGN_F64_S, WebAssembly::COPYSIGN_F64 },
  { WebAssembly::COPY_EXTERNREF_S, WebAssembly::COPY_EXTERNREF },
  { WebAssembly::COPY_F32_S, WebAssembly::COPY_F32 },
  { WebAssembly::COPY_F64_S, WebAssembly::COPY_F64 },
  { WebAssembly::COPY_FUNCREF_S, WebAssembly::COPY_FUNCREF },
  { WebAssembly::COPY_I32_S, WebAssembly::COPY_I32 },
  { WebAssembly::COPY_I64_S, WebAssembly::COPY_I64 },
  { WebAssembly::COPY_V128_S, WebAssembly::COPY_V128 },
  { WebAssembly::CTZ_I32_S, WebAssembly::CTZ_I32 },
  { WebAssembly::CTZ_I64_S, WebAssembly::CTZ_I64 },
  { WebAssembly::DEBUG_UNREACHABLE_S, WebAssembly::DEBUG_UNREACHABLE },
  { WebAssembly::DELEGATE_S, WebAssembly::DELEGATE },
  { WebAssembly::DIV_F32_S, WebAssembly::DIV_F32 },
  { WebAssembly::DIV_F32x4_S, WebAssembly::DIV_F32x4 },
  { WebAssembly::DIV_F64_S, WebAssembly::DIV_F64 },
  { WebAssembly::DIV_F64x2_S, WebAssembly::DIV_F64x2 },
  { WebAssembly::DIV_S_I32_S, WebAssembly::DIV_S_I32 },
  { WebAssembly::DIV_S_I64_S, WebAssembly::DIV_S_I64 },
  { WebAssembly::DIV_U_I32_S, WebAssembly::DIV_U_I32 },
  { WebAssembly::DIV_U_I64_S, WebAssembly::DIV_U_I64 },
  { WebAssembly::DOT_S, WebAssembly::DOT },
  { WebAssembly::DROP_EXTERNREF_S, WebAssembly::DROP_EXTERNREF },
  { WebAssembly::DROP_F32_S, WebAssembly::DROP_F32 },
  { WebAssembly::DROP_F64_S, WebAssembly::DROP_F64 },
  { WebAssembly::DROP_FUNCREF_S, WebAssembly::DROP_FUNCREF },
  { WebAssembly::DROP_I32_S, WebAssembly::DROP_I32 },
  { WebAssembly::DROP_I64_S, WebAssembly::DROP_I64 },
  { WebAssembly::DROP_V128_S, WebAssembly::DROP_V128 },
  { WebAssembly::ELSE_S, WebAssembly::ELSE },
  { WebAssembly::END_BLOCK_S, WebAssembly::END_BLOCK },
  { WebAssembly::END_FUNCTION_S, WebAssembly::END_FUNCTION },
  { WebAssembly::END_IF_S, WebAssembly::END_IF },
  { WebAssembly::END_LOOP_S, WebAssembly::END_LOOP },
  { WebAssembly::END_S, WebAssembly::END },
  { WebAssembly::END_TRY_S, WebAssembly::END_TRY },
  { WebAssembly::EQZ_I32_S, WebAssembly::EQZ_I32 },
  { WebAssembly::EQZ_I64_S, WebAssembly::EQZ_I64 },
  { WebAssembly::EQ_F32_S, WebAssembly::EQ_F32 },
  { WebAssembly::EQ_F32x4_S, WebAssembly::EQ_F32x4 },
  { WebAssembly::EQ_F64_S, WebAssembly::EQ_F64 },
  { WebAssembly::EQ_F64x2_S, WebAssembly::EQ_F64x2 },
  { WebAssembly::EQ_I16x8_S, WebAssembly::EQ_I16x8 },
  { WebAssembly::EQ_I32_S, WebAssembly::EQ_I32 },
  { WebAssembly::EQ_I32x4_S, WebAssembly::EQ_I32x4 },
  { WebAssembly::EQ_I64_S, WebAssembly::EQ_I64 },
  { WebAssembly::EQ_I64x2_S, WebAssembly::EQ_I64x2 },
  { WebAssembly::EQ_I8x16_S, WebAssembly::EQ_I8x16 },
  { WebAssembly::EXTMUL_HIGH_S_I16x8_S, WebAssembly::EXTMUL_HIGH_S_I16x8 },
  { WebAssembly::EXTMUL_HIGH_S_I32x4_S, WebAssembly::EXTMUL_HIGH_S_I32x4 },
  { WebAssembly::EXTMUL_HIGH_S_I64x2_S, WebAssembly::EXTMUL_HIGH_S_I64x2 },
  { WebAssembly::EXTMUL_HIGH_U_I16x8_S, WebAssembly::EXTMUL_HIGH_U_I16x8 },
  { WebAssembly::EXTMUL_HIGH_U_I32x4_S, WebAssembly::EXTMUL_HIGH_U_I32x4 },
  { WebAssembly::EXTMUL_HIGH_U_I64x2_S, WebAssembly::EXTMUL_HIGH_U_I64x2 },
  { WebAssembly::EXTMUL_LOW_S_I16x8_S, WebAssembly::EXTMUL_LOW_S_I16x8 },
  { WebAssembly::EXTMUL_LOW_S_I32x4_S, WebAssembly::EXTMUL_LOW_S_I32x4 },
  { WebAssembly::EXTMUL_LOW_S_I64x2_S, WebAssembly::EXTMUL_LOW_S_I64x2 },
  { WebAssembly::EXTMUL_LOW_U_I16x8_S, WebAssembly::EXTMUL_LOW_U_I16x8 },
  { WebAssembly::EXTMUL_LOW_U_I32x4_S, WebAssembly::EXTMUL_LOW_U_I32x4 },
  { WebAssembly::EXTMUL_LOW_U_I64x2_S, WebAssembly::EXTMUL_LOW_U_I64x2 },
  { WebAssembly::EXTRACT_LANE_F32x4_S, WebAssembly::EXTRACT_LANE_F32x4 },
  { WebAssembly::EXTRACT_LANE_F64x2_S, WebAssembly::EXTRACT_LANE_F64x2 },
  { WebAssembly::EXTRACT_LANE_I16x8_s_S, WebAssembly::EXTRACT_LANE_I16x8_s },
  { WebAssembly::EXTRACT_LANE_I16x8_u_S, WebAssembly::EXTRACT_LANE_I16x8_u },
  { WebAssembly::EXTRACT_LANE_I32x4_S, WebAssembly::EXTRACT_LANE_I32x4 },
  { WebAssembly::EXTRACT_LANE_I64x2_S, WebAssembly::EXTRACT_LANE_I64x2 },
  { WebAssembly::EXTRACT_LANE_I8x16_s_S, WebAssembly::EXTRACT_LANE_I8x16_s },
  { WebAssembly::EXTRACT_LANE_I8x16_u_S, WebAssembly::EXTRACT_LANE_I8x16_u },
  { WebAssembly::F32_CONVERT_S_I32_S, WebAssembly::F32_CONVERT_S_I32 },
  { WebAssembly::F32_CONVERT_S_I64_S, WebAssembly::F32_CONVERT_S_I64 },
  { WebAssembly::F32_CONVERT_U_I32_S, WebAssembly::F32_CONVERT_U_I32 },
  { WebAssembly::F32_CONVERT_U_I64_S, WebAssembly::F32_CONVERT_U_I64 },
  { WebAssembly::F32_DEMOTE_F64_S, WebAssembly::F32_DEMOTE_F64 },
  { WebAssembly::F32_REINTERPRET_I32_S, WebAssembly::F32_REINTERPRET_I32 },
  { WebAssembly::F64_CONVERT_S_I32_S, WebAssembly::F64_CONVERT_S_I32 },
  { WebAssembly::F64_CONVERT_S_I64_S, WebAssembly::F64_CONVERT_S_I64 },
  { WebAssembly::F64_CONVERT_U_I32_S, WebAssembly::F64_CONVERT_U_I32 },
  { WebAssembly::F64_CONVERT_U_I64_S, WebAssembly::F64_CONVERT_U_I64 },
  { WebAssembly::F64_PROMOTE_F32_S, WebAssembly::F64_PROMOTE_F32 },
  { WebAssembly::F64_REINTERPRET_I64_S, WebAssembly::F64_REINTERPRET_I64 },
  { WebAssembly::FALLTHROUGH_RETURN_S, WebAssembly::FALLTHROUGH_RETURN },
  { WebAssembly::FLOOR_F32_S, WebAssembly::FLOOR_F32 },
  { WebAssembly::FLOOR_F32x4_S, WebAssembly::FLOOR_F32x4 },
  { WebAssembly::FLOOR_F64_S, WebAssembly::FLOOR_F64 },
  { WebAssembly::FLOOR_F64x2_S, WebAssembly::FLOOR_F64x2 },
  { WebAssembly::FP_TO_SINT_I32_F32_S, WebAssembly::FP_TO_SINT_I32_F32 },
  { WebAssembly::FP_TO_SINT_I32_F64_S, WebAssembly::FP_TO_SINT_I32_F64 },
  { WebAssembly::FP_TO_SINT_I64_F32_S, WebAssembly::FP_TO_SINT_I64_F32 },
  { WebAssembly::FP_TO_SINT_I64_F64_S, WebAssembly::FP_TO_SINT_I64_F64 },
  { WebAssembly::FP_TO_UINT_I32_F32_S, WebAssembly::FP_TO_UINT_I32_F32 },
  { WebAssembly::FP_TO_UINT_I32_F64_S, WebAssembly::FP_TO_UINT_I32_F64 },
  { WebAssembly::FP_TO_UINT_I64_F32_S, WebAssembly::FP_TO_UINT_I64_F32 },
  { WebAssembly::FP_TO_UINT_I64_F64_S, WebAssembly::FP_TO_UINT_I64_F64 },
  { WebAssembly::GE_F32_S, WebAssembly::GE_F32 },
  { WebAssembly::GE_F32x4_S, WebAssembly::GE_F32x4 },
  { WebAssembly::GE_F64_S, WebAssembly::GE_F64 },
  { WebAssembly::GE_F64x2_S, WebAssembly::GE_F64x2 },
  { WebAssembly::GE_S_I16x8_S, WebAssembly::GE_S_I16x8 },
  { WebAssembly::GE_S_I32_S, WebAssembly::GE_S_I32 },
  { WebAssembly::GE_S_I32x4_S, WebAssembly::GE_S_I32x4 },
  { WebAssembly::GE_S_I64_S, WebAssembly::GE_S_I64 },
  { WebAssembly::GE_S_I64x2_S, WebAssembly::GE_S_I64x2 },
  { WebAssembly::GE_S_I8x16_S, WebAssembly::GE_S_I8x16 },
  { WebAssembly::GE_U_I16x8_S, WebAssembly::GE_U_I16x8 },
  { WebAssembly::GE_U_I32_S, WebAssembly::GE_U_I32 },
  { WebAssembly::GE_U_I32x4_S, WebAssembly::GE_U_I32x4 },
  { WebAssembly::GE_U_I64_S, WebAssembly::GE_U_I64 },
  { WebAssembly::GE_U_I8x16_S, WebAssembly::GE_U_I8x16 },
  { WebAssembly::GLOBAL_GET_EXTERNREF_S, WebAssembly::GLOBAL_GET_EXTERNREF },
  { WebAssembly::GLOBAL_GET_F32_S, WebAssembly::GLOBAL_GET_F32 },
  { WebAssembly::GLOBAL_GET_F64_S, WebAssembly::GLOBAL_GET_F64 },
  { WebAssembly::GLOBAL_GET_FUNCREF_S, WebAssembly::GLOBAL_GET_FUNCREF },
  { WebAssembly::GLOBAL_GET_I32_S, WebAssembly::GLOBAL_GET_I32 },
  { WebAssembly::GLOBAL_GET_I64_S, WebAssembly::GLOBAL_GET_I64 },
  { WebAssembly::GLOBAL_GET_V128_S, WebAssembly::GLOBAL_GET_V128 },
  { WebAssembly::GLOBAL_SET_EXTERNREF_S, WebAssembly::GLOBAL_SET_EXTERNREF },
  { WebAssembly::GLOBAL_SET_F32_S, WebAssembly::GLOBAL_SET_F32 },
  { WebAssembly::GLOBAL_SET_F64_S, WebAssembly::GLOBAL_SET_F64 },
  { WebAssembly::GLOBAL_SET_FUNCREF_S, WebAssembly::GLOBAL_SET_FUNCREF },
  { WebAssembly::GLOBAL_SET_I32_S, WebAssembly::GLOBAL_SET_I32 },
  { WebAssembly::GLOBAL_SET_I64_S, WebAssembly::GLOBAL_SET_I64 },
  { WebAssembly::GLOBAL_SET_V128_S, WebAssembly::GLOBAL_SET_V128 },
  { WebAssembly::GT_F32_S, WebAssembly::GT_F32 },
  { WebAssembly::GT_F32x4_S, WebAssembly::GT_F32x4 },
  { WebAssembly::GT_F64_S, WebAssembly::GT_F64 },
  { WebAssembly::GT_F64x2_S, WebAssembly::GT_F64x2 },
  { WebAssembly::GT_S_I16x8_S, WebAssembly::GT_S_I16x8 },
  { WebAssembly::GT_S_I32_S, WebAssembly::GT_S_I32 },
  { WebAssembly::GT_S_I32x4_S, WebAssembly::GT_S_I32x4 },
  { WebAssembly::GT_S_I64_S, WebAssembly::GT_S_I64 },
  { WebAssembly::GT_S_I64x2_S, WebAssembly::GT_S_I64x2 },
  { WebAssembly::GT_S_I8x16_S, WebAssembly::GT_S_I8x16 },
  { WebAssembly::GT_U_I16x8_S, WebAssembly::GT_U_I16x8 },
  { WebAssembly::GT_U_I32_S, WebAssembly::GT_U_I32 },
  { WebAssembly::GT_U_I32x4_S, WebAssembly::GT_U_I32x4 },
  { WebAssembly::GT_U_I64_S, WebAssembly::GT_U_I64 },
  { WebAssembly::GT_U_I8x16_S, WebAssembly::GT_U_I8x16 },
  { WebAssembly::I32_EXTEND16_S_I32_S, WebAssembly::I32_EXTEND16_S_I32 },
  { WebAssembly::I32_EXTEND8_S_I32_S, WebAssembly::I32_EXTEND8_S_I32 },
  { WebAssembly::I32_REINTERPRET_F32_S, WebAssembly::I32_REINTERPRET_F32 },
  { WebAssembly::I32_TRUNC_S_F32_S, WebAssembly::I32_TRUNC_S_F32 },
  { WebAssembly::I32_TRUNC_S_F64_S, WebAssembly::I32_TRUNC_S_F64 },
  { WebAssembly::I32_TRUNC_S_SAT_F32_S, WebAssembly::I32_TRUNC_S_SAT_F32 },
  { WebAssembly::I32_TRUNC_S_SAT_F64_S, WebAssembly::I32_TRUNC_S_SAT_F64 },
  { WebAssembly::I32_TRUNC_U_F32_S, WebAssembly::I32_TRUNC_U_F32 },
  { WebAssembly::I32_TRUNC_U_F64_S, WebAssembly::I32_TRUNC_U_F64 },
  { WebAssembly::I32_TRUNC_U_SAT_F32_S, WebAssembly::I32_TRUNC_U_SAT_F32 },
  { WebAssembly::I32_TRUNC_U_SAT_F64_S, WebAssembly::I32_TRUNC_U_SAT_F64 },
  { WebAssembly::I32_WRAP_I64_S, WebAssembly::I32_WRAP_I64 },
  { WebAssembly::I64_EXTEND16_S_I64_S, WebAssembly::I64_EXTEND16_S_I64 },
  { WebAssembly::I64_EXTEND32_S_I64_S, WebAssembly::I64_EXTEND32_S_I64 },
  { WebAssembly::I64_EXTEND8_S_I64_S, WebAssembly::I64_EXTEND8_S_I64 },
  { WebAssembly::I64_EXTEND_S_I32_S, WebAssembly::I64_EXTEND_S_I32 },
  { WebAssembly::I64_EXTEND_U_I32_S, WebAssembly::I64_EXTEND_U_I32 },
  { WebAssembly::I64_REINTERPRET_F64_S, WebAssembly::I64_REINTERPRET_F64 },
  { WebAssembly::I64_TRUNC_S_F32_S, WebAssembly::I64_TRUNC_S_F32 },
  { WebAssembly::I64_TRUNC_S_F64_S, WebAssembly::I64_TRUNC_S_F64 },
  { WebAssembly::I64_TRUNC_S_SAT_F32_S, WebAssembly::I64_TRUNC_S_SAT_F32 },
  { WebAssembly::I64_TRUNC_S_SAT_F64_S, WebAssembly::I64_TRUNC_S_SAT_F64 },
  { WebAssembly::I64_TRUNC_U_F32_S, WebAssembly::I64_TRUNC_U_F32 },
  { WebAssembly::I64_TRUNC_U_F64_S, WebAssembly::I64_TRUNC_U_F64 },
  { WebAssembly::I64_TRUNC_U_SAT_F32_S, WebAssembly::I64_TRUNC_U_SAT_F32 },
  { WebAssembly::I64_TRUNC_U_SAT_F64_S, WebAssembly::I64_TRUNC_U_SAT_F64 },
  { WebAssembly::IF_S, WebAssembly::IF },
  { WebAssembly::LANESELECT_I16x8_S, WebAssembly::LANESELECT_I16x8 },
  { WebAssembly::LANESELECT_I32x4_S, WebAssembly::LANESELECT_I32x4 },
  { WebAssembly::LANESELECT_I64x2_S, WebAssembly::LANESELECT_I64x2 },
  { WebAssembly::LANESELECT_I8x16_S, WebAssembly::LANESELECT_I8x16 },
  { WebAssembly::LE_F32_S, WebAssembly::LE_F32 },
  { WebAssembly::LE_F32x4_S, WebAssembly::LE_F32x4 },
  { WebAssembly::LE_F64_S, WebAssembly::LE_F64 },
  { WebAssembly::LE_F64x2_S, WebAssembly::LE_F64x2 },
  { WebAssembly::LE_S_I16x8_S, WebAssembly::LE_S_I16x8 },
  { WebAssembly::LE_S_I32_S, WebAssembly::LE_S_I32 },
  { WebAssembly::LE_S_I32x4_S, WebAssembly::LE_S_I32x4 },
  { WebAssembly::LE_S_I64_S, WebAssembly::LE_S_I64 },
  { WebAssembly::LE_S_I64x2_S, WebAssembly::LE_S_I64x2 },
  { WebAssembly::LE_S_I8x16_S, WebAssembly::LE_S_I8x16 },
  { WebAssembly::LE_U_I16x8_S, WebAssembly::LE_U_I16x8 },
  { WebAssembly::LE_U_I32_S, WebAssembly::LE_U_I32 },
  { WebAssembly::LE_U_I32x4_S, WebAssembly::LE_U_I32x4 },
  { WebAssembly::LE_U_I64_S, WebAssembly::LE_U_I64 },
  { WebAssembly::LE_U_I8x16_S, WebAssembly::LE_U_I8x16 },
  { WebAssembly::LOAD16_SPLAT_A32_S, WebAssembly::LOAD16_SPLAT_A32 },
  { WebAssembly::LOAD16_SPLAT_A64_S, WebAssembly::LOAD16_SPLAT_A64 },
  { WebAssembly::LOAD16_S_I32_A32_S, WebAssembly::LOAD16_S_I32_A32 },
  { WebAssembly::LOAD16_S_I32_A64_S, WebAssembly::LOAD16_S_I32_A64 },
  { WebAssembly::LOAD16_S_I64_A32_S, WebAssembly::LOAD16_S_I64_A32 },
  { WebAssembly::LOAD16_S_I64_A64_S, WebAssembly::LOAD16_S_I64_A64 },
  { WebAssembly::LOAD16_U_I32_A32_S, WebAssembly::LOAD16_U_I32_A32 },
  { WebAssembly::LOAD16_U_I32_A64_S, WebAssembly::LOAD16_U_I32_A64 },
  { WebAssembly::LOAD16_U_I64_A32_S, WebAssembly::LOAD16_U_I64_A32 },
  { WebAssembly::LOAD16_U_I64_A64_S, WebAssembly::LOAD16_U_I64_A64 },
  { WebAssembly::LOAD32_SPLAT_A32_S, WebAssembly::LOAD32_SPLAT_A32 },
  { WebAssembly::LOAD32_SPLAT_A64_S, WebAssembly::LOAD32_SPLAT_A64 },
  { WebAssembly::LOAD32_S_I64_A32_S, WebAssembly::LOAD32_S_I64_A32 },
  { WebAssembly::LOAD32_S_I64_A64_S, WebAssembly::LOAD32_S_I64_A64 },
  { WebAssembly::LOAD32_U_I64_A32_S, WebAssembly::LOAD32_U_I64_A32 },
  { WebAssembly::LOAD32_U_I64_A64_S, WebAssembly::LOAD32_U_I64_A64 },
  { WebAssembly::LOAD64_SPLAT_A32_S, WebAssembly::LOAD64_SPLAT_A32 },
  { WebAssembly::LOAD64_SPLAT_A64_S, WebAssembly::LOAD64_SPLAT_A64 },
  { WebAssembly::LOAD8_SPLAT_A32_S, WebAssembly::LOAD8_SPLAT_A32 },
  { WebAssembly::LOAD8_SPLAT_A64_S, WebAssembly::LOAD8_SPLAT_A64 },
  { WebAssembly::LOAD8_S_I32_A32_S, WebAssembly::LOAD8_S_I32_A32 },
  { WebAssembly::LOAD8_S_I32_A64_S, WebAssembly::LOAD8_S_I32_A64 },
  { WebAssembly::LOAD8_S_I64_A32_S, WebAssembly::LOAD8_S_I64_A32 },
  { WebAssembly::LOAD8_S_I64_A64_S, WebAssembly::LOAD8_S_I64_A64 },
  { WebAssembly::LOAD8_U_I32_A32_S, WebAssembly::LOAD8_U_I32_A32 },
  { WebAssembly::LOAD8_U_I32_A64_S, WebAssembly::LOAD8_U_I32_A64 },
  { WebAssembly::LOAD8_U_I64_A32_S, WebAssembly::LOAD8_U_I64_A32 },
  { WebAssembly::LOAD8_U_I64_A64_S, WebAssembly::LOAD8_U_I64_A64 },
  { WebAssembly::LOAD_EXTEND_S_I16x8_A32_S, WebAssembly::LOAD_EXTEND_S_I16x8_A32 },
  { WebAssembly::LOAD_EXTEND_S_I16x8_A64_S, WebAssembly::LOAD_EXTEND_S_I16x8_A64 },
  { WebAssembly::LOAD_EXTEND_S_I32x4_A32_S, WebAssembly::LOAD_EXTEND_S_I32x4_A32 },
  { WebAssembly::LOAD_EXTEND_S_I32x4_A64_S, WebAssembly::LOAD_EXTEND_S_I32x4_A64 },
  { WebAssembly::LOAD_EXTEND_S_I64x2_A32_S, WebAssembly::LOAD_EXTEND_S_I64x2_A32 },
  { WebAssembly::LOAD_EXTEND_S_I64x2_A64_S, WebAssembly::LOAD_EXTEND_S_I64x2_A64 },
  { WebAssembly::LOAD_EXTEND_U_I16x8_A32_S, WebAssembly::LOAD_EXTEND_U_I16x8_A32 },
  { WebAssembly::LOAD_EXTEND_U_I16x8_A64_S, WebAssembly::LOAD_EXTEND_U_I16x8_A64 },
  { WebAssembly::LOAD_EXTEND_U_I32x4_A32_S, WebAssembly::LOAD_EXTEND_U_I32x4_A32 },
  { WebAssembly::LOAD_EXTEND_U_I32x4_A64_S, WebAssembly::LOAD_EXTEND_U_I32x4_A64 },
  { WebAssembly::LOAD_EXTEND_U_I64x2_A32_S, WebAssembly::LOAD_EXTEND_U_I64x2_A32 },
  { WebAssembly::LOAD_EXTEND_U_I64x2_A64_S, WebAssembly::LOAD_EXTEND_U_I64x2_A64 },
  { WebAssembly::LOAD_F32_A32_S, WebAssembly::LOAD_F32_A32 },
  { WebAssembly::LOAD_F32_A64_S, WebAssembly::LOAD_F32_A64 },
  { WebAssembly::LOAD_F64_A32_S, WebAssembly::LOAD_F64_A32 },
  { WebAssembly::LOAD_F64_A64_S, WebAssembly::LOAD_F64_A64 },
  { WebAssembly::LOAD_I32_A32_S, WebAssembly::LOAD_I32_A32 },
  { WebAssembly::LOAD_I32_A64_S, WebAssembly::LOAD_I32_A64 },
  { WebAssembly::LOAD_I64_A32_S, WebAssembly::LOAD_I64_A32 },
  { WebAssembly::LOAD_I64_A64_S, WebAssembly::LOAD_I64_A64 },
  { WebAssembly::LOAD_LANE_I16x8_A32_S, WebAssembly::LOAD_LANE_I16x8_A32 },
  { WebAssembly::LOAD_LANE_I16x8_A64_S, WebAssembly::LOAD_LANE_I16x8_A64 },
  { WebAssembly::LOAD_LANE_I32x4_A32_S, WebAssembly::LOAD_LANE_I32x4_A32 },
  { WebAssembly::LOAD_LANE_I32x4_A64_S, WebAssembly::LOAD_LANE_I32x4_A64 },
  { WebAssembly::LOAD_LANE_I64x2_A32_S, WebAssembly::LOAD_LANE_I64x2_A32 },
  { WebAssembly::LOAD_LANE_I64x2_A64_S, WebAssembly::LOAD_LANE_I64x2_A64 },
  { WebAssembly::LOAD_LANE_I8x16_A32_S, WebAssembly::LOAD_LANE_I8x16_A32 },
  { WebAssembly::LOAD_LANE_I8x16_A64_S, WebAssembly::LOAD_LANE_I8x16_A64 },
  { WebAssembly::LOAD_V128_A32_S, WebAssembly::LOAD_V128_A32 },
  { WebAssembly::LOAD_V128_A64_S, WebAssembly::LOAD_V128_A64 },
  { WebAssembly::LOAD_ZERO_I32x4_A32_S, WebAssembly::LOAD_ZERO_I32x4_A32 },
  { WebAssembly::LOAD_ZERO_I32x4_A64_S, WebAssembly::LOAD_ZERO_I32x4_A64 },
  { WebAssembly::LOAD_ZERO_I64x2_A32_S, WebAssembly::LOAD_ZERO_I64x2_A32 },
  { WebAssembly::LOAD_ZERO_I64x2_A64_S, WebAssembly::LOAD_ZERO_I64x2_A64 },
  { WebAssembly::LOCAL_GET_EXTERNREF_S, WebAssembly::LOCAL_GET_EXTERNREF },
  { WebAssembly::LOCAL_GET_F32_S, WebAssembly::LOCAL_GET_F32 },
  { WebAssembly::LOCAL_GET_F64_S, WebAssembly::LOCAL_GET_F64 },
  { WebAssembly::LOCAL_GET_FUNCREF_S, WebAssembly::LOCAL_GET_FUNCREF },
  { WebAssembly::LOCAL_GET_I32_S, WebAssembly::LOCAL_GET_I32 },
  { WebAssembly::LOCAL_GET_I64_S, WebAssembly::LOCAL_GET_I64 },
  { WebAssembly::LOCAL_GET_V128_S, WebAssembly::LOCAL_GET_V128 },
  { WebAssembly::LOCAL_SET_EXTERNREF_S, WebAssembly::LOCAL_SET_EXTERNREF },
  { WebAssembly::LOCAL_SET_F32_S, WebAssembly::LOCAL_SET_F32 },
  { WebAssembly::LOCAL_SET_F64_S, WebAssembly::LOCAL_SET_F64 },
  { WebAssembly::LOCAL_SET_FUNCREF_S, WebAssembly::LOCAL_SET_FUNCREF },
  { WebAssembly::LOCAL_SET_I32_S, WebAssembly::LOCAL_SET_I32 },
  { WebAssembly::LOCAL_SET_I64_S, WebAssembly::LOCAL_SET_I64 },
  { WebAssembly::LOCAL_SET_V128_S, WebAssembly::LOCAL_SET_V128 },
  { WebAssembly::LOCAL_TEE_EXTERNREF_S, WebAssembly::LOCAL_TEE_EXTERNREF },
  { WebAssembly::LOCAL_TEE_F32_S, WebAssembly::LOCAL_TEE_F32 },
  { WebAssembly::LOCAL_TEE_F64_S, WebAssembly::LOCAL_TEE_F64 },
  { WebAssembly::LOCAL_TEE_FUNCREF_S, WebAssembly::LOCAL_TEE_FUNCREF },
  { WebAssembly::LOCAL_TEE_I32_S, WebAssembly::LOCAL_TEE_I32 },
  { WebAssembly::LOCAL_TEE_I64_S, WebAssembly::LOCAL_TEE_I64 },
  { WebAssembly::LOCAL_TEE_V128_S, WebAssembly::LOCAL_TEE_V128 },
  { WebAssembly::LOOP_S, WebAssembly::LOOP },
  { WebAssembly::LT_F32_S, WebAssembly::LT_F32 },
  { WebAssembly::LT_F32x4_S, WebAssembly::LT_F32x4 },
  { WebAssembly::LT_F64_S, WebAssembly::LT_F64 },
  { WebAssembly::LT_F64x2_S, WebAssembly::LT_F64x2 },
  { WebAssembly::LT_S_I16x8_S, WebAssembly::LT_S_I16x8 },
  { WebAssembly::LT_S_I32_S, WebAssembly::LT_S_I32 },
  { WebAssembly::LT_S_I32x4_S, WebAssembly::LT_S_I32x4 },
  { WebAssembly::LT_S_I64_S, WebAssembly::LT_S_I64 },
  { WebAssembly::LT_S_I64x2_S, WebAssembly::LT_S_I64x2 },
  { WebAssembly::LT_S_I8x16_S, WebAssembly::LT_S_I8x16 },
  { WebAssembly::LT_U_I16x8_S, WebAssembly::LT_U_I16x8 },
  { WebAssembly::LT_U_I32_S, WebAssembly::LT_U_I32 },
  { WebAssembly::LT_U_I32x4_S, WebAssembly::LT_U_I32x4 },
  { WebAssembly::LT_U_I64_S, WebAssembly::LT_U_I64 },
  { WebAssembly::LT_U_I8x16_S, WebAssembly::LT_U_I8x16 },
  { WebAssembly::MADD_F32x4_S, WebAssembly::MADD_F32x4 },
  { WebAssembly::MADD_F64x2_S, WebAssembly::MADD_F64x2 },
  { WebAssembly::MAX_F32_S, WebAssembly::MAX_F32 },
  { WebAssembly::MAX_F32x4_S, WebAssembly::MAX_F32x4 },
  { WebAssembly::MAX_F64_S, WebAssembly::MAX_F64 },
  { WebAssembly::MAX_F64x2_S, WebAssembly::MAX_F64x2 },
  { WebAssembly::MAX_S_I16x8_S, WebAssembly::MAX_S_I16x8 },
  { WebAssembly::MAX_S_I32x4_S, WebAssembly::MAX_S_I32x4 },
  { WebAssembly::MAX_S_I8x16_S, WebAssembly::MAX_S_I8x16 },
  { WebAssembly::MAX_U_I16x8_S, WebAssembly::MAX_U_I16x8 },
  { WebAssembly::MAX_U_I32x4_S, WebAssembly::MAX_U_I32x4 },
  { WebAssembly::MAX_U_I8x16_S, WebAssembly::MAX_U_I8x16 },
  { WebAssembly::MEMORY_ATOMIC_NOTIFY_A32_S, WebAssembly::MEMORY_ATOMIC_NOTIFY_A32 },
  { WebAssembly::MEMORY_ATOMIC_NOTIFY_A64_S, WebAssembly::MEMORY_ATOMIC_NOTIFY_A64 },
  { WebAssembly::MEMORY_ATOMIC_WAIT32_A32_S, WebAssembly::MEMORY_ATOMIC_WAIT32_A32 },
  { WebAssembly::MEMORY_ATOMIC_WAIT32_A64_S, WebAssembly::MEMORY_ATOMIC_WAIT32_A64 },
  { WebAssembly::MEMORY_ATOMIC_WAIT64_A32_S, WebAssembly::MEMORY_ATOMIC_WAIT64_A32 },
  { WebAssembly::MEMORY_ATOMIC_WAIT64_A64_S, WebAssembly::MEMORY_ATOMIC_WAIT64_A64 },
  { WebAssembly::MIN_F32_S, WebAssembly::MIN_F32 },
  { WebAssembly::MIN_F32x4_S, WebAssembly::MIN_F32x4 },
  { WebAssembly::MIN_F64_S, WebAssembly::MIN_F64 },
  { WebAssembly::MIN_F64x2_S, WebAssembly::MIN_F64x2 },
  { WebAssembly::MIN_S_I16x8_S, WebAssembly::MIN_S_I16x8 },
  { WebAssembly::MIN_S_I32x4_S, WebAssembly::MIN_S_I32x4 },
  { WebAssembly::MIN_S_I8x16_S, WebAssembly::MIN_S_I8x16 },
  { WebAssembly::MIN_U_I16x8_S, WebAssembly::MIN_U_I16x8 },
  { WebAssembly::MIN_U_I32x4_S, WebAssembly::MIN_U_I32x4 },
  { WebAssembly::MIN_U_I8x16_S, WebAssembly::MIN_U_I8x16 },
  { WebAssembly::MUL_F32_S, WebAssembly::MUL_F32 },
  { WebAssembly::MUL_F32x4_S, WebAssembly::MUL_F32x4 },
  { WebAssembly::MUL_F64_S, WebAssembly::MUL_F64 },
  { WebAssembly::MUL_F64x2_S, WebAssembly::MUL_F64x2 },
  { WebAssembly::MUL_I16x8_S, WebAssembly::MUL_I16x8 },
  { WebAssembly::MUL_I32_S, WebAssembly::MUL_I32 },
  { WebAssembly::MUL_I32x4_S, WebAssembly::MUL_I32x4 },
  { WebAssembly::MUL_I64_S, WebAssembly::MUL_I64 },
  { WebAssembly::MUL_I64x2_S, WebAssembly::MUL_I64x2 },
  { WebAssembly::NARROW_S_I16x8_S, WebAssembly::NARROW_S_I16x8 },
  { WebAssembly::NARROW_S_I8x16_S, WebAssembly::NARROW_S_I8x16 },
  { WebAssembly::NARROW_U_I16x8_S, WebAssembly::NARROW_U_I16x8 },
  { WebAssembly::NARROW_U_I8x16_S, WebAssembly::NARROW_U_I8x16 },
  { WebAssembly::NEAREST_F32_S, WebAssembly::NEAREST_F32 },
  { WebAssembly::NEAREST_F32x4_S, WebAssembly::NEAREST_F32x4 },
  { WebAssembly::NEAREST_F64_S, WebAssembly::NEAREST_F64 },
  { WebAssembly::NEAREST_F64x2_S, WebAssembly::NEAREST_F64x2 },
  { WebAssembly::NEG_F32_S, WebAssembly::NEG_F32 },
  { WebAssembly::NEG_F32x4_S, WebAssembly::NEG_F32x4 },
  { WebAssembly::NEG_F64_S, WebAssembly::NEG_F64 },
  { WebAssembly::NEG_F64x2_S, WebAssembly::NEG_F64x2 },
  { WebAssembly::NEG_I16x8_S, WebAssembly::NEG_I16x8 },
  { WebAssembly::NEG_I32x4_S, WebAssembly::NEG_I32x4 },
  { WebAssembly::NEG_I64x2_S, WebAssembly::NEG_I64x2 },
  { WebAssembly::NEG_I8x16_S, WebAssembly::NEG_I8x16 },
  { WebAssembly::NE_F32_S, WebAssembly::NE_F32 },
  { WebAssembly::NE_F32x4_S, WebAssembly::NE_F32x4 },
  { WebAssembly::NE_F64_S, WebAssembly::NE_F64 },
  { WebAssembly::NE_F64x2_S, WebAssembly::NE_F64x2 },
  { WebAssembly::NE_I16x8_S, WebAssembly::NE_I16x8 },
  { WebAssembly::NE_I32_S, WebAssembly::NE_I32 },
  { WebAssembly::NE_I32x4_S, WebAssembly::NE_I32x4 },
  { WebAssembly::NE_I64_S, WebAssembly::NE_I64 },
  { WebAssembly::NE_I64x2_S, WebAssembly::NE_I64x2 },
  { WebAssembly::NE_I8x16_S, WebAssembly::NE_I8x16 },
  { WebAssembly::NMADD_F32x4_S, WebAssembly::NMADD_F32x4 },
  { WebAssembly::NMADD_F64x2_S, WebAssembly::NMADD_F64x2 },
  { WebAssembly::NOP_S, WebAssembly::NOP },
  { WebAssembly::NOT_S, WebAssembly::NOT },
  { WebAssembly::OR_I32_S, WebAssembly::OR_I32 },
  { WebAssembly::OR_I64_S, WebAssembly::OR_I64 },
  { WebAssembly::OR_S, WebAssembly::OR },
  { WebAssembly::PMAX_F32x4_S, WebAssembly::PMAX_F32x4 },
  { WebAssembly::PMAX_F64x2_S, WebAssembly::PMAX_F64x2 },
  { WebAssembly::PMIN_F32x4_S, WebAssembly::PMIN_F32x4 },
  { WebAssembly::PMIN_F64x2_S, WebAssembly::PMIN_F64x2 },
  { WebAssembly::POPCNT_I32_S, WebAssembly::POPCNT_I32 },
  { WebAssembly::POPCNT_I64_S, WebAssembly::POPCNT_I64 },
  { WebAssembly::POPCNT_I8x16_S, WebAssembly::POPCNT_I8x16 },
  { WebAssembly::Q15MULR_SAT_S_I16x8_S, WebAssembly::Q15MULR_SAT_S_I16x8 },
  { WebAssembly::REF_IS_NULL_EXTERNREF_S, WebAssembly::REF_IS_NULL_EXTERNREF },
  { WebAssembly::REF_IS_NULL_FUNCREF_S, WebAssembly::REF_IS_NULL_FUNCREF },
  { WebAssembly::REF_NULL_EXTERNREF_S, WebAssembly::REF_NULL_EXTERNREF },
  { WebAssembly::REF_NULL_FUNCREF_S, WebAssembly::REF_NULL_FUNCREF },
  { WebAssembly::RELAXED_DOT_ADD_S, WebAssembly::RELAXED_DOT_ADD },
  { WebAssembly::RELAXED_DOT_BFLOAT_S, WebAssembly::RELAXED_DOT_BFLOAT },
  { WebAssembly::RELAXED_DOT_S, WebAssembly::RELAXED_DOT },
  { WebAssembly::RELAXED_Q15MULR_S_I16x8_S, WebAssembly::RELAXED_Q15MULR_S_I16x8 },
  { WebAssembly::RELAXED_SWIZZLE_S, WebAssembly::RELAXED_SWIZZLE },
  { WebAssembly::REM_S_I32_S, WebAssembly::REM_S_I32 },
  { WebAssembly::REM_S_I64_S, WebAssembly::REM_S_I64 },
  { WebAssembly::REM_U_I32_S, WebAssembly::REM_U_I32 },
  { WebAssembly::REM_U_I64_S, WebAssembly::REM_U_I64 },
  { WebAssembly::REPLACE_LANE_F32x4_S, WebAssembly::REPLACE_LANE_F32x4 },
  { WebAssembly::REPLACE_LANE_F64x2_S, WebAssembly::REPLACE_LANE_F64x2 },
  { WebAssembly::REPLACE_LANE_I16x8_S, WebAssembly::REPLACE_LANE_I16x8 },
  { WebAssembly::REPLACE_LANE_I32x4_S, WebAssembly::REPLACE_LANE_I32x4 },
  { WebAssembly::REPLACE_LANE_I64x2_S, WebAssembly::REPLACE_LANE_I64x2 },
  { WebAssembly::REPLACE_LANE_I8x16_S, WebAssembly::REPLACE_LANE_I8x16 },
  { WebAssembly::RETHROW_S, WebAssembly::RETHROW },
  { WebAssembly::RETURN_S, WebAssembly::RETURN },
  { WebAssembly::RET_CALL_INDIRECT_S, WebAssembly::RET_CALL_INDIRECT },
  { WebAssembly::RET_CALL_S, WebAssembly::RET_CALL },
  { WebAssembly::ROTL_I32_S, WebAssembly::ROTL_I32 },
  { WebAssembly::ROTL_I64_S, WebAssembly::ROTL_I64 },
  { WebAssembly::ROTR_I32_S, WebAssembly::ROTR_I32 },
  { WebAssembly::ROTR_I64_S, WebAssembly::ROTR_I64 },
  { WebAssembly::SELECT_EXTERNREF_S, WebAssembly::SELECT_EXTERNREF },
  { WebAssembly::SELECT_F32_S, WebAssembly::SELECT_F32 },
  { WebAssembly::SELECT_F64_S, WebAssembly::SELECT_F64 },
  { WebAssembly::SELECT_FUNCREF_S, WebAssembly::SELECT_FUNCREF },
  { WebAssembly::SELECT_I32_S, WebAssembly::SELECT_I32 },
  { WebAssembly::SELECT_I64_S, WebAssembly::SELECT_I64 },
  { WebAssembly::SELECT_V128_S, WebAssembly::SELECT_V128 },
  { WebAssembly::SHL_I16x8_S, WebAssembly::SHL_I16x8 },
  { WebAssembly::SHL_I32_S, WebAssembly::SHL_I32 },
  { WebAssembly::SHL_I32x4_S, WebAssembly::SHL_I32x4 },
  { WebAssembly::SHL_I64_S, WebAssembly::SHL_I64 },
  { WebAssembly::SHL_I64x2_S, WebAssembly::SHL_I64x2 },
  { WebAssembly::SHL_I8x16_S, WebAssembly::SHL_I8x16 },
  { WebAssembly::SHR_S_I16x8_S, WebAssembly::SHR_S_I16x8 },
  { WebAssembly::SHR_S_I32_S, WebAssembly::SHR_S_I32 },
  { WebAssembly::SHR_S_I32x4_S, WebAssembly::SHR_S_I32x4 },
  { WebAssembly::SHR_S_I64_S, WebAssembly::SHR_S_I64 },
  { WebAssembly::SHR_S_I64x2_S, WebAssembly::SHR_S_I64x2 },
  { WebAssembly::SHR_S_I8x16_S, WebAssembly::SHR_S_I8x16 },
  { WebAssembly::SHR_U_I16x8_S, WebAssembly::SHR_U_I16x8 },
  { WebAssembly::SHR_U_I32_S, WebAssembly::SHR_U_I32 },
  { WebAssembly::SHR_U_I32x4_S, WebAssembly::SHR_U_I32x4 },
  { WebAssembly::SHR_U_I64_S, WebAssembly::SHR_U_I64 },
  { WebAssembly::SHR_U_I64x2_S, WebAssembly::SHR_U_I64x2 },
  { WebAssembly::SHR_U_I8x16_S, WebAssembly::SHR_U_I8x16 },
  { WebAssembly::SHUFFLE_S, WebAssembly::SHUFFLE },
  { WebAssembly::SIMD_RELAXED_FMAX_F32x4_S, WebAssembly::SIMD_RELAXED_FMAX_F32x4 },
  { WebAssembly::SIMD_RELAXED_FMAX_F64x2_S, WebAssembly::SIMD_RELAXED_FMAX_F64x2 },
  { WebAssembly::SIMD_RELAXED_FMIN_F32x4_S, WebAssembly::SIMD_RELAXED_FMIN_F32x4 },
  { WebAssembly::SIMD_RELAXED_FMIN_F64x2_S, WebAssembly::SIMD_RELAXED_FMIN_F64x2 },
  { WebAssembly::SPLAT_F32x4_S, WebAssembly::SPLAT_F32x4 },
  { WebAssembly::SPLAT_F64x2_S, WebAssembly::SPLAT_F64x2 },
  { WebAssembly::SPLAT_I16x8_S, WebAssembly::SPLAT_I16x8 },
  { WebAssembly::SPLAT_I32x4_S, WebAssembly::SPLAT_I32x4 },
  { WebAssembly::SPLAT_I64x2_S, WebAssembly::SPLAT_I64x2 },
  { WebAssembly::SPLAT_I8x16_S, WebAssembly::SPLAT_I8x16 },
  { WebAssembly::SQRT_F32_S, WebAssembly::SQRT_F32 },
  { WebAssembly::SQRT_F32x4_S, WebAssembly::SQRT_F32x4 },
  { WebAssembly::SQRT_F64_S, WebAssembly::SQRT_F64 },
  { WebAssembly::SQRT_F64x2_S, WebAssembly::SQRT_F64x2 },
  { WebAssembly::STORE16_I32_A32_S, WebAssembly::STORE16_I32_A32 },
  { WebAssembly::STORE16_I32_A64_S, WebAssembly::STORE16_I32_A64 },
  { WebAssembly::STORE16_I64_A32_S, WebAssembly::STORE16_I64_A32 },
  { WebAssembly::STORE16_I64_A64_S, WebAssembly::STORE16_I64_A64 },
  { WebAssembly::STORE32_I64_A32_S, WebAssembly::STORE32_I64_A32 },
  { WebAssembly::STORE32_I64_A64_S, WebAssembly::STORE32_I64_A64 },
  { WebAssembly::STORE8_I32_A32_S, WebAssembly::STORE8_I32_A32 },
  { WebAssembly::STORE8_I32_A64_S, WebAssembly::STORE8_I32_A64 },
  { WebAssembly::STORE8_I64_A32_S, WebAssembly::STORE8_I64_A32 },
  { WebAssembly::STORE8_I64_A64_S, WebAssembly::STORE8_I64_A64 },
  { WebAssembly::STORE_F32_A32_S, WebAssembly::STORE_F32_A32 },
  { WebAssembly::STORE_F32_A64_S, WebAssembly::STORE_F32_A64 },
  { WebAssembly::STORE_F64_A32_S, WebAssembly::STORE_F64_A32 },
  { WebAssembly::STORE_F64_A64_S, WebAssembly::STORE_F64_A64 },
  { WebAssembly::STORE_I32_A32_S, WebAssembly::STORE_I32_A32 },
  { WebAssembly::STORE_I32_A64_S, WebAssembly::STORE_I32_A64 },
  { WebAssembly::STORE_I64_A32_S, WebAssembly::STORE_I64_A32 },
  { WebAssembly::STORE_I64_A64_S, WebAssembly::STORE_I64_A64 },
  { WebAssembly::STORE_LANE_I16x8_A32_S, WebAssembly::STORE_LANE_I16x8_A32 },
  { WebAssembly::STORE_LANE_I16x8_A64_S, WebAssembly::STORE_LANE_I16x8_A64 },
  { WebAssembly::STORE_LANE_I32x4_A32_S, WebAssembly::STORE_LANE_I32x4_A32 },
  { WebAssembly::STORE_LANE_I32x4_A64_S, WebAssembly::STORE_LANE_I32x4_A64 },
  { WebAssembly::STORE_LANE_I64x2_A32_S, WebAssembly::STORE_LANE_I64x2_A32 },
  { WebAssembly::STORE_LANE_I64x2_A64_S, WebAssembly::STORE_LANE_I64x2_A64 },
  { WebAssembly::STORE_LANE_I8x16_A32_S, WebAssembly::STORE_LANE_I8x16_A32 },
  { WebAssembly::STORE_LANE_I8x16_A64_S, WebAssembly::STORE_LANE_I8x16_A64 },
  { WebAssembly::STORE_V128_A32_S, WebAssembly::STORE_V128_A32 },
  { WebAssembly::STORE_V128_A64_S, WebAssembly::STORE_V128_A64 },
  { WebAssembly::SUB_F32_S, WebAssembly::SUB_F32 },
  { WebAssembly::SUB_F32x4_S, WebAssembly::SUB_F32x4 },
  { WebAssembly::SUB_F64_S, WebAssembly::SUB_F64 },
  { WebAssembly::SUB_F64x2_S, WebAssembly::SUB_F64x2 },
  { WebAssembly::SUB_I16x8_S, WebAssembly::SUB_I16x8 },
  { WebAssembly::SUB_I32_S, WebAssembly::SUB_I32 },
  { WebAssembly::SUB_I32x4_S, WebAssembly::SUB_I32x4 },
  { WebAssembly::SUB_I64_S, WebAssembly::SUB_I64 },
  { WebAssembly::SUB_I64x2_S, WebAssembly::SUB_I64x2 },
  { WebAssembly::SUB_I8x16_S, WebAssembly::SUB_I8x16 },
  { WebAssembly::SUB_SAT_S_I16x8_S, WebAssembly::SUB_SAT_S_I16x8 },
  { WebAssembly::SUB_SAT_S_I8x16_S, WebAssembly::SUB_SAT_S_I8x16 },
  { WebAssembly::SUB_SAT_U_I16x8_S, WebAssembly::SUB_SAT_U_I16x8 },
  { WebAssembly::SUB_SAT_U_I8x16_S, WebAssembly::SUB_SAT_U_I8x16 },
  { WebAssembly::SWIZZLE_S, WebAssembly::SWIZZLE },
  { WebAssembly::TABLE_COPY_S, WebAssembly::TABLE_COPY },
  { WebAssembly::TABLE_FILL_EXTERNREF_S, WebAssembly::TABLE_FILL_EXTERNREF },
  { WebAssembly::TABLE_FILL_FUNCREF_S, WebAssembly::TABLE_FILL_FUNCREF },
  { WebAssembly::TABLE_GET_EXTERNREF_S, WebAssembly::TABLE_GET_EXTERNREF },
  { WebAssembly::TABLE_GET_FUNCREF_S, WebAssembly::TABLE_GET_FUNCREF },
  { WebAssembly::TABLE_GROW_EXTERNREF_S, WebAssembly::TABLE_GROW_EXTERNREF },
  { WebAssembly::TABLE_GROW_FUNCREF_S, WebAssembly::TABLE_GROW_FUNCREF },
  { WebAssembly::TABLE_SET_EXTERNREF_S, WebAssembly::TABLE_SET_EXTERNREF },
  { WebAssembly::TABLE_SET_FUNCREF_S, WebAssembly::TABLE_SET_FUNCREF },
  { WebAssembly::TABLE_SIZE_S, WebAssembly::TABLE_SIZE },
  { WebAssembly::TEE_EXTERNREF_S, WebAssembly::TEE_EXTERNREF },
  { WebAssembly::TEE_F32_S, WebAssembly::TEE_F32 },
  { WebAssembly::TEE_F64_S, WebAssembly::TEE_F64 },
  { WebAssembly::TEE_FUNCREF_S, WebAssembly::TEE_FUNCREF },
  { WebAssembly::TEE_I32_S, WebAssembly::TEE_I32 },
  { WebAssembly::TEE_I64_S, WebAssembly::TEE_I64 },
  { WebAssembly::TEE_V128_S, WebAssembly::TEE_V128 },
  { WebAssembly::THROW_S, WebAssembly::THROW },
  { WebAssembly::TRUNC_F32_S, WebAssembly::TRUNC_F32 },
  { WebAssembly::TRUNC_F32x4_S, WebAssembly::TRUNC_F32x4 },
  { WebAssembly::TRUNC_F64_S, WebAssembly::TRUNC_F64 },
  { WebAssembly::TRUNC_F64x2_S, WebAssembly::TRUNC_F64x2 },
  { WebAssembly::TRY_S, WebAssembly::TRY },
  { WebAssembly::UNREACHABLE_S, WebAssembly::UNREACHABLE },
  { WebAssembly::XOR_I32_S, WebAssembly::XOR_I32 },
  { WebAssembly::XOR_I64_S, WebAssembly::XOR_I64 },
  { WebAssembly::XOR_S, WebAssembly::XOR },
  { WebAssembly::anonymous_7070MEMORY_GROW_A32_S, WebAssembly::anonymous_7070MEMORY_GROW_A32 },
  { WebAssembly::anonymous_7070MEMORY_SIZE_A32_S, WebAssembly::anonymous_7070MEMORY_SIZE_A32 },
  { WebAssembly::anonymous_7071MEMORY_GROW_A64_S, WebAssembly::anonymous_7071MEMORY_GROW_A64 },
  { WebAssembly::anonymous_7071MEMORY_SIZE_A64_S, WebAssembly::anonymous_7071MEMORY_SIZE_A64 },
  { WebAssembly::anonymous_7752DATA_DROP_S, WebAssembly::anonymous_7752DATA_DROP },
  { WebAssembly::anonymous_7752MEMORY_COPY_A32_S, WebAssembly::anonymous_7752MEMORY_COPY_A32 },
  { WebAssembly::anonymous_7752MEMORY_FILL_A32_S, WebAssembly::anonymous_7752MEMORY_FILL_A32 },
  { WebAssembly::anonymous_7752MEMORY_INIT_A32_S, WebAssembly::anonymous_7752MEMORY_INIT_A32 },
  { WebAssembly::anonymous_7753DATA_DROP_S, WebAssembly::anonymous_7753DATA_DROP },
  { WebAssembly::anonymous_7753MEMORY_COPY_A64_S, WebAssembly::anonymous_7753MEMORY_COPY_A64 },
  { WebAssembly::anonymous_7753MEMORY_FILL_A64_S, WebAssembly::anonymous_7753MEMORY_FILL_A64 },
  { WebAssembly::anonymous_7753MEMORY_INIT_A64_S, WebAssembly::anonymous_7753MEMORY_INIT_A64 },
  { WebAssembly::convert_low_s_F64x2_S, WebAssembly::convert_low_s_F64x2 },
  { WebAssembly::convert_low_u_F64x2_S, WebAssembly::convert_low_u_F64x2 },
  { WebAssembly::demote_zero_F32x4_S, WebAssembly::demote_zero_F32x4 },
  { WebAssembly::extend_high_s_I16x8_S, WebAssembly::extend_high_s_I16x8 },
  { WebAssembly::extend_high_s_I32x4_S, WebAssembly::extend_high_s_I32x4 },
  { WebAssembly::extend_high_s_I64x2_S, WebAssembly::extend_high_s_I64x2 },
  { WebAssembly::extend_high_u_I16x8_S, WebAssembly::extend_high_u_I16x8 },
  { WebAssembly::extend_high_u_I32x4_S, WebAssembly::extend_high_u_I32x4 },
  { WebAssembly::extend_high_u_I64x2_S, WebAssembly::extend_high_u_I64x2 },
  { WebAssembly::extend_low_s_I16x8_S, WebAssembly::extend_low_s_I16x8 },
  { WebAssembly::extend_low_s_I32x4_S, WebAssembly::extend_low_s_I32x4 },
  { WebAssembly::extend_low_s_I64x2_S, WebAssembly::extend_low_s_I64x2 },
  { WebAssembly::extend_low_u_I16x8_S, WebAssembly::extend_low_u_I16x8 },
  { WebAssembly::extend_low_u_I32x4_S, WebAssembly::extend_low_u_I32x4 },
  { WebAssembly::extend_low_u_I64x2_S, WebAssembly::extend_low_u_I64x2 },
  { WebAssembly::fp_to_sint_I32x4_S, WebAssembly::fp_to_sint_I32x4 },
  { WebAssembly::fp_to_uint_I32x4_S, WebAssembly::fp_to_uint_I32x4 },
  { WebAssembly::int_wasm_extadd_pairwise_signed_I16x8_S, WebAssembly::int_wasm_extadd_pairwise_signed_I16x8 },
  { WebAssembly::int_wasm_extadd_pairwise_signed_I32x4_S, WebAssembly::int_wasm_extadd_pairwise_signed_I32x4 },
  { WebAssembly::int_wasm_extadd_pairwise_unsigned_I16x8_S, WebAssembly::int_wasm_extadd_pairwise_unsigned_I16x8 },
  { WebAssembly::int_wasm_extadd_pairwise_unsigned_I32x4_S, WebAssembly::int_wasm_extadd_pairwise_unsigned_I32x4 },
  { WebAssembly::int_wasm_relaxed_trunc_signed_I32x4_S, WebAssembly::int_wasm_relaxed_trunc_signed_I32x4 },
  { WebAssembly::int_wasm_relaxed_trunc_signed_zero_I32x4_S, WebAssembly::int_wasm_relaxed_trunc_signed_zero_I32x4 },
  { WebAssembly::int_wasm_relaxed_trunc_unsigned_I32x4_S, WebAssembly::int_wasm_relaxed_trunc_unsigned_I32x4 },
  { WebAssembly::int_wasm_relaxed_trunc_unsigned_zero_I32x4_S, WebAssembly::int_wasm_relaxed_trunc_unsigned_zero_I32x4 },
  { WebAssembly::promote_low_F64x2_S, WebAssembly::promote_low_F64x2 },
  { WebAssembly::sint_to_fp_F32x4_S, WebAssembly::sint_to_fp_F32x4 },
  { WebAssembly::trunc_sat_zero_s_I32x4_S, WebAssembly::trunc_sat_zero_s_I32x4 },
  { WebAssembly::trunc_sat_zero_u_I32x4_S, WebAssembly::trunc_sat_zero_u_I32x4 },
  { WebAssembly::uint_to_fp_F32x4_S, WebAssembly::uint_to_fp_F32x4 },
}; // End of getRegisterOpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 750;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == getRegisterOpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getRegisterOpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getRegisterOpcodeTable[mid][1];
}

// getStackOpcode
LLVM_READONLY
int getStackOpcode(uint16_t Opcode) {
static const uint16_t getStackOpcodeTable[][2] = {
  { WebAssembly::CALL_PARAMS, WebAssembly::CALL_PARAMS_S },
  { WebAssembly::CALL_RESULTS, WebAssembly::CALL_RESULTS_S },
  { WebAssembly::CATCHRET, WebAssembly::CATCHRET_S },
  { WebAssembly::CLEANUPRET, WebAssembly::CLEANUPRET_S },
  { WebAssembly::COMPILER_FENCE, WebAssembly::COMPILER_FENCE_S },
  { WebAssembly::RET_CALL_RESULTS, WebAssembly::RET_CALL_RESULTS_S },
  { WebAssembly::ABS_F32, WebAssembly::ABS_F32_S },
  { WebAssembly::ABS_F32x4, WebAssembly::ABS_F32x4_S },
  { WebAssembly::ABS_F64, WebAssembly::ABS_F64_S },
  { WebAssembly::ABS_F64x2, WebAssembly::ABS_F64x2_S },
  { WebAssembly::ABS_I16x8, WebAssembly::ABS_I16x8_S },
  { WebAssembly::ABS_I32x4, WebAssembly::ABS_I32x4_S },
  { WebAssembly::ABS_I64x2, WebAssembly::ABS_I64x2_S },
  { WebAssembly::ABS_I8x16, WebAssembly::ABS_I8x16_S },
  { WebAssembly::ADD_F32, WebAssembly::ADD_F32_S },
  { WebAssembly::ADD_F32x4, WebAssembly::ADD_F32x4_S },
  { WebAssembly::ADD_F64, WebAssembly::ADD_F64_S },
  { WebAssembly::ADD_F64x2, WebAssembly::ADD_F64x2_S },
  { WebAssembly::ADD_I16x8, WebAssembly::ADD_I16x8_S },
  { WebAssembly::ADD_I32, WebAssembly::ADD_I32_S },
  { WebAssembly::ADD_I32x4, WebAssembly::ADD_I32x4_S },
  { WebAssembly::ADD_I64, WebAssembly::ADD_I64_S },
  { WebAssembly::ADD_I64x2, WebAssembly::ADD_I64x2_S },
  { WebAssembly::ADD_I8x16, WebAssembly::ADD_I8x16_S },
  { WebAssembly::ADD_SAT_S_I16x8, WebAssembly::ADD_SAT_S_I16x8_S },
  { WebAssembly::ADD_SAT_S_I8x16, WebAssembly::ADD_SAT_S_I8x16_S },
  { WebAssembly::ADD_SAT_U_I16x8, WebAssembly::ADD_SAT_U_I16x8_S },
  { WebAssembly::ADD_SAT_U_I8x16, WebAssembly::ADD_SAT_U_I8x16_S },
  { WebAssembly::ADJCALLSTACKDOWN, WebAssembly::ADJCALLSTACKDOWN_S },
  { WebAssembly::ADJCALLSTACKUP, WebAssembly::ADJCALLSTACKUP_S },
  { WebAssembly::ALLTRUE_I16x8, WebAssembly::ALLTRUE_I16x8_S },
  { WebAssembly::ALLTRUE_I32x4, WebAssembly::ALLTRUE_I32x4_S },
  { WebAssembly::ALLTRUE_I64x2, WebAssembly::ALLTRUE_I64x2_S },
  { WebAssembly::ALLTRUE_I8x16, WebAssembly::ALLTRUE_I8x16_S },
  { WebAssembly::AND, WebAssembly::AND_S },
  { WebAssembly::ANDNOT, WebAssembly::ANDNOT_S },
  { WebAssembly::AND_I32, WebAssembly::AND_I32_S },
  { WebAssembly::AND_I64, WebAssembly::AND_I64_S },
  { WebAssembly::ANYTRUE, WebAssembly::ANYTRUE_S },
  { WebAssembly::ARGUMENT_externref, WebAssembly::ARGUMENT_externref_S },
  { WebAssembly::ARGUMENT_f32, WebAssembly::ARGUMENT_f32_S },
  { WebAssembly::ARGUMENT_f64, WebAssembly::ARGUMENT_f64_S },
  { WebAssembly::ARGUMENT_funcref, WebAssembly::ARGUMENT_funcref_S },
  { WebAssembly::ARGUMENT_i32, WebAssembly::ARGUMENT_i32_S },
  { WebAssembly::ARGUMENT_i64, WebAssembly::ARGUMENT_i64_S },
  { WebAssembly::ARGUMENT_v16i8, WebAssembly::ARGUMENT_v16i8_S },
  { WebAssembly::ARGUMENT_v2f64, WebAssembly::ARGUMENT_v2f64_S },
  { WebAssembly::ARGUMENT_v2i64, WebAssembly::ARGUMENT_v2i64_S },
  { WebAssembly::ARGUMENT_v4f32, WebAssembly::ARGUMENT_v4f32_S },
  { WebAssembly::ARGUMENT_v4i32, WebAssembly::ARGUMENT_v4i32_S },
  { WebAssembly::ARGUMENT_v8i16, WebAssembly::ARGUMENT_v8i16_S },
  { WebAssembly::ATOMIC_FENCE, WebAssembly::ATOMIC_FENCE_S },
  { WebAssembly::ATOMIC_LOAD16_U_I32_A32, WebAssembly::ATOMIC_LOAD16_U_I32_A32_S },
  { WebAssembly::ATOMIC_LOAD16_U_I32_A64, WebAssembly::ATOMIC_LOAD16_U_I32_A64_S },
  { WebAssembly::ATOMIC_LOAD16_U_I64_A32, WebAssembly::ATOMIC_LOAD16_U_I64_A32_S },
  { WebAssembly::ATOMIC_LOAD16_U_I64_A64, WebAssembly::ATOMIC_LOAD16_U_I64_A64_S },
  { WebAssembly::ATOMIC_LOAD32_U_I64_A32, WebAssembly::ATOMIC_LOAD32_U_I64_A32_S },
  { WebAssembly::ATOMIC_LOAD32_U_I64_A64, WebAssembly::ATOMIC_LOAD32_U_I64_A64_S },
  { WebAssembly::ATOMIC_LOAD8_U_I32_A32, WebAssembly::ATOMIC_LOAD8_U_I32_A32_S },
  { WebAssembly::ATOMIC_LOAD8_U_I32_A64, WebAssembly::ATOMIC_LOAD8_U_I32_A64_S },
  { WebAssembly::ATOMIC_LOAD8_U_I64_A32, WebAssembly::ATOMIC_LOAD8_U_I64_A32_S },
  { WebAssembly::ATOMIC_LOAD8_U_I64_A64, WebAssembly::ATOMIC_LOAD8_U_I64_A64_S },
  { WebAssembly::ATOMIC_LOAD_I32_A32, WebAssembly::ATOMIC_LOAD_I32_A32_S },
  { WebAssembly::ATOMIC_LOAD_I32_A64, WebAssembly::ATOMIC_LOAD_I32_A64_S },
  { WebAssembly::ATOMIC_LOAD_I64_A32, WebAssembly::ATOMIC_LOAD_I64_A32_S },
  { WebAssembly::ATOMIC_LOAD_I64_A64, WebAssembly::ATOMIC_LOAD_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_ADD_I32_A32, WebAssembly::ATOMIC_RMW16_U_ADD_I32_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_ADD_I32_A64, WebAssembly::ATOMIC_RMW16_U_ADD_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_ADD_I64_A32, WebAssembly::ATOMIC_RMW16_U_ADD_I64_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_ADD_I64_A64, WebAssembly::ATOMIC_RMW16_U_ADD_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_AND_I32_A32, WebAssembly::ATOMIC_RMW16_U_AND_I32_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_AND_I32_A64, WebAssembly::ATOMIC_RMW16_U_AND_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_AND_I64_A32, WebAssembly::ATOMIC_RMW16_U_AND_I64_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_AND_I64_A64, WebAssembly::ATOMIC_RMW16_U_AND_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A32, WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A64, WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A32, WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A64, WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_OR_I32_A32, WebAssembly::ATOMIC_RMW16_U_OR_I32_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_OR_I32_A64, WebAssembly::ATOMIC_RMW16_U_OR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_OR_I64_A32, WebAssembly::ATOMIC_RMW16_U_OR_I64_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_OR_I64_A64, WebAssembly::ATOMIC_RMW16_U_OR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_SUB_I32_A32, WebAssembly::ATOMIC_RMW16_U_SUB_I32_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_SUB_I32_A64, WebAssembly::ATOMIC_RMW16_U_SUB_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_SUB_I64_A32, WebAssembly::ATOMIC_RMW16_U_SUB_I64_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_SUB_I64_A64, WebAssembly::ATOMIC_RMW16_U_SUB_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A32, WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A64, WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A32, WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A64, WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_XOR_I32_A32, WebAssembly::ATOMIC_RMW16_U_XOR_I32_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_XOR_I32_A64, WebAssembly::ATOMIC_RMW16_U_XOR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_XOR_I64_A32, WebAssembly::ATOMIC_RMW16_U_XOR_I64_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_XOR_I64_A64, WebAssembly::ATOMIC_RMW16_U_XOR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_ADD_I64_A32, WebAssembly::ATOMIC_RMW32_U_ADD_I64_A32_S },
  { WebAssembly::ATOMIC_RMW32_U_ADD_I64_A64, WebAssembly::ATOMIC_RMW32_U_ADD_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_AND_I64_A32, WebAssembly::ATOMIC_RMW32_U_AND_I64_A32_S },
  { WebAssembly::ATOMIC_RMW32_U_AND_I64_A64, WebAssembly::ATOMIC_RMW32_U_AND_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A32, WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A32_S },
  { WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A64, WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_OR_I64_A32, WebAssembly::ATOMIC_RMW32_U_OR_I64_A32_S },
  { WebAssembly::ATOMIC_RMW32_U_OR_I64_A64, WebAssembly::ATOMIC_RMW32_U_OR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_SUB_I64_A32, WebAssembly::ATOMIC_RMW32_U_SUB_I64_A32_S },
  { WebAssembly::ATOMIC_RMW32_U_SUB_I64_A64, WebAssembly::ATOMIC_RMW32_U_SUB_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A32, WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A32_S },
  { WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A64, WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_XOR_I64_A32, WebAssembly::ATOMIC_RMW32_U_XOR_I64_A32_S },
  { WebAssembly::ATOMIC_RMW32_U_XOR_I64_A64, WebAssembly::ATOMIC_RMW32_U_XOR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_ADD_I32_A32, WebAssembly::ATOMIC_RMW8_U_ADD_I32_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_ADD_I32_A64, WebAssembly::ATOMIC_RMW8_U_ADD_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_ADD_I64_A32, WebAssembly::ATOMIC_RMW8_U_ADD_I64_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_ADD_I64_A64, WebAssembly::ATOMIC_RMW8_U_ADD_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_AND_I32_A32, WebAssembly::ATOMIC_RMW8_U_AND_I32_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_AND_I32_A64, WebAssembly::ATOMIC_RMW8_U_AND_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_AND_I64_A32, WebAssembly::ATOMIC_RMW8_U_AND_I64_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_AND_I64_A64, WebAssembly::ATOMIC_RMW8_U_AND_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A32, WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A64, WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A32, WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A64, WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_OR_I32_A32, WebAssembly::ATOMIC_RMW8_U_OR_I32_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_OR_I32_A64, WebAssembly::ATOMIC_RMW8_U_OR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_OR_I64_A32, WebAssembly::ATOMIC_RMW8_U_OR_I64_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_OR_I64_A64, WebAssembly::ATOMIC_RMW8_U_OR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_SUB_I32_A32, WebAssembly::ATOMIC_RMW8_U_SUB_I32_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_SUB_I32_A64, WebAssembly::ATOMIC_RMW8_U_SUB_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_SUB_I64_A32, WebAssembly::ATOMIC_RMW8_U_SUB_I64_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_SUB_I64_A64, WebAssembly::ATOMIC_RMW8_U_SUB_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A32, WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A64, WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A32, WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A64, WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_XOR_I32_A32, WebAssembly::ATOMIC_RMW8_U_XOR_I32_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_XOR_I32_A64, WebAssembly::ATOMIC_RMW8_U_XOR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_XOR_I64_A32, WebAssembly::ATOMIC_RMW8_U_XOR_I64_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_XOR_I64_A64, WebAssembly::ATOMIC_RMW8_U_XOR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_ADD_I32_A32, WebAssembly::ATOMIC_RMW_ADD_I32_A32_S },
  { WebAssembly::ATOMIC_RMW_ADD_I32_A64, WebAssembly::ATOMIC_RMW_ADD_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_ADD_I64_A32, WebAssembly::ATOMIC_RMW_ADD_I64_A32_S },
  { WebAssembly::ATOMIC_RMW_ADD_I64_A64, WebAssembly::ATOMIC_RMW_ADD_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_AND_I32_A32, WebAssembly::ATOMIC_RMW_AND_I32_A32_S },
  { WebAssembly::ATOMIC_RMW_AND_I32_A64, WebAssembly::ATOMIC_RMW_AND_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_AND_I64_A32, WebAssembly::ATOMIC_RMW_AND_I64_A32_S },
  { WebAssembly::ATOMIC_RMW_AND_I64_A64, WebAssembly::ATOMIC_RMW_AND_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A32, WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A32_S },
  { WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A64, WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A32, WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A32_S },
  { WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A64, WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_OR_I32_A32, WebAssembly::ATOMIC_RMW_OR_I32_A32_S },
  { WebAssembly::ATOMIC_RMW_OR_I32_A64, WebAssembly::ATOMIC_RMW_OR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_OR_I64_A32, WebAssembly::ATOMIC_RMW_OR_I64_A32_S },
  { WebAssembly::ATOMIC_RMW_OR_I64_A64, WebAssembly::ATOMIC_RMW_OR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_SUB_I32_A32, WebAssembly::ATOMIC_RMW_SUB_I32_A32_S },
  { WebAssembly::ATOMIC_RMW_SUB_I32_A64, WebAssembly::ATOMIC_RMW_SUB_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_SUB_I64_A32, WebAssembly::ATOMIC_RMW_SUB_I64_A32_S },
  { WebAssembly::ATOMIC_RMW_SUB_I64_A64, WebAssembly::ATOMIC_RMW_SUB_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_XCHG_I32_A32, WebAssembly::ATOMIC_RMW_XCHG_I32_A32_S },
  { WebAssembly::ATOMIC_RMW_XCHG_I32_A64, WebAssembly::ATOMIC_RMW_XCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_XCHG_I64_A32, WebAssembly::ATOMIC_RMW_XCHG_I64_A32_S },
  { WebAssembly::ATOMIC_RMW_XCHG_I64_A64, WebAssembly::ATOMIC_RMW_XCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_XOR_I32_A32, WebAssembly::ATOMIC_RMW_XOR_I32_A32_S },
  { WebAssembly::ATOMIC_RMW_XOR_I32_A64, WebAssembly::ATOMIC_RMW_XOR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_XOR_I64_A32, WebAssembly::ATOMIC_RMW_XOR_I64_A32_S },
  { WebAssembly::ATOMIC_RMW_XOR_I64_A64, WebAssembly::ATOMIC_RMW_XOR_I64_A64_S },
  { WebAssembly::ATOMIC_STORE16_I32_A32, WebAssembly::ATOMIC_STORE16_I32_A32_S },
  { WebAssembly::ATOMIC_STORE16_I32_A64, WebAssembly::ATOMIC_STORE16_I32_A64_S },
  { WebAssembly::ATOMIC_STORE16_I64_A32, WebAssembly::ATOMIC_STORE16_I64_A32_S },
  { WebAssembly::ATOMIC_STORE16_I64_A64, WebAssembly::ATOMIC_STORE16_I64_A64_S },
  { WebAssembly::ATOMIC_STORE32_I64_A32, WebAssembly::ATOMIC_STORE32_I64_A32_S },
  { WebAssembly::ATOMIC_STORE32_I64_A64, WebAssembly::ATOMIC_STORE32_I64_A64_S },
  { WebAssembly::ATOMIC_STORE8_I32_A32, WebAssembly::ATOMIC_STORE8_I32_A32_S },
  { WebAssembly::ATOMIC_STORE8_I32_A64, WebAssembly::ATOMIC_STORE8_I32_A64_S },
  { WebAssembly::ATOMIC_STORE8_I64_A32, WebAssembly::ATOMIC_STORE8_I64_A32_S },
  { WebAssembly::ATOMIC_STORE8_I64_A64, WebAssembly::ATOMIC_STORE8_I64_A64_S },
  { WebAssembly::ATOMIC_STORE_I32_A32, WebAssembly::ATOMIC_STORE_I32_A32_S },
  { WebAssembly::ATOMIC_STORE_I32_A64, WebAssembly::ATOMIC_STORE_I32_A64_S },
  { WebAssembly::ATOMIC_STORE_I64_A32, WebAssembly::ATOMIC_STORE_I64_A32_S },
  { WebAssembly::ATOMIC_STORE_I64_A64, WebAssembly::ATOMIC_STORE_I64_A64_S },
  { WebAssembly::AVGR_U_I16x8, WebAssembly::AVGR_U_I16x8_S },
  { WebAssembly::AVGR_U_I8x16, WebAssembly::AVGR_U_I8x16_S },
  { WebAssembly::BITMASK_I16x8, WebAssembly::BITMASK_I16x8_S },
  { WebAssembly::BITMASK_I32x4, WebAssembly::BITMASK_I32x4_S },
  { WebAssembly::BITMASK_I64x2, WebAssembly::BITMASK_I64x2_S },
  { WebAssembly::BITMASK_I8x16, WebAssembly::BITMASK_I8x16_S },
  { WebAssembly::BITSELECT, WebAssembly::BITSELECT_S },
  { WebAssembly::BLOCK, WebAssembly::BLOCK_S },
  { WebAssembly::BR, WebAssembly::BR_S },
  { WebAssembly::BR_IF, WebAssembly::BR_IF_S },
  { WebAssembly::BR_TABLE_I32, WebAssembly::BR_TABLE_I32_S },
  { WebAssembly::BR_TABLE_I64, WebAssembly::BR_TABLE_I64_S },
  { WebAssembly::BR_UNLESS, WebAssembly::BR_UNLESS_S },
  { WebAssembly::CALL, WebAssembly::CALL_S },
  { WebAssembly::CALL_INDIRECT, WebAssembly::CALL_INDIRECT_S },
  { WebAssembly::CATCH, WebAssembly::CATCH_S },
  { WebAssembly::CATCH_ALL, WebAssembly::CATCH_ALL_S },
  { WebAssembly::CEIL_F32, WebAssembly::CEIL_F32_S },
  { WebAssembly::CEIL_F32x4, WebAssembly::CEIL_F32x4_S },
  { WebAssembly::CEIL_F64, WebAssembly::CEIL_F64_S },
  { WebAssembly::CEIL_F64x2, WebAssembly::CEIL_F64x2_S },
  { WebAssembly::CLZ_I32, WebAssembly::CLZ_I32_S },
  { WebAssembly::CLZ_I64, WebAssembly::CLZ_I64_S },
  { WebAssembly::CONST_F32, WebAssembly::CONST_F32_S },
  { WebAssembly::CONST_F64, WebAssembly::CONST_F64_S },
  { WebAssembly::CONST_I32, WebAssembly::CONST_I32_S },
  { WebAssembly::CONST_I64, WebAssembly::CONST_I64_S },
  { WebAssembly::CONST_V128_F32x4, WebAssembly::CONST_V128_F32x4_S },
  { WebAssembly::CONST_V128_F64x2, WebAssembly::CONST_V128_F64x2_S },
  { WebAssembly::CONST_V128_I16x8, WebAssembly::CONST_V128_I16x8_S },
  { WebAssembly::CONST_V128_I32x4, WebAssembly::CONST_V128_I32x4_S },
  { WebAssembly::CONST_V128_I64x2, WebAssembly::CONST_V128_I64x2_S },
  { WebAssembly::CONST_V128_I8x16, WebAssembly::CONST_V128_I8x16_S },
  { WebAssembly::COPYSIGN_F32, WebAssembly::COPYSIGN_F32_S },
  { WebAssembly::COPYSIGN_F64, WebAssembly::COPYSIGN_F64_S },
  { WebAssembly::COPY_EXTERNREF, WebAssembly::COPY_EXTERNREF_S },
  { WebAssembly::COPY_F32, WebAssembly::COPY_F32_S },
  { WebAssembly::COPY_F64, WebAssembly::COPY_F64_S },
  { WebAssembly::COPY_FUNCREF, WebAssembly::COPY_FUNCREF_S },
  { WebAssembly::COPY_I32, WebAssembly::COPY_I32_S },
  { WebAssembly::COPY_I64, WebAssembly::COPY_I64_S },
  { WebAssembly::COPY_V128, WebAssembly::COPY_V128_S },
  { WebAssembly::CTZ_I32, WebAssembly::CTZ_I32_S },
  { WebAssembly::CTZ_I64, WebAssembly::CTZ_I64_S },
  { WebAssembly::DEBUG_UNREACHABLE, WebAssembly::DEBUG_UNREACHABLE_S },
  { WebAssembly::DELEGATE, WebAssembly::DELEGATE_S },
  { WebAssembly::DIV_F32, WebAssembly::DIV_F32_S },
  { WebAssembly::DIV_F32x4, WebAssembly::DIV_F32x4_S },
  { WebAssembly::DIV_F64, WebAssembly::DIV_F64_S },
  { WebAssembly::DIV_F64x2, WebAssembly::DIV_F64x2_S },
  { WebAssembly::DIV_S_I32, WebAssembly::DIV_S_I32_S },
  { WebAssembly::DIV_S_I64, WebAssembly::DIV_S_I64_S },
  { WebAssembly::DIV_U_I32, WebAssembly::DIV_U_I32_S },
  { WebAssembly::DIV_U_I64, WebAssembly::DIV_U_I64_S },
  { WebAssembly::DOT, WebAssembly::DOT_S },
  { WebAssembly::DROP_EXTERNREF, WebAssembly::DROP_EXTERNREF_S },
  { WebAssembly::DROP_F32, WebAssembly::DROP_F32_S },
  { WebAssembly::DROP_F64, WebAssembly::DROP_F64_S },
  { WebAssembly::DROP_FUNCREF, WebAssembly::DROP_FUNCREF_S },
  { WebAssembly::DROP_I32, WebAssembly::DROP_I32_S },
  { WebAssembly::DROP_I64, WebAssembly::DROP_I64_S },
  { WebAssembly::DROP_V128, WebAssembly::DROP_V128_S },
  { WebAssembly::ELSE, WebAssembly::ELSE_S },
  { WebAssembly::END, WebAssembly::END_S },
  { WebAssembly::END_BLOCK, WebAssembly::END_BLOCK_S },
  { WebAssembly::END_FUNCTION, WebAssembly::END_FUNCTION_S },
  { WebAssembly::END_IF, WebAssembly::END_IF_S },
  { WebAssembly::END_LOOP, WebAssembly::END_LOOP_S },
  { WebAssembly::END_TRY, WebAssembly::END_TRY_S },
  { WebAssembly::EQZ_I32, WebAssembly::EQZ_I32_S },
  { WebAssembly::EQZ_I64, WebAssembly::EQZ_I64_S },
  { WebAssembly::EQ_F32, WebAssembly::EQ_F32_S },
  { WebAssembly::EQ_F32x4, WebAssembly::EQ_F32x4_S },
  { WebAssembly::EQ_F64, WebAssembly::EQ_F64_S },
  { WebAssembly::EQ_F64x2, WebAssembly::EQ_F64x2_S },
  { WebAssembly::EQ_I16x8, WebAssembly::EQ_I16x8_S },
  { WebAssembly::EQ_I32, WebAssembly::EQ_I32_S },
  { WebAssembly::EQ_I32x4, WebAssembly::EQ_I32x4_S },
  { WebAssembly::EQ_I64, WebAssembly::EQ_I64_S },
  { WebAssembly::EQ_I64x2, WebAssembly::EQ_I64x2_S },
  { WebAssembly::EQ_I8x16, WebAssembly::EQ_I8x16_S },
  { WebAssembly::EXTMUL_HIGH_S_I16x8, WebAssembly::EXTMUL_HIGH_S_I16x8_S },
  { WebAssembly::EXTMUL_HIGH_S_I32x4, WebAssembly::EXTMUL_HIGH_S_I32x4_S },
  { WebAssembly::EXTMUL_HIGH_S_I64x2, WebAssembly::EXTMUL_HIGH_S_I64x2_S },
  { WebAssembly::EXTMUL_HIGH_U_I16x8, WebAssembly::EXTMUL_HIGH_U_I16x8_S },
  { WebAssembly::EXTMUL_HIGH_U_I32x4, WebAssembly::EXTMUL_HIGH_U_I32x4_S },
  { WebAssembly::EXTMUL_HIGH_U_I64x2, WebAssembly::EXTMUL_HIGH_U_I64x2_S },
  { WebAssembly::EXTMUL_LOW_S_I16x8, WebAssembly::EXTMUL_LOW_S_I16x8_S },
  { WebAssembly::EXTMUL_LOW_S_I32x4, WebAssembly::EXTMUL_LOW_S_I32x4_S },
  { WebAssembly::EXTMUL_LOW_S_I64x2, WebAssembly::EXTMUL_LOW_S_I64x2_S },
  { WebAssembly::EXTMUL_LOW_U_I16x8, WebAssembly::EXTMUL_LOW_U_I16x8_S },
  { WebAssembly::EXTMUL_LOW_U_I32x4, WebAssembly::EXTMUL_LOW_U_I32x4_S },
  { WebAssembly::EXTMUL_LOW_U_I64x2, WebAssembly::EXTMUL_LOW_U_I64x2_S },
  { WebAssembly::EXTRACT_LANE_F32x4, WebAssembly::EXTRACT_LANE_F32x4_S },
  { WebAssembly::EXTRACT_LANE_F64x2, WebAssembly::EXTRACT_LANE_F64x2_S },
  { WebAssembly::EXTRACT_LANE_I16x8_s, WebAssembly::EXTRACT_LANE_I16x8_s_S },
  { WebAssembly::EXTRACT_LANE_I16x8_u, WebAssembly::EXTRACT_LANE_I16x8_u_S },
  { WebAssembly::EXTRACT_LANE_I32x4, WebAssembly::EXTRACT_LANE_I32x4_S },
  { WebAssembly::EXTRACT_LANE_I64x2, WebAssembly::EXTRACT_LANE_I64x2_S },
  { WebAssembly::EXTRACT_LANE_I8x16_s, WebAssembly::EXTRACT_LANE_I8x16_s_S },
  { WebAssembly::EXTRACT_LANE_I8x16_u, WebAssembly::EXTRACT_LANE_I8x16_u_S },
  { WebAssembly::F32_CONVERT_S_I32, WebAssembly::F32_CONVERT_S_I32_S },
  { WebAssembly::F32_CONVERT_S_I64, WebAssembly::F32_CONVERT_S_I64_S },
  { WebAssembly::F32_CONVERT_U_I32, WebAssembly::F32_CONVERT_U_I32_S },
  { WebAssembly::F32_CONVERT_U_I64, WebAssembly::F32_CONVERT_U_I64_S },
  { WebAssembly::F32_DEMOTE_F64, WebAssembly::F32_DEMOTE_F64_S },
  { WebAssembly::F32_REINTERPRET_I32, WebAssembly::F32_REINTERPRET_I32_S },
  { WebAssembly::F64_CONVERT_S_I32, WebAssembly::F64_CONVERT_S_I32_S },
  { WebAssembly::F64_CONVERT_S_I64, WebAssembly::F64_CONVERT_S_I64_S },
  { WebAssembly::F64_CONVERT_U_I32, WebAssembly::F64_CONVERT_U_I32_S },
  { WebAssembly::F64_CONVERT_U_I64, WebAssembly::F64_CONVERT_U_I64_S },
  { WebAssembly::F64_PROMOTE_F32, WebAssembly::F64_PROMOTE_F32_S },
  { WebAssembly::F64_REINTERPRET_I64, WebAssembly::F64_REINTERPRET_I64_S },
  { WebAssembly::FALLTHROUGH_RETURN, WebAssembly::FALLTHROUGH_RETURN_S },
  { WebAssembly::FLOOR_F32, WebAssembly::FLOOR_F32_S },
  { WebAssembly::FLOOR_F32x4, WebAssembly::FLOOR_F32x4_S },
  { WebAssembly::FLOOR_F64, WebAssembly::FLOOR_F64_S },
  { WebAssembly::FLOOR_F64x2, WebAssembly::FLOOR_F64x2_S },
  { WebAssembly::FP_TO_SINT_I32_F32, WebAssembly::FP_TO_SINT_I32_F32_S },
  { WebAssembly::FP_TO_SINT_I32_F64, WebAssembly::FP_TO_SINT_I32_F64_S },
  { WebAssembly::FP_TO_SINT_I64_F32, WebAssembly::FP_TO_SINT_I64_F32_S },
  { WebAssembly::FP_TO_SINT_I64_F64, WebAssembly::FP_TO_SINT_I64_F64_S },
  { WebAssembly::FP_TO_UINT_I32_F32, WebAssembly::FP_TO_UINT_I32_F32_S },
  { WebAssembly::FP_TO_UINT_I32_F64, WebAssembly::FP_TO_UINT_I32_F64_S },
  { WebAssembly::FP_TO_UINT_I64_F32, WebAssembly::FP_TO_UINT_I64_F32_S },
  { WebAssembly::FP_TO_UINT_I64_F64, WebAssembly::FP_TO_UINT_I64_F64_S },
  { WebAssembly::GE_F32, WebAssembly::GE_F32_S },
  { WebAssembly::GE_F32x4, WebAssembly::GE_F32x4_S },
  { WebAssembly::GE_F64, WebAssembly::GE_F64_S },
  { WebAssembly::GE_F64x2, WebAssembly::GE_F64x2_S },
  { WebAssembly::GE_S_I16x8, WebAssembly::GE_S_I16x8_S },
  { WebAssembly::GE_S_I32, WebAssembly::GE_S_I32_S },
  { WebAssembly::GE_S_I32x4, WebAssembly::GE_S_I32x4_S },
  { WebAssembly::GE_S_I64, WebAssembly::GE_S_I64_S },
  { WebAssembly::GE_S_I64x2, WebAssembly::GE_S_I64x2_S },
  { WebAssembly::GE_S_I8x16, WebAssembly::GE_S_I8x16_S },
  { WebAssembly::GE_U_I16x8, WebAssembly::GE_U_I16x8_S },
  { WebAssembly::GE_U_I32, WebAssembly::GE_U_I32_S },
  { WebAssembly::GE_U_I32x4, WebAssembly::GE_U_I32x4_S },
  { WebAssembly::GE_U_I64, WebAssembly::GE_U_I64_S },
  { WebAssembly::GE_U_I8x16, WebAssembly::GE_U_I8x16_S },
  { WebAssembly::GLOBAL_GET_EXTERNREF, WebAssembly::GLOBAL_GET_EXTERNREF_S },
  { WebAssembly::GLOBAL_GET_F32, WebAssembly::GLOBAL_GET_F32_S },
  { WebAssembly::GLOBAL_GET_F64, WebAssembly::GLOBAL_GET_F64_S },
  { WebAssembly::GLOBAL_GET_FUNCREF, WebAssembly::GLOBAL_GET_FUNCREF_S },
  { WebAssembly::GLOBAL_GET_I32, WebAssembly::GLOBAL_GET_I32_S },
  { WebAssembly::GLOBAL_GET_I64, WebAssembly::GLOBAL_GET_I64_S },
  { WebAssembly::GLOBAL_GET_V128, WebAssembly::GLOBAL_GET_V128_S },
  { WebAssembly::GLOBAL_SET_EXTERNREF, WebAssembly::GLOBAL_SET_EXTERNREF_S },
  { WebAssembly::GLOBAL_SET_F32, WebAssembly::GLOBAL_SET_F32_S },
  { WebAssembly::GLOBAL_SET_F64, WebAssembly::GLOBAL_SET_F64_S },
  { WebAssembly::GLOBAL_SET_FUNCREF, WebAssembly::GLOBAL_SET_FUNCREF_S },
  { WebAssembly::GLOBAL_SET_I32, WebAssembly::GLOBAL_SET_I32_S },
  { WebAssembly::GLOBAL_SET_I64, WebAssembly::GLOBAL_SET_I64_S },
  { WebAssembly::GLOBAL_SET_V128, WebAssembly::GLOBAL_SET_V128_S },
  { WebAssembly::GT_F32, WebAssembly::GT_F32_S },
  { WebAssembly::GT_F32x4, WebAssembly::GT_F32x4_S },
  { WebAssembly::GT_F64, WebAssembly::GT_F64_S },
  { WebAssembly::GT_F64x2, WebAssembly::GT_F64x2_S },
  { WebAssembly::GT_S_I16x8, WebAssembly::GT_S_I16x8_S },
  { WebAssembly::GT_S_I32, WebAssembly::GT_S_I32_S },
  { WebAssembly::GT_S_I32x4, WebAssembly::GT_S_I32x4_S },
  { WebAssembly::GT_S_I64, WebAssembly::GT_S_I64_S },
  { WebAssembly::GT_S_I64x2, WebAssembly::GT_S_I64x2_S },
  { WebAssembly::GT_S_I8x16, WebAssembly::GT_S_I8x16_S },
  { WebAssembly::GT_U_I16x8, WebAssembly::GT_U_I16x8_S },
  { WebAssembly::GT_U_I32, WebAssembly::GT_U_I32_S },
  { WebAssembly::GT_U_I32x4, WebAssembly::GT_U_I32x4_S },
  { WebAssembly::GT_U_I64, WebAssembly::GT_U_I64_S },
  { WebAssembly::GT_U_I8x16, WebAssembly::GT_U_I8x16_S },
  { WebAssembly::I32_EXTEND16_S_I32, WebAssembly::I32_EXTEND16_S_I32_S },
  { WebAssembly::I32_EXTEND8_S_I32, WebAssembly::I32_EXTEND8_S_I32_S },
  { WebAssembly::I32_REINTERPRET_F32, WebAssembly::I32_REINTERPRET_F32_S },
  { WebAssembly::I32_TRUNC_S_F32, WebAssembly::I32_TRUNC_S_F32_S },
  { WebAssembly::I32_TRUNC_S_F64, WebAssembly::I32_TRUNC_S_F64_S },
  { WebAssembly::I32_TRUNC_S_SAT_F32, WebAssembly::I32_TRUNC_S_SAT_F32_S },
  { WebAssembly::I32_TRUNC_S_SAT_F64, WebAssembly::I32_TRUNC_S_SAT_F64_S },
  { WebAssembly::I32_TRUNC_U_F32, WebAssembly::I32_TRUNC_U_F32_S },
  { WebAssembly::I32_TRUNC_U_F64, WebAssembly::I32_TRUNC_U_F64_S },
  { WebAssembly::I32_TRUNC_U_SAT_F32, WebAssembly::I32_TRUNC_U_SAT_F32_S },
  { WebAssembly::I32_TRUNC_U_SAT_F64, WebAssembly::I32_TRUNC_U_SAT_F64_S },
  { WebAssembly::I32_WRAP_I64, WebAssembly::I32_WRAP_I64_S },
  { WebAssembly::I64_EXTEND16_S_I64, WebAssembly::I64_EXTEND16_S_I64_S },
  { WebAssembly::I64_EXTEND32_S_I64, WebAssembly::I64_EXTEND32_S_I64_S },
  { WebAssembly::I64_EXTEND8_S_I64, WebAssembly::I64_EXTEND8_S_I64_S },
  { WebAssembly::I64_EXTEND_S_I32, WebAssembly::I64_EXTEND_S_I32_S },
  { WebAssembly::I64_EXTEND_U_I32, WebAssembly::I64_EXTEND_U_I32_S },
  { WebAssembly::I64_REINTERPRET_F64, WebAssembly::I64_REINTERPRET_F64_S },
  { WebAssembly::I64_TRUNC_S_F32, WebAssembly::I64_TRUNC_S_F32_S },
  { WebAssembly::I64_TRUNC_S_F64, WebAssembly::I64_TRUNC_S_F64_S },
  { WebAssembly::I64_TRUNC_S_SAT_F32, WebAssembly::I64_TRUNC_S_SAT_F32_S },
  { WebAssembly::I64_TRUNC_S_SAT_F64, WebAssembly::I64_TRUNC_S_SAT_F64_S },
  { WebAssembly::I64_TRUNC_U_F32, WebAssembly::I64_TRUNC_U_F32_S },
  { WebAssembly::I64_TRUNC_U_F64, WebAssembly::I64_TRUNC_U_F64_S },
  { WebAssembly::I64_TRUNC_U_SAT_F32, WebAssembly::I64_TRUNC_U_SAT_F32_S },
  { WebAssembly::I64_TRUNC_U_SAT_F64, WebAssembly::I64_TRUNC_U_SAT_F64_S },
  { WebAssembly::IF, WebAssembly::IF_S },
  { WebAssembly::LANESELECT_I16x8, WebAssembly::LANESELECT_I16x8_S },
  { WebAssembly::LANESELECT_I32x4, WebAssembly::LANESELECT_I32x4_S },
  { WebAssembly::LANESELECT_I64x2, WebAssembly::LANESELECT_I64x2_S },
  { WebAssembly::LANESELECT_I8x16, WebAssembly::LANESELECT_I8x16_S },
  { WebAssembly::LE_F32, WebAssembly::LE_F32_S },
  { WebAssembly::LE_F32x4, WebAssembly::LE_F32x4_S },
  { WebAssembly::LE_F64, WebAssembly::LE_F64_S },
  { WebAssembly::LE_F64x2, WebAssembly::LE_F64x2_S },
  { WebAssembly::LE_S_I16x8, WebAssembly::LE_S_I16x8_S },
  { WebAssembly::LE_S_I32, WebAssembly::LE_S_I32_S },
  { WebAssembly::LE_S_I32x4, WebAssembly::LE_S_I32x4_S },
  { WebAssembly::LE_S_I64, WebAssembly::LE_S_I64_S },
  { WebAssembly::LE_S_I64x2, WebAssembly::LE_S_I64x2_S },
  { WebAssembly::LE_S_I8x16, WebAssembly::LE_S_I8x16_S },
  { WebAssembly::LE_U_I16x8, WebAssembly::LE_U_I16x8_S },
  { WebAssembly::LE_U_I32, WebAssembly::LE_U_I32_S },
  { WebAssembly::LE_U_I32x4, WebAssembly::LE_U_I32x4_S },
  { WebAssembly::LE_U_I64, WebAssembly::LE_U_I64_S },
  { WebAssembly::LE_U_I8x16, WebAssembly::LE_U_I8x16_S },
  { WebAssembly::LOAD16_SPLAT_A32, WebAssembly::LOAD16_SPLAT_A32_S },
  { WebAssembly::LOAD16_SPLAT_A64, WebAssembly::LOAD16_SPLAT_A64_S },
  { WebAssembly::LOAD16_S_I32_A32, WebAssembly::LOAD16_S_I32_A32_S },
  { WebAssembly::LOAD16_S_I32_A64, WebAssembly::LOAD16_S_I32_A64_S },
  { WebAssembly::LOAD16_S_I64_A32, WebAssembly::LOAD16_S_I64_A32_S },
  { WebAssembly::LOAD16_S_I64_A64, WebAssembly::LOAD16_S_I64_A64_S },
  { WebAssembly::LOAD16_U_I32_A32, WebAssembly::LOAD16_U_I32_A32_S },
  { WebAssembly::LOAD16_U_I32_A64, WebAssembly::LOAD16_U_I32_A64_S },
  { WebAssembly::LOAD16_U_I64_A32, WebAssembly::LOAD16_U_I64_A32_S },
  { WebAssembly::LOAD16_U_I64_A64, WebAssembly::LOAD16_U_I64_A64_S },
  { WebAssembly::LOAD32_SPLAT_A32, WebAssembly::LOAD32_SPLAT_A32_S },
  { WebAssembly::LOAD32_SPLAT_A64, WebAssembly::LOAD32_SPLAT_A64_S },
  { WebAssembly::LOAD32_S_I64_A32, WebAssembly::LOAD32_S_I64_A32_S },
  { WebAssembly::LOAD32_S_I64_A64, WebAssembly::LOAD32_S_I64_A64_S },
  { WebAssembly::LOAD32_U_I64_A32, WebAssembly::LOAD32_U_I64_A32_S },
  { WebAssembly::LOAD32_U_I64_A64, WebAssembly::LOAD32_U_I64_A64_S },
  { WebAssembly::LOAD64_SPLAT_A32, WebAssembly::LOAD64_SPLAT_A32_S },
  { WebAssembly::LOAD64_SPLAT_A64, WebAssembly::LOAD64_SPLAT_A64_S },
  { WebAssembly::LOAD8_SPLAT_A32, WebAssembly::LOAD8_SPLAT_A32_S },
  { WebAssembly::LOAD8_SPLAT_A64, WebAssembly::LOAD8_SPLAT_A64_S },
  { WebAssembly::LOAD8_S_I32_A32, WebAssembly::LOAD8_S_I32_A32_S },
  { WebAssembly::LOAD8_S_I32_A64, WebAssembly::LOAD8_S_I32_A64_S },
  { WebAssembly::LOAD8_S_I64_A32, WebAssembly::LOAD8_S_I64_A32_S },
  { WebAssembly::LOAD8_S_I64_A64, WebAssembly::LOAD8_S_I64_A64_S },
  { WebAssembly::LOAD8_U_I32_A32, WebAssembly::LOAD8_U_I32_A32_S },
  { WebAssembly::LOAD8_U_I32_A64, WebAssembly::LOAD8_U_I32_A64_S },
  { WebAssembly::LOAD8_U_I64_A32, WebAssembly::LOAD8_U_I64_A32_S },
  { WebAssembly::LOAD8_U_I64_A64, WebAssembly::LOAD8_U_I64_A64_S },
  { WebAssembly::LOAD_EXTEND_S_I16x8_A32, WebAssembly::LOAD_EXTEND_S_I16x8_A32_S },
  { WebAssembly::LOAD_EXTEND_S_I16x8_A64, WebAssembly::LOAD_EXTEND_S_I16x8_A64_S },
  { WebAssembly::LOAD_EXTEND_S_I32x4_A32, WebAssembly::LOAD_EXTEND_S_I32x4_A32_S },
  { WebAssembly::LOAD_EXTEND_S_I32x4_A64, WebAssembly::LOAD_EXTEND_S_I32x4_A64_S },
  { WebAssembly::LOAD_EXTEND_S_I64x2_A32, WebAssembly::LOAD_EXTEND_S_I64x2_A32_S },
  { WebAssembly::LOAD_EXTEND_S_I64x2_A64, WebAssembly::LOAD_EXTEND_S_I64x2_A64_S },
  { WebAssembly::LOAD_EXTEND_U_I16x8_A32, WebAssembly::LOAD_EXTEND_U_I16x8_A32_S },
  { WebAssembly::LOAD_EXTEND_U_I16x8_A64, WebAssembly::LOAD_EXTEND_U_I16x8_A64_S },
  { WebAssembly::LOAD_EXTEND_U_I32x4_A32, WebAssembly::LOAD_EXTEND_U_I32x4_A32_S },
  { WebAssembly::LOAD_EXTEND_U_I32x4_A64, WebAssembly::LOAD_EXTEND_U_I32x4_A64_S },
  { WebAssembly::LOAD_EXTEND_U_I64x2_A32, WebAssembly::LOAD_EXTEND_U_I64x2_A32_S },
  { WebAssembly::LOAD_EXTEND_U_I64x2_A64, WebAssembly::LOAD_EXTEND_U_I64x2_A64_S },
  { WebAssembly::LOAD_F32_A32, WebAssembly::LOAD_F32_A32_S },
  { WebAssembly::LOAD_F32_A64, WebAssembly::LOAD_F32_A64_S },
  { WebAssembly::LOAD_F64_A32, WebAssembly::LOAD_F64_A32_S },
  { WebAssembly::LOAD_F64_A64, WebAssembly::LOAD_F64_A64_S },
  { WebAssembly::LOAD_I32_A32, WebAssembly::LOAD_I32_A32_S },
  { WebAssembly::LOAD_I32_A64, WebAssembly::LOAD_I32_A64_S },
  { WebAssembly::LOAD_I64_A32, WebAssembly::LOAD_I64_A32_S },
  { WebAssembly::LOAD_I64_A64, WebAssembly::LOAD_I64_A64_S },
  { WebAssembly::LOAD_LANE_I16x8_A32, WebAssembly::LOAD_LANE_I16x8_A32_S },
  { WebAssembly::LOAD_LANE_I16x8_A64, WebAssembly::LOAD_LANE_I16x8_A64_S },
  { WebAssembly::LOAD_LANE_I32x4_A32, WebAssembly::LOAD_LANE_I32x4_A32_S },
  { WebAssembly::LOAD_LANE_I32x4_A64, WebAssembly::LOAD_LANE_I32x4_A64_S },
  { WebAssembly::LOAD_LANE_I64x2_A32, WebAssembly::LOAD_LANE_I64x2_A32_S },
  { WebAssembly::LOAD_LANE_I64x2_A64, WebAssembly::LOAD_LANE_I64x2_A64_S },
  { WebAssembly::LOAD_LANE_I8x16_A32, WebAssembly::LOAD_LANE_I8x16_A32_S },
  { WebAssembly::LOAD_LANE_I8x16_A64, WebAssembly::LOAD_LANE_I8x16_A64_S },
  { WebAssembly::LOAD_V128_A32, WebAssembly::LOAD_V128_A32_S },
  { WebAssembly::LOAD_V128_A64, WebAssembly::LOAD_V128_A64_S },
  { WebAssembly::LOAD_ZERO_I32x4_A32, WebAssembly::LOAD_ZERO_I32x4_A32_S },
  { WebAssembly::LOAD_ZERO_I32x4_A64, WebAssembly::LOAD_ZERO_I32x4_A64_S },
  { WebAssembly::LOAD_ZERO_I64x2_A32, WebAssembly::LOAD_ZERO_I64x2_A32_S },
  { WebAssembly::LOAD_ZERO_I64x2_A64, WebAssembly::LOAD_ZERO_I64x2_A64_S },
  { WebAssembly::LOCAL_GET_EXTERNREF, WebAssembly::LOCAL_GET_EXTERNREF_S },
  { WebAssembly::LOCAL_GET_F32, WebAssembly::LOCAL_GET_F32_S },
  { WebAssembly::LOCAL_GET_F64, WebAssembly::LOCAL_GET_F64_S },
  { WebAssembly::LOCAL_GET_FUNCREF, WebAssembly::LOCAL_GET_FUNCREF_S },
  { WebAssembly::LOCAL_GET_I32, WebAssembly::LOCAL_GET_I32_S },
  { WebAssembly::LOCAL_GET_I64, WebAssembly::LOCAL_GET_I64_S },
  { WebAssembly::LOCAL_GET_V128, WebAssembly::LOCAL_GET_V128_S },
  { WebAssembly::LOCAL_SET_EXTERNREF, WebAssembly::LOCAL_SET_EXTERNREF_S },
  { WebAssembly::LOCAL_SET_F32, WebAssembly::LOCAL_SET_F32_S },
  { WebAssembly::LOCAL_SET_F64, WebAssembly::LOCAL_SET_F64_S },
  { WebAssembly::LOCAL_SET_FUNCREF, WebAssembly::LOCAL_SET_FUNCREF_S },
  { WebAssembly::LOCAL_SET_I32, WebAssembly::LOCAL_SET_I32_S },
  { WebAssembly::LOCAL_SET_I64, WebAssembly::LOCAL_SET_I64_S },
  { WebAssembly::LOCAL_SET_V128, WebAssembly::LOCAL_SET_V128_S },
  { WebAssembly::LOCAL_TEE_EXTERNREF, WebAssembly::LOCAL_TEE_EXTERNREF_S },
  { WebAssembly::LOCAL_TEE_F32, WebAssembly::LOCAL_TEE_F32_S },
  { WebAssembly::LOCAL_TEE_F64, WebAssembly::LOCAL_TEE_F64_S },
  { WebAssembly::LOCAL_TEE_FUNCREF, WebAssembly::LOCAL_TEE_FUNCREF_S },
  { WebAssembly::LOCAL_TEE_I32, WebAssembly::LOCAL_TEE_I32_S },
  { WebAssembly::LOCAL_TEE_I64, WebAssembly::LOCAL_TEE_I64_S },
  { WebAssembly::LOCAL_TEE_V128, WebAssembly::LOCAL_TEE_V128_S },
  { WebAssembly::LOOP, WebAssembly::LOOP_S },
  { WebAssembly::LT_F32, WebAssembly::LT_F32_S },
  { WebAssembly::LT_F32x4, WebAssembly::LT_F32x4_S },
  { WebAssembly::LT_F64, WebAssembly::LT_F64_S },
  { WebAssembly::LT_F64x2, WebAssembly::LT_F64x2_S },
  { WebAssembly::LT_S_I16x8, WebAssembly::LT_S_I16x8_S },
  { WebAssembly::LT_S_I32, WebAssembly::LT_S_I32_S },
  { WebAssembly::LT_S_I32x4, WebAssembly::LT_S_I32x4_S },
  { WebAssembly::LT_S_I64, WebAssembly::LT_S_I64_S },
  { WebAssembly::LT_S_I64x2, WebAssembly::LT_S_I64x2_S },
  { WebAssembly::LT_S_I8x16, WebAssembly::LT_S_I8x16_S },
  { WebAssembly::LT_U_I16x8, WebAssembly::LT_U_I16x8_S },
  { WebAssembly::LT_U_I32, WebAssembly::LT_U_I32_S },
  { WebAssembly::LT_U_I32x4, WebAssembly::LT_U_I32x4_S },
  { WebAssembly::LT_U_I64, WebAssembly::LT_U_I64_S },
  { WebAssembly::LT_U_I8x16, WebAssembly::LT_U_I8x16_S },
  { WebAssembly::MADD_F32x4, WebAssembly::MADD_F32x4_S },
  { WebAssembly::MADD_F64x2, WebAssembly::MADD_F64x2_S },
  { WebAssembly::MAX_F32, WebAssembly::MAX_F32_S },
  { WebAssembly::MAX_F32x4, WebAssembly::MAX_F32x4_S },
  { WebAssembly::MAX_F64, WebAssembly::MAX_F64_S },
  { WebAssembly::MAX_F64x2, WebAssembly::MAX_F64x2_S },
  { WebAssembly::MAX_S_I16x8, WebAssembly::MAX_S_I16x8_S },
  { WebAssembly::MAX_S_I32x4, WebAssembly::MAX_S_I32x4_S },
  { WebAssembly::MAX_S_I8x16, WebAssembly::MAX_S_I8x16_S },
  { WebAssembly::MAX_U_I16x8, WebAssembly::MAX_U_I16x8_S },
  { WebAssembly::MAX_U_I32x4, WebAssembly::MAX_U_I32x4_S },
  { WebAssembly::MAX_U_I8x16, WebAssembly::MAX_U_I8x16_S },
  { WebAssembly::MEMORY_ATOMIC_NOTIFY_A32, WebAssembly::MEMORY_ATOMIC_NOTIFY_A32_S },
  { WebAssembly::MEMORY_ATOMIC_NOTIFY_A64, WebAssembly::MEMORY_ATOMIC_NOTIFY_A64_S },
  { WebAssembly::MEMORY_ATOMIC_WAIT32_A32, WebAssembly::MEMORY_ATOMIC_WAIT32_A32_S },
  { WebAssembly::MEMORY_ATOMIC_WAIT32_A64, WebAssembly::MEMORY_ATOMIC_WAIT32_A64_S },
  { WebAssembly::MEMORY_ATOMIC_WAIT64_A32, WebAssembly::MEMORY_ATOMIC_WAIT64_A32_S },
  { WebAssembly::MEMORY_ATOMIC_WAIT64_A64, WebAssembly::MEMORY_ATOMIC_WAIT64_A64_S },
  { WebAssembly::MIN_F32, WebAssembly::MIN_F32_S },
  { WebAssembly::MIN_F32x4, WebAssembly::MIN_F32x4_S },
  { WebAssembly::MIN_F64, WebAssembly::MIN_F64_S },
  { WebAssembly::MIN_F64x2, WebAssembly::MIN_F64x2_S },
  { WebAssembly::MIN_S_I16x8, WebAssembly::MIN_S_I16x8_S },
  { WebAssembly::MIN_S_I32x4, WebAssembly::MIN_S_I32x4_S },
  { WebAssembly::MIN_S_I8x16, WebAssembly::MIN_S_I8x16_S },
  { WebAssembly::MIN_U_I16x8, WebAssembly::MIN_U_I16x8_S },
  { WebAssembly::MIN_U_I32x4, WebAssembly::MIN_U_I32x4_S },
  { WebAssembly::MIN_U_I8x16, WebAssembly::MIN_U_I8x16_S },
  { WebAssembly::MUL_F32, WebAssembly::MUL_F32_S },
  { WebAssembly::MUL_F32x4, WebAssembly::MUL_F32x4_S },
  { WebAssembly::MUL_F64, WebAssembly::MUL_F64_S },
  { WebAssembly::MUL_F64x2, WebAssembly::MUL_F64x2_S },
  { WebAssembly::MUL_I16x8, WebAssembly::MUL_I16x8_S },
  { WebAssembly::MUL_I32, WebAssembly::MUL_I32_S },
  { WebAssembly::MUL_I32x4, WebAssembly::MUL_I32x4_S },
  { WebAssembly::MUL_I64, WebAssembly::MUL_I64_S },
  { WebAssembly::MUL_I64x2, WebAssembly::MUL_I64x2_S },
  { WebAssembly::NARROW_S_I16x8, WebAssembly::NARROW_S_I16x8_S },
  { WebAssembly::NARROW_S_I8x16, WebAssembly::NARROW_S_I8x16_S },
  { WebAssembly::NARROW_U_I16x8, WebAssembly::NARROW_U_I16x8_S },
  { WebAssembly::NARROW_U_I8x16, WebAssembly::NARROW_U_I8x16_S },
  { WebAssembly::NEAREST_F32, WebAssembly::NEAREST_F32_S },
  { WebAssembly::NEAREST_F32x4, WebAssembly::NEAREST_F32x4_S },
  { WebAssembly::NEAREST_F64, WebAssembly::NEAREST_F64_S },
  { WebAssembly::NEAREST_F64x2, WebAssembly::NEAREST_F64x2_S },
  { WebAssembly::NEG_F32, WebAssembly::NEG_F32_S },
  { WebAssembly::NEG_F32x4, WebAssembly::NEG_F32x4_S },
  { WebAssembly::NEG_F64, WebAssembly::NEG_F64_S },
  { WebAssembly::NEG_F64x2, WebAssembly::NEG_F64x2_S },
  { WebAssembly::NEG_I16x8, WebAssembly::NEG_I16x8_S },
  { WebAssembly::NEG_I32x4, WebAssembly::NEG_I32x4_S },
  { WebAssembly::NEG_I64x2, WebAssembly::NEG_I64x2_S },
  { WebAssembly::NEG_I8x16, WebAssembly::NEG_I8x16_S },
  { WebAssembly::NE_F32, WebAssembly::NE_F32_S },
  { WebAssembly::NE_F32x4, WebAssembly::NE_F32x4_S },
  { WebAssembly::NE_F64, WebAssembly::NE_F64_S },
  { WebAssembly::NE_F64x2, WebAssembly::NE_F64x2_S },
  { WebAssembly::NE_I16x8, WebAssembly::NE_I16x8_S },
  { WebAssembly::NE_I32, WebAssembly::NE_I32_S },
  { WebAssembly::NE_I32x4, WebAssembly::NE_I32x4_S },
  { WebAssembly::NE_I64, WebAssembly::NE_I64_S },
  { WebAssembly::NE_I64x2, WebAssembly::NE_I64x2_S },
  { WebAssembly::NE_I8x16, WebAssembly::NE_I8x16_S },
  { WebAssembly::NMADD_F32x4, WebAssembly::NMADD_F32x4_S },
  { WebAssembly::NMADD_F64x2, WebAssembly::NMADD_F64x2_S },
  { WebAssembly::NOP, WebAssembly::NOP_S },
  { WebAssembly::NOT, WebAssembly::NOT_S },
  { WebAssembly::OR, WebAssembly::OR_S },
  { WebAssembly::OR_I32, WebAssembly::OR_I32_S },
  { WebAssembly::OR_I64, WebAssembly::OR_I64_S },
  { WebAssembly::PMAX_F32x4, WebAssembly::PMAX_F32x4_S },
  { WebAssembly::PMAX_F64x2, WebAssembly::PMAX_F64x2_S },
  { WebAssembly::PMIN_F32x4, WebAssembly::PMIN_F32x4_S },
  { WebAssembly::PMIN_F64x2, WebAssembly::PMIN_F64x2_S },
  { WebAssembly::POPCNT_I32, WebAssembly::POPCNT_I32_S },
  { WebAssembly::POPCNT_I64, WebAssembly::POPCNT_I64_S },
  { WebAssembly::POPCNT_I8x16, WebAssembly::POPCNT_I8x16_S },
  { WebAssembly::Q15MULR_SAT_S_I16x8, WebAssembly::Q15MULR_SAT_S_I16x8_S },
  { WebAssembly::REF_IS_NULL_EXTERNREF, WebAssembly::REF_IS_NULL_EXTERNREF_S },
  { WebAssembly::REF_IS_NULL_FUNCREF, WebAssembly::REF_IS_NULL_FUNCREF_S },
  { WebAssembly::REF_NULL_EXTERNREF, WebAssembly::REF_NULL_EXTERNREF_S },
  { WebAssembly::REF_NULL_FUNCREF, WebAssembly::REF_NULL_FUNCREF_S },
  { WebAssembly::RELAXED_DOT, WebAssembly::RELAXED_DOT_S },
  { WebAssembly::RELAXED_DOT_ADD, WebAssembly::RELAXED_DOT_ADD_S },
  { WebAssembly::RELAXED_DOT_BFLOAT, WebAssembly::RELAXED_DOT_BFLOAT_S },
  { WebAssembly::RELAXED_Q15MULR_S_I16x8, WebAssembly::RELAXED_Q15MULR_S_I16x8_S },
  { WebAssembly::RELAXED_SWIZZLE, WebAssembly::RELAXED_SWIZZLE_S },
  { WebAssembly::REM_S_I32, WebAssembly::REM_S_I32_S },
  { WebAssembly::REM_S_I64, WebAssembly::REM_S_I64_S },
  { WebAssembly::REM_U_I32, WebAssembly::REM_U_I32_S },
  { WebAssembly::REM_U_I64, WebAssembly::REM_U_I64_S },
  { WebAssembly::REPLACE_LANE_F32x4, WebAssembly::REPLACE_LANE_F32x4_S },
  { WebAssembly::REPLACE_LANE_F64x2, WebAssembly::REPLACE_LANE_F64x2_S },
  { WebAssembly::REPLACE_LANE_I16x8, WebAssembly::REPLACE_LANE_I16x8_S },
  { WebAssembly::REPLACE_LANE_I32x4, WebAssembly::REPLACE_LANE_I32x4_S },
  { WebAssembly::REPLACE_LANE_I64x2, WebAssembly::REPLACE_LANE_I64x2_S },
  { WebAssembly::REPLACE_LANE_I8x16, WebAssembly::REPLACE_LANE_I8x16_S },
  { WebAssembly::RETHROW, WebAssembly::RETHROW_S },
  { WebAssembly::RETURN, WebAssembly::RETURN_S },
  { WebAssembly::RET_CALL, WebAssembly::RET_CALL_S },
  { WebAssembly::RET_CALL_INDIRECT, WebAssembly::RET_CALL_INDIRECT_S },
  { WebAssembly::ROTL_I32, WebAssembly::ROTL_I32_S },
  { WebAssembly::ROTL_I64, WebAssembly::ROTL_I64_S },
  { WebAssembly::ROTR_I32, WebAssembly::ROTR_I32_S },
  { WebAssembly::ROTR_I64, WebAssembly::ROTR_I64_S },
  { WebAssembly::SELECT_EXTERNREF, WebAssembly::SELECT_EXTERNREF_S },
  { WebAssembly::SELECT_F32, WebAssembly::SELECT_F32_S },
  { WebAssembly::SELECT_F64, WebAssembly::SELECT_F64_S },
  { WebAssembly::SELECT_FUNCREF, WebAssembly::SELECT_FUNCREF_S },
  { WebAssembly::SELECT_I32, WebAssembly::SELECT_I32_S },
  { WebAssembly::SELECT_I64, WebAssembly::SELECT_I64_S },
  { WebAssembly::SELECT_V128, WebAssembly::SELECT_V128_S },
  { WebAssembly::SHL_I16x8, WebAssembly::SHL_I16x8_S },
  { WebAssembly::SHL_I32, WebAssembly::SHL_I32_S },
  { WebAssembly::SHL_I32x4, WebAssembly::SHL_I32x4_S },
  { WebAssembly::SHL_I64, WebAssembly::SHL_I64_S },
  { WebAssembly::SHL_I64x2, WebAssembly::SHL_I64x2_S },
  { WebAssembly::SHL_I8x16, WebAssembly::SHL_I8x16_S },
  { WebAssembly::SHR_S_I16x8, WebAssembly::SHR_S_I16x8_S },
  { WebAssembly::SHR_S_I32, WebAssembly::SHR_S_I32_S },
  { WebAssembly::SHR_S_I32x4, WebAssembly::SHR_S_I32x4_S },
  { WebAssembly::SHR_S_I64, WebAssembly::SHR_S_I64_S },
  { WebAssembly::SHR_S_I64x2, WebAssembly::SHR_S_I64x2_S },
  { WebAssembly::SHR_S_I8x16, WebAssembly::SHR_S_I8x16_S },
  { WebAssembly::SHR_U_I16x8, WebAssembly::SHR_U_I16x8_S },
  { WebAssembly::SHR_U_I32, WebAssembly::SHR_U_I32_S },
  { WebAssembly::SHR_U_I32x4, WebAssembly::SHR_U_I32x4_S },
  { WebAssembly::SHR_U_I64, WebAssembly::SHR_U_I64_S },
  { WebAssembly::SHR_U_I64x2, WebAssembly::SHR_U_I64x2_S },
  { WebAssembly::SHR_U_I8x16, WebAssembly::SHR_U_I8x16_S },
  { WebAssembly::SHUFFLE, WebAssembly::SHUFFLE_S },
  { WebAssembly::SIMD_RELAXED_FMAX_F32x4, WebAssembly::SIMD_RELAXED_FMAX_F32x4_S },
  { WebAssembly::SIMD_RELAXED_FMAX_F64x2, WebAssembly::SIMD_RELAXED_FMAX_F64x2_S },
  { WebAssembly::SIMD_RELAXED_FMIN_F32x4, WebAssembly::SIMD_RELAXED_FMIN_F32x4_S },
  { WebAssembly::SIMD_RELAXED_FMIN_F64x2, WebAssembly::SIMD_RELAXED_FMIN_F64x2_S },
  { WebAssembly::SPLAT_F32x4, WebAssembly::SPLAT_F32x4_S },
  { WebAssembly::SPLAT_F64x2, WebAssembly::SPLAT_F64x2_S },
  { WebAssembly::SPLAT_I16x8, WebAssembly::SPLAT_I16x8_S },
  { WebAssembly::SPLAT_I32x4, WebAssembly::SPLAT_I32x4_S },
  { WebAssembly::SPLAT_I64x2, WebAssembly::SPLAT_I64x2_S },
  { WebAssembly::SPLAT_I8x16, WebAssembly::SPLAT_I8x16_S },
  { WebAssembly::SQRT_F32, WebAssembly::SQRT_F32_S },
  { WebAssembly::SQRT_F32x4, WebAssembly::SQRT_F32x4_S },
  { WebAssembly::SQRT_F64, WebAssembly::SQRT_F64_S },
  { WebAssembly::SQRT_F64x2, WebAssembly::SQRT_F64x2_S },
  { WebAssembly::STORE16_I32_A32, WebAssembly::STORE16_I32_A32_S },
  { WebAssembly::STORE16_I32_A64, WebAssembly::STORE16_I32_A64_S },
  { WebAssembly::STORE16_I64_A32, WebAssembly::STORE16_I64_A32_S },
  { WebAssembly::STORE16_I64_A64, WebAssembly::STORE16_I64_A64_S },
  { WebAssembly::STORE32_I64_A32, WebAssembly::STORE32_I64_A32_S },
  { WebAssembly::STORE32_I64_A64, WebAssembly::STORE32_I64_A64_S },
  { WebAssembly::STORE8_I32_A32, WebAssembly::STORE8_I32_A32_S },
  { WebAssembly::STORE8_I32_A64, WebAssembly::STORE8_I32_A64_S },
  { WebAssembly::STORE8_I64_A32, WebAssembly::STORE8_I64_A32_S },
  { WebAssembly::STORE8_I64_A64, WebAssembly::STORE8_I64_A64_S },
  { WebAssembly::STORE_F32_A32, WebAssembly::STORE_F32_A32_S },
  { WebAssembly::STORE_F32_A64, WebAssembly::STORE_F32_A64_S },
  { WebAssembly::STORE_F64_A32, WebAssembly::STORE_F64_A32_S },
  { WebAssembly::STORE_F64_A64, WebAssembly::STORE_F64_A64_S },
  { WebAssembly::STORE_I32_A32, WebAssembly::STORE_I32_A32_S },
  { WebAssembly::STORE_I32_A64, WebAssembly::STORE_I32_A64_S },
  { WebAssembly::STORE_I64_A32, WebAssembly::STORE_I64_A32_S },
  { WebAssembly::STORE_I64_A64, WebAssembly::STORE_I64_A64_S },
  { WebAssembly::STORE_LANE_I16x8_A32, WebAssembly::STORE_LANE_I16x8_A32_S },
  { WebAssembly::STORE_LANE_I16x8_A64, WebAssembly::STORE_LANE_I16x8_A64_S },
  { WebAssembly::STORE_LANE_I32x4_A32, WebAssembly::STORE_LANE_I32x4_A32_S },
  { WebAssembly::STORE_LANE_I32x4_A64, WebAssembly::STORE_LANE_I32x4_A64_S },
  { WebAssembly::STORE_LANE_I64x2_A32, WebAssembly::STORE_LANE_I64x2_A32_S },
  { WebAssembly::STORE_LANE_I64x2_A64, WebAssembly::STORE_LANE_I64x2_A64_S },
  { WebAssembly::STORE_LANE_I8x16_A32, WebAssembly::STORE_LANE_I8x16_A32_S },
  { WebAssembly::STORE_LANE_I8x16_A64, WebAssembly::STORE_LANE_I8x16_A64_S },
  { WebAssembly::STORE_V128_A32, WebAssembly::STORE_V128_A32_S },
  { WebAssembly::STORE_V128_A64, WebAssembly::STORE_V128_A64_S },
  { WebAssembly::SUB_F32, WebAssembly::SUB_F32_S },
  { WebAssembly::SUB_F32x4, WebAssembly::SUB_F32x4_S },
  { WebAssembly::SUB_F64, WebAssembly::SUB_F64_S },
  { WebAssembly::SUB_F64x2, WebAssembly::SUB_F64x2_S },
  { WebAssembly::SUB_I16x8, WebAssembly::SUB_I16x8_S },
  { WebAssembly::SUB_I32, WebAssembly::SUB_I32_S },
  { WebAssembly::SUB_I32x4, WebAssembly::SUB_I32x4_S },
  { WebAssembly::SUB_I64, WebAssembly::SUB_I64_S },
  { WebAssembly::SUB_I64x2, WebAssembly::SUB_I64x2_S },
  { WebAssembly::SUB_I8x16, WebAssembly::SUB_I8x16_S },
  { WebAssembly::SUB_SAT_S_I16x8, WebAssembly::SUB_SAT_S_I16x8_S },
  { WebAssembly::SUB_SAT_S_I8x16, WebAssembly::SUB_SAT_S_I8x16_S },
  { WebAssembly::SUB_SAT_U_I16x8, WebAssembly::SUB_SAT_U_I16x8_S },
  { WebAssembly::SUB_SAT_U_I8x16, WebAssembly::SUB_SAT_U_I8x16_S },
  { WebAssembly::SWIZZLE, WebAssembly::SWIZZLE_S },
  { WebAssembly::TABLE_COPY, WebAssembly::TABLE_COPY_S },
  { WebAssembly::TABLE_FILL_EXTERNREF, WebAssembly::TABLE_FILL_EXTERNREF_S },
  { WebAssembly::TABLE_FILL_FUNCREF, WebAssembly::TABLE_FILL_FUNCREF_S },
  { WebAssembly::TABLE_GET_EXTERNREF, WebAssembly::TABLE_GET_EXTERNREF_S },
  { WebAssembly::TABLE_GET_FUNCREF, WebAssembly::TABLE_GET_FUNCREF_S },
  { WebAssembly::TABLE_GROW_EXTERNREF, WebAssembly::TABLE_GROW_EXTERNREF_S },
  { WebAssembly::TABLE_GROW_FUNCREF, WebAssembly::TABLE_GROW_FUNCREF_S },
  { WebAssembly::TABLE_SET_EXTERNREF, WebAssembly::TABLE_SET_EXTERNREF_S },
  { WebAssembly::TABLE_SET_FUNCREF, WebAssembly::TABLE_SET_FUNCREF_S },
  { WebAssembly::TABLE_SIZE, WebAssembly::TABLE_SIZE_S },
  { WebAssembly::TEE_EXTERNREF, WebAssembly::TEE_EXTERNREF_S },
  { WebAssembly::TEE_F32, WebAssembly::TEE_F32_S },
  { WebAssembly::TEE_F64, WebAssembly::TEE_F64_S },
  { WebAssembly::TEE_FUNCREF, WebAssembly::TEE_FUNCREF_S },
  { WebAssembly::TEE_I32, WebAssembly::TEE_I32_S },
  { WebAssembly::TEE_I64, WebAssembly::TEE_I64_S },
  { WebAssembly::TEE_V128, WebAssembly::TEE_V128_S },
  { WebAssembly::THROW, WebAssembly::THROW_S },
  { WebAssembly::TRUNC_F32, WebAssembly::TRUNC_F32_S },
  { WebAssembly::TRUNC_F32x4, WebAssembly::TRUNC_F32x4_S },
  { WebAssembly::TRUNC_F64, WebAssembly::TRUNC_F64_S },
  { WebAssembly::TRUNC_F64x2, WebAssembly::TRUNC_F64x2_S },
  { WebAssembly::TRY, WebAssembly::TRY_S },
  { WebAssembly::UNREACHABLE, WebAssembly::UNREACHABLE_S },
  { WebAssembly::XOR, WebAssembly::XOR_S },
  { WebAssembly::XOR_I32, WebAssembly::XOR_I32_S },
  { WebAssembly::XOR_I64, WebAssembly::XOR_I64_S },
  { WebAssembly::anonymous_7070MEMORY_GROW_A32, WebAssembly::anonymous_7070MEMORY_GROW_A32_S },
  { WebAssembly::anonymous_7070MEMORY_SIZE_A32, WebAssembly::anonymous_7070MEMORY_SIZE_A32_S },
  { WebAssembly::anonymous_7071MEMORY_GROW_A64, WebAssembly::anonymous_7071MEMORY_GROW_A64_S },
  { WebAssembly::anonymous_7071MEMORY_SIZE_A64, WebAssembly::anonymous_7071MEMORY_SIZE_A64_S },
  { WebAssembly::anonymous_7752DATA_DROP, WebAssembly::anonymous_7752DATA_DROP_S },
  { WebAssembly::anonymous_7752MEMORY_COPY_A32, WebAssembly::anonymous_7752MEMORY_COPY_A32_S },
  { WebAssembly::anonymous_7752MEMORY_FILL_A32, WebAssembly::anonymous_7752MEMORY_FILL_A32_S },
  { WebAssembly::anonymous_7752MEMORY_INIT_A32, WebAssembly::anonymous_7752MEMORY_INIT_A32_S },
  { WebAssembly::anonymous_7753DATA_DROP, WebAssembly::anonymous_7753DATA_DROP_S },
  { WebAssembly::anonymous_7753MEMORY_COPY_A64, WebAssembly::anonymous_7753MEMORY_COPY_A64_S },
  { WebAssembly::anonymous_7753MEMORY_FILL_A64, WebAssembly::anonymous_7753MEMORY_FILL_A64_S },
  { WebAssembly::anonymous_7753MEMORY_INIT_A64, WebAssembly::anonymous_7753MEMORY_INIT_A64_S },
  { WebAssembly::convert_low_s_F64x2, WebAssembly::convert_low_s_F64x2_S },
  { WebAssembly::convert_low_u_F64x2, WebAssembly::convert_low_u_F64x2_S },
  { WebAssembly::demote_zero_F32x4, WebAssembly::demote_zero_F32x4_S },
  { WebAssembly::extend_high_s_I16x8, WebAssembly::extend_high_s_I16x8_S },
  { WebAssembly::extend_high_s_I32x4, WebAssembly::extend_high_s_I32x4_S },
  { WebAssembly::extend_high_s_I64x2, WebAssembly::extend_high_s_I64x2_S },
  { WebAssembly::extend_high_u_I16x8, WebAssembly::extend_high_u_I16x8_S },
  { WebAssembly::extend_high_u_I32x4, WebAssembly::extend_high_u_I32x4_S },
  { WebAssembly::extend_high_u_I64x2, WebAssembly::extend_high_u_I64x2_S },
  { WebAssembly::extend_low_s_I16x8, WebAssembly::extend_low_s_I16x8_S },
  { WebAssembly::extend_low_s_I32x4, WebAssembly::extend_low_s_I32x4_S },
  { WebAssembly::extend_low_s_I64x2, WebAssembly::extend_low_s_I64x2_S },
  { WebAssembly::extend_low_u_I16x8, WebAssembly::extend_low_u_I16x8_S },
  { WebAssembly::extend_low_u_I32x4, WebAssembly::extend_low_u_I32x4_S },
  { WebAssembly::extend_low_u_I64x2, WebAssembly::extend_low_u_I64x2_S },
  { WebAssembly::fp_to_sint_I32x4, WebAssembly::fp_to_sint_I32x4_S },
  { WebAssembly::fp_to_uint_I32x4, WebAssembly::fp_to_uint_I32x4_S },
  { WebAssembly::int_wasm_extadd_pairwise_signed_I16x8, WebAssembly::int_wasm_extadd_pairwise_signed_I16x8_S },
  { WebAssembly::int_wasm_extadd_pairwise_signed_I32x4, WebAssembly::int_wasm_extadd_pairwise_signed_I32x4_S },
  { WebAssembly::int_wasm_extadd_pairwise_unsigned_I16x8, WebAssembly::int_wasm_extadd_pairwise_unsigned_I16x8_S },
  { WebAssembly::int_wasm_extadd_pairwise_unsigned_I32x4, WebAssembly::int_wasm_extadd_pairwise_unsigned_I32x4_S },
  { WebAssembly::int_wasm_relaxed_trunc_signed_I32x4, WebAssembly::int_wasm_relaxed_trunc_signed_I32x4_S },
  { WebAssembly::int_wasm_relaxed_trunc_signed_zero_I32x4, WebAssembly::int_wasm_relaxed_trunc_signed_zero_I32x4_S },
  { WebAssembly::int_wasm_relaxed_trunc_unsigned_I32x4, WebAssembly::int_wasm_relaxed_trunc_unsigned_I32x4_S },
  { WebAssembly::int_wasm_relaxed_trunc_unsigned_zero_I32x4, WebAssembly::int_wasm_relaxed_trunc_unsigned_zero_I32x4_S },
  { WebAssembly::promote_low_F64x2, WebAssembly::promote_low_F64x2_S },
  { WebAssembly::sint_to_fp_F32x4, WebAssembly::sint_to_fp_F32x4_S },
  { WebAssembly::trunc_sat_zero_s_I32x4, WebAssembly::trunc_sat_zero_s_I32x4_S },
  { WebAssembly::trunc_sat_zero_u_I32x4, WebAssembly::trunc_sat_zero_u_I32x4_S },
  { WebAssembly::uint_to_fp_F32x4, WebAssembly::uint_to_fp_F32x4_S },
}; // End of getStackOpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 750;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == getStackOpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getStackOpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getStackOpcodeTable[mid][1];
}

// getWasm64Opcode
LLVM_READONLY
int getWasm64Opcode(uint16_t Opcode) {
static const uint16_t getWasm64OpcodeTable[][2] = {
  { WebAssembly::ATOMIC_LOAD16_U_I32_A32, WebAssembly::ATOMIC_LOAD16_U_I32_A64 },
  { WebAssembly::ATOMIC_LOAD16_U_I32_A32_S, WebAssembly::ATOMIC_LOAD16_U_I32_A64_S },
  { WebAssembly::ATOMIC_LOAD16_U_I64_A32, WebAssembly::ATOMIC_LOAD16_U_I64_A64 },
  { WebAssembly::ATOMIC_LOAD16_U_I64_A32_S, WebAssembly::ATOMIC_LOAD16_U_I64_A64_S },
  { WebAssembly::ATOMIC_LOAD32_U_I64_A32, WebAssembly::ATOMIC_LOAD32_U_I64_A64 },
  { WebAssembly::ATOMIC_LOAD32_U_I64_A32_S, WebAssembly::ATOMIC_LOAD32_U_I64_A64_S },
  { WebAssembly::ATOMIC_LOAD8_U_I32_A32, WebAssembly::ATOMIC_LOAD8_U_I32_A64 },
  { WebAssembly::ATOMIC_LOAD8_U_I32_A32_S, WebAssembly::ATOMIC_LOAD8_U_I32_A64_S },
  { WebAssembly::ATOMIC_LOAD8_U_I64_A32, WebAssembly::ATOMIC_LOAD8_U_I64_A64 },
  { WebAssembly::ATOMIC_LOAD8_U_I64_A32_S, WebAssembly::ATOMIC_LOAD8_U_I64_A64_S },
  { WebAssembly::ATOMIC_LOAD_I32_A32, WebAssembly::ATOMIC_LOAD_I32_A64 },
  { WebAssembly::ATOMIC_LOAD_I32_A32_S, WebAssembly::ATOMIC_LOAD_I32_A64_S },
  { WebAssembly::ATOMIC_LOAD_I64_A32, WebAssembly::ATOMIC_LOAD_I64_A64 },
  { WebAssembly::ATOMIC_LOAD_I64_A32_S, WebAssembly::ATOMIC_LOAD_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_ADD_I32_A32, WebAssembly::ATOMIC_RMW16_U_ADD_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_ADD_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_ADD_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_ADD_I64_A32, WebAssembly::ATOMIC_RMW16_U_ADD_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_ADD_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_ADD_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_AND_I32_A32, WebAssembly::ATOMIC_RMW16_U_AND_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_AND_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_AND_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_AND_I64_A32, WebAssembly::ATOMIC_RMW16_U_AND_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_AND_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_AND_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A32, WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A32, WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_OR_I32_A32, WebAssembly::ATOMIC_RMW16_U_OR_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_OR_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_OR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_OR_I64_A32, WebAssembly::ATOMIC_RMW16_U_OR_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_OR_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_OR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_SUB_I32_A32, WebAssembly::ATOMIC_RMW16_U_SUB_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_SUB_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_SUB_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_SUB_I64_A32, WebAssembly::ATOMIC_RMW16_U_SUB_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_SUB_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_SUB_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A32, WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A32, WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_XOR_I32_A32, WebAssembly::ATOMIC_RMW16_U_XOR_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_XOR_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_XOR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_XOR_I64_A32, WebAssembly::ATOMIC_RMW16_U_XOR_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_XOR_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_XOR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_ADD_I64_A32, WebAssembly::ATOMIC_RMW32_U_ADD_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_ADD_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_ADD_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_AND_I64_A32, WebAssembly::ATOMIC_RMW32_U_AND_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_AND_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_AND_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A32, WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_OR_I64_A32, WebAssembly::ATOMIC_RMW32_U_OR_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_OR_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_OR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_SUB_I64_A32, WebAssembly::ATOMIC_RMW32_U_SUB_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_SUB_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_SUB_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A32, WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_XOR_I64_A32, WebAssembly::ATOMIC_RMW32_U_XOR_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_XOR_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_XOR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_ADD_I32_A32, WebAssembly::ATOMIC_RMW8_U_ADD_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_ADD_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_ADD_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_ADD_I64_A32, WebAssembly::ATOMIC_RMW8_U_ADD_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_ADD_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_ADD_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_AND_I32_A32, WebAssembly::ATOMIC_RMW8_U_AND_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_AND_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_AND_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_AND_I64_A32, WebAssembly::ATOMIC_RMW8_U_AND_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_AND_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_AND_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A32, WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A32, WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_OR_I32_A32, WebAssembly::ATOMIC_RMW8_U_OR_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_OR_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_OR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_OR_I64_A32, WebAssembly::ATOMIC_RMW8_U_OR_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_OR_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_OR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_SUB_I32_A32, WebAssembly::ATOMIC_RMW8_U_SUB_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_SUB_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_SUB_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_SUB_I64_A32, WebAssembly::ATOMIC_RMW8_U_SUB_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_SUB_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_SUB_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A32, WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A32, WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_XOR_I32_A32, WebAssembly::ATOMIC_RMW8_U_XOR_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_XOR_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_XOR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_XOR_I64_A32, WebAssembly::ATOMIC_RMW8_U_XOR_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_XOR_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_XOR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_ADD_I32_A32, WebAssembly::ATOMIC_RMW_ADD_I32_A64 },
  { WebAssembly::ATOMIC_RMW_ADD_I32_A32_S, WebAssembly::ATOMIC_RMW_ADD_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_ADD_I64_A32, WebAssembly::ATOMIC_RMW_ADD_I64_A64 },
  { WebAssembly::ATOMIC_RMW_ADD_I64_A32_S, WebAssembly::ATOMIC_RMW_ADD_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_AND_I32_A32, WebAssembly::ATOMIC_RMW_AND_I32_A64 },
  { WebAssembly::ATOMIC_RMW_AND_I32_A32_S, WebAssembly::ATOMIC_RMW_AND_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_AND_I64_A32, WebAssembly::ATOMIC_RMW_AND_I64_A64 },
  { WebAssembly::ATOMIC_RMW_AND_I64_A32_S, WebAssembly::ATOMIC_RMW_AND_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A32, WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A64 },
  { WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A32_S, WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A32, WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A32_S, WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_OR_I32_A32, WebAssembly::ATOMIC_RMW_OR_I32_A64 },
  { WebAssembly::ATOMIC_RMW_OR_I32_A32_S, WebAssembly::ATOMIC_RMW_OR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_OR_I64_A32, WebAssembly::ATOMIC_RMW_OR_I64_A64 },
  { WebAssembly::ATOMIC_RMW_OR_I64_A32_S, WebAssembly::ATOMIC_RMW_OR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_SUB_I32_A32, WebAssembly::ATOMIC_RMW_SUB_I32_A64 },
  { WebAssembly::ATOMIC_RMW_SUB_I32_A32_S, WebAssembly::ATOMIC_RMW_SUB_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_SUB_I64_A32, WebAssembly::ATOMIC_RMW_SUB_I64_A64 },
  { WebAssembly::ATOMIC_RMW_SUB_I64_A32_S, WebAssembly::ATOMIC_RMW_SUB_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_XCHG_I32_A32, WebAssembly::ATOMIC_RMW_XCHG_I32_A64 },
  { WebAssembly::ATOMIC_RMW_XCHG_I32_A32_S, WebAssembly::ATOMIC_RMW_XCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_XCHG_I64_A32, WebAssembly::ATOMIC_RMW_XCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW_XCHG_I64_A32_S, WebAssembly::ATOMIC_RMW_XCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_XOR_I32_A32, WebAssembly::ATOMIC_RMW_XOR_I32_A64 },
  { WebAssembly::ATOMIC_RMW_XOR_I32_A32_S, WebAssembly::ATOMIC_RMW_XOR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_XOR_I64_A32, WebAssembly::ATOMIC_RMW_XOR_I64_A64 },
  { WebAssembly::ATOMIC_RMW_XOR_I64_A32_S, WebAssembly::ATOMIC_RMW_XOR_I64_A64_S },
  { WebAssembly::ATOMIC_STORE16_I32_A32, WebAssembly::ATOMIC_STORE16_I32_A64 },
  { WebAssembly::ATOMIC_STORE16_I32_A32_S, WebAssembly::ATOMIC_STORE16_I32_A64_S },
  { WebAssembly::ATOMIC_STORE16_I64_A32, WebAssembly::ATOMIC_STORE16_I64_A64 },
  { WebAssembly::ATOMIC_STORE16_I64_A32_S, WebAssembly::ATOMIC_STORE16_I64_A64_S },
  { WebAssembly::ATOMIC_STORE32_I64_A32, WebAssembly::ATOMIC_STORE32_I64_A64 },
  { WebAssembly::ATOMIC_STORE32_I64_A32_S, WebAssembly::ATOMIC_STORE32_I64_A64_S },
  { WebAssembly::ATOMIC_STORE8_I32_A32, WebAssembly::ATOMIC_STORE8_I32_A64 },
  { WebAssembly::ATOMIC_STORE8_I32_A32_S, WebAssembly::ATOMIC_STORE8_I32_A64_S },
  { WebAssembly::ATOMIC_STORE8_I64_A32, WebAssembly::ATOMIC_STORE8_I64_A64 },
  { WebAssembly::ATOMIC_STORE8_I64_A32_S, WebAssembly::ATOMIC_STORE8_I64_A64_S },
  { WebAssembly::ATOMIC_STORE_I32_A32, WebAssembly::ATOMIC_STORE_I32_A64 },
  { WebAssembly::ATOMIC_STORE_I32_A32_S, WebAssembly::ATOMIC_STORE_I32_A64_S },
  { WebAssembly::ATOMIC_STORE_I64_A32, WebAssembly::ATOMIC_STORE_I64_A64 },
  { WebAssembly::ATOMIC_STORE_I64_A32_S, WebAssembly::ATOMIC_STORE_I64_A64_S },
  { WebAssembly::LOAD16_S_I32_A32, WebAssembly::LOAD16_S_I32_A64 },
  { WebAssembly::LOAD16_S_I32_A32_S, WebAssembly::LOAD16_S_I32_A64_S },
  { WebAssembly::LOAD16_S_I64_A32, WebAssembly::LOAD16_S_I64_A64 },
  { WebAssembly::LOAD16_S_I64_A32_S, WebAssembly::LOAD16_S_I64_A64_S },
  { WebAssembly::LOAD16_U_I32_A32, WebAssembly::LOAD16_U_I32_A64 },
  { WebAssembly::LOAD16_U_I32_A32_S, WebAssembly::LOAD16_U_I32_A64_S },
  { WebAssembly::LOAD16_U_I64_A32, WebAssembly::LOAD16_U_I64_A64 },
  { WebAssembly::LOAD16_U_I64_A32_S, WebAssembly::LOAD16_U_I64_A64_S },
  { WebAssembly::LOAD32_S_I64_A32, WebAssembly::LOAD32_S_I64_A64 },
  { WebAssembly::LOAD32_S_I64_A32_S, WebAssembly::LOAD32_S_I64_A64_S },
  { WebAssembly::LOAD32_U_I64_A32, WebAssembly::LOAD32_U_I64_A64 },
  { WebAssembly::LOAD32_U_I64_A32_S, WebAssembly::LOAD32_U_I64_A64_S },
  { WebAssembly::LOAD8_S_I32_A32, WebAssembly::LOAD8_S_I32_A64 },
  { WebAssembly::LOAD8_S_I32_A32_S, WebAssembly::LOAD8_S_I32_A64_S },
  { WebAssembly::LOAD8_S_I64_A32, WebAssembly::LOAD8_S_I64_A64 },
  { WebAssembly::LOAD8_S_I64_A32_S, WebAssembly::LOAD8_S_I64_A64_S },
  { WebAssembly::LOAD8_U_I32_A32, WebAssembly::LOAD8_U_I32_A64 },
  { WebAssembly::LOAD8_U_I32_A32_S, WebAssembly::LOAD8_U_I32_A64_S },
  { WebAssembly::LOAD8_U_I64_A32, WebAssembly::LOAD8_U_I64_A64 },
  { WebAssembly::LOAD8_U_I64_A32_S, WebAssembly::LOAD8_U_I64_A64_S },
  { WebAssembly::LOAD_F32_A32, WebAssembly::LOAD_F32_A64 },
  { WebAssembly::LOAD_F32_A32_S, WebAssembly::LOAD_F32_A64_S },
  { WebAssembly::LOAD_F64_A32, WebAssembly::LOAD_F64_A64 },
  { WebAssembly::LOAD_F64_A32_S, WebAssembly::LOAD_F64_A64_S },
  { WebAssembly::LOAD_I32_A32, WebAssembly::LOAD_I32_A64 },
  { WebAssembly::LOAD_I32_A32_S, WebAssembly::LOAD_I32_A64_S },
  { WebAssembly::LOAD_I64_A32, WebAssembly::LOAD_I64_A64 },
  { WebAssembly::LOAD_I64_A32_S, WebAssembly::LOAD_I64_A64_S },
  { WebAssembly::MEMORY_ATOMIC_NOTIFY_A32, WebAssembly::MEMORY_ATOMIC_NOTIFY_A64 },
  { WebAssembly::MEMORY_ATOMIC_NOTIFY_A32_S, WebAssembly::MEMORY_ATOMIC_NOTIFY_A64_S },
  { WebAssembly::MEMORY_ATOMIC_WAIT32_A32, WebAssembly::MEMORY_ATOMIC_WAIT32_A64 },
  { WebAssembly::MEMORY_ATOMIC_WAIT32_A32_S, WebAssembly::MEMORY_ATOMIC_WAIT32_A64_S },
  { WebAssembly::MEMORY_ATOMIC_WAIT64_A32, WebAssembly::MEMORY_ATOMIC_WAIT64_A64 },
  { WebAssembly::MEMORY_ATOMIC_WAIT64_A32_S, WebAssembly::MEMORY_ATOMIC_WAIT64_A64_S },
  { WebAssembly::STORE16_I32_A32, WebAssembly::STORE16_I32_A64 },
  { WebAssembly::STORE16_I32_A32_S, WebAssembly::STORE16_I32_A64_S },
  { WebAssembly::STORE16_I64_A32, WebAssembly::STORE16_I64_A64 },
  { WebAssembly::STORE16_I64_A32_S, WebAssembly::STORE16_I64_A64_S },
  { WebAssembly::STORE32_I64_A32, WebAssembly::STORE32_I64_A64 },
  { WebAssembly::STORE32_I64_A32_S, WebAssembly::STORE32_I64_A64_S },
  { WebAssembly::STORE8_I32_A32, WebAssembly::STORE8_I32_A64 },
  { WebAssembly::STORE8_I32_A32_S, WebAssembly::STORE8_I32_A64_S },
  { WebAssembly::STORE8_I64_A32, WebAssembly::STORE8_I64_A64 },
  { WebAssembly::STORE8_I64_A32_S, WebAssembly::STORE8_I64_A64_S },
  { WebAssembly::STORE_F32_A32, WebAssembly::STORE_F32_A64 },
  { WebAssembly::STORE_F32_A32_S, WebAssembly::STORE_F32_A64_S },
  { WebAssembly::STORE_F64_A32, WebAssembly::STORE_F64_A64 },
  { WebAssembly::STORE_F64_A32_S, WebAssembly::STORE_F64_A64_S },
  { WebAssembly::STORE_I32_A32, WebAssembly::STORE_I32_A64 },
  { WebAssembly::STORE_I32_A32_S, WebAssembly::STORE_I32_A64_S },
  { WebAssembly::STORE_I64_A32, WebAssembly::STORE_I64_A64 },
  { WebAssembly::STORE_I64_A32_S, WebAssembly::STORE_I64_A64_S },
}; // End of getWasm64OpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 178;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == getWasm64OpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getWasm64OpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getWasm64OpcodeTable[mid][1];
}

} // end namespace WebAssembly
} // end namespace llvm
#endif // GET_INSTRMAP_INFO

