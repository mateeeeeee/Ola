import std.assert;

// Test basic if-else statement
void TestIfElseBasic()
{
    int x = 10;
    int y = 20;

    if (x < y) Assert(true);
    else Assert(false);
}

// Test if-else statement with multiple conditions
void TestIfElseMultipleConditions()
{
    int a = 5;
    int b = 5;

    if (a > b)
    {
        Assert(false);
    }
    else if (a < b)
    {
        Assert(false);
    }
    else
    {
        Assert(true);
    }
}

// Test nested if-else statements
void TestNestedIfElse()
{
    int num = 42;

    if (num % 2 == 0)
    {
        if (num > 0)  Assert(true);
        else Assert(false);
    }
    else Assert(false);

}

// Test complex nested if-else scenario
void TestComplexNestedIfElse()
{
    int i = 1, j = 5, k = 5;

    if (i > 0)
    {
        if (j < 10)
        {
            if (k == 5) Assert(true); // Condition met: i > 0, j < 10, k == 5
            else  Assert(false); 
        }
        else
        {
            Assert(false);
        }
    }
    else
    {
        if (j == 0)  Assert(false); 
        else
        {
            if (k > 0) Assert(false); 
            else  Assert(false); 
        }
    }
}

// Test if-else statement with logical operators
void TestIfElseLogicalOperators()
{
    int value = 15;
    if (value > 10 && value < 20)
    {
        Assert(true);
    }
    else
    {
        Assert(false);
    }
}

// Main testing function
public int main()
{
    TestIfElseBasic();
    TestIfElseMultipleConditions();
    TestNestedIfElse();
    TestComplexNestedIfElse();
    TestIfElseLogicalOperators();

    return 0;
}