import std.assert;

// Globals for addition tests
int global_int_1 = 5;
int global_int_2 = 10;
int global_int_3 = 7;
int global_int_4 = 20;

// Globals for subtraction tests
int global_sub_1 = 15;
int global_sub_2 = 7;
int global_sub_3 = 3;
int global_sub_4 = 30;

// Globals for float tests
float global_float_1 = 3.5;
float global_float_2 = 2.5;
float global_float_3 = 1.2;
float global_float_4 = 5.0;

void TestIntAddition()
{
    // Adding literals
    int literal_result = 5 + 10;
    Assert(literal_result == 15);

    // Adding locals
    int local_a = 5;
    int local_b = 10;
    int local_result = local_a + local_b;
    Assert(local_result == 15);

    // Adding globals
    int global_result_1 = global_int_1 + global_int_2;
    Assert(global_result_1 == 15);

    // Mixing globals and locals
    int mix_result_1 = global_int_1 + local_b;
    Assert(mix_result_1 == 15);

    int mix_result_2 = local_a + global_int_3;
    Assert(mix_result_2 == 12);
}

void TestIntSubtraction()
{
    // Subtracting literals
    int literal_result = 15 - 7;
    Assert(literal_result == 8);

    // Subtracting locals
    int local_a = 15;
    int local_b = 7;
    int local_result = local_a - local_b;
    Assert(local_result == 8);

    // Subtracting globals
    int global_result_1 = global_sub_1 - global_sub_2;
    Assert(global_result_1 == 8);

    // Mixing globals and locals
    int mix_result_1 = global_sub_4 - local_b;
    Assert(mix_result_1 == 23);

    int mix_result_2 = local_a - global_sub_3;
    Assert(mix_result_2 == 12);
}

void TestFloatAddition()
{
   const float tolerance = 0.0001;
   
   // Adding literals
   float literal_result = 3.5 + 2.5;
   Assert(literal_result > 5.9999 && literal_result < 6.0001);
   
   // Adding locals
   float local_x = 3.5;
   float local_y = 2.5;
   float local_result = local_x + local_y;
   Assert(local_result > 5.9999 && local_result < 6.0001);
   
   // Adding globals
   float global_result_1 = global_float_1 + global_float_2;
   Assert(global_result_1 > 5.9999 && global_result_1 < 6.0001);
   
   // Mixing globals and locals
   float mix_result_1 = global_float_1 + local_y;
   Assert(mix_result_1 > 5.9999 && mix_result_1 < 6.0001);
   
   float mix_result_2 = local_x + global_float_3;
   Assert(mix_result_2 > 4.6999 && mix_result_2 < 4.7001);
}

void TestFloatSubtraction()
{
    const float tolerance = 0.0001;
    
    // Subtracting literals
    float literal_result = 5.0 - 2.5;
    Assert(literal_result > 2.4999 && literal_result < 2.5001);
    
    // Subtracting locals
    float local_x = 5.0;
    float local_y = 2.5;
    float local_result = local_x - local_y;
    Assert(local_result > 2.4999 && local_result < 2.5001);
    
    // Subtracting globals
    float global_result_1 = global_float_4 - global_float_2;
    Assert(global_result_1 > 2.4999 && global_result_1 < 2.5001);
    
    // Mixing globals and locals
    float mix_result_1 = global_float_4 - local_y;
    Assert(mix_result_1 > 2.4999 && mix_result_1 < 2.5001);
    
    float mix_result_2 = local_x - global_float_3;
    Assert(mix_result_2 > 3.7999 && mix_result_2 < 3.8001);
}

public int main()
{
    TestIntAddition();
    TestIntSubtraction();
    TestFloatAddition();
    TestFloatSubtraction();

    return 0;
}