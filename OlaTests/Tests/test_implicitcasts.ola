import std.assert;

// Test implicit cast when assigning and initializing
void TestImplicitCastAssignInit()
{
    int intVal = 42;
    float floatVal = intVal;
    bool boolVal = intVal;

    Assert(floatVal == 42.0);
    Assert(boolVal == true);

    floatVal = 3.14;
    intVal = floatVal;
    boolVal = floatVal;

    Assert(intVal == 3);
    Assert(boolVal == true);

    boolVal = true;
    intVal = boolVal;
    floatVal = boolVal;

    Assert(intVal == 1);
    Assert(floatVal == 1.0);
}

void TestImplicitCastParamBool(bool boolParam)
{
    Assert(boolParam == true);
}

void TestImplicitCastParamInt(int intParam)
{
     Assert(intParam == 1);
}

void TestImplicitCastParamFloat(float floatParam)
{
     Assert(floatParam == 1.0);
}

void TestImplicitCastParam()
{
    int arg = 1;
    float farg = 1.0;
    bool barg = true;

    TestImplicitCastParamBool(arg);
    TestImplicitCastParamBool(farg);
    TestImplicitCastParamBool(1);
    TestImplicitCastParamBool(1.0);
    
    TestImplicitCastParamInt(barg);
    TestImplicitCastParamInt(farg);
    TestImplicitCastParamInt(true);
    TestImplicitCastParamInt(1.0);

    TestImplicitCastParamFloat(arg);
    TestImplicitCastParamFloat(barg);
    TestImplicitCastParamFloat(1);
    TestImplicitCastParamFloat(true);
}


// Main testing function
public int main()
{
    TestImplicitCastAssignInit();
    TestImplicitCastParam();
    return 0;
}